* <div id="e5c1ef1" class="tab"><input type="checkbox" name="toggle" id="e5c1ef15e95677ee5eb43397ba32f1969035172a" class="toggle"><label for="e5c1ef15e95677ee5eb43397ba32f1969035172a" class="title"><div class="line"><span class="tree"></span><span class="content">e5c1ef1 Add a sprite for the python language</span></div></label><div class="patch">
[31m|[m 
[31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[31m|[m [1mindex 1acb052..6035b1f 100755[m
[31m|[m [1m--- a/gitfiti.py[m
[31m|[m [1m+++ b/gitfiti.py[m
[31m|[m [36m@@ -121,7 +121,7 @@[m [mHEART1 = [[m
[31m|[m    [1,3,4,4,4,3,1],[m
[31m|[m    [0,1,3,4,3,1,0],[m
[31m|[m    [0,0,1,3,1,0,0],[m
[31m|[m [31m-  [0,0,0,1,0,0,0],        [m
[31m|[m [32m+[m[32m  [0,0,0,1,0,0,0],[m
[31m|[m  ][m
[31m|[m  [m
[31m|[m  HEART2 = [[m
[31m|[m [36m@@ -131,7 +131,7 @@[m [mHEART2 = [[m
[31m|[m    [5,3,1,1,1,3,5],[m
[31m|[m    [0,5,3,1,3,5,0],[m
[31m|[m    [0,0,5,3,5,0,0],[m
[31m|[m [31m-  [0,0,0,5,0,0,0],        [m
[31m|[m [32m+[m[32m  [0,0,0,5,0,0,0],[m
[31m|[m  ][m
[31m|[m  [m
[31m|[m  HIREME = [[m
[31m|[m [36m@@ -184,6 +184,15 @@[m [mHEART_SHINY = [[m
[31m|[m    [0,0,0,4,0,0,0],[m
[31m|[m  ][m
[31m|[m  [m
[31m|[m [32m+[m[32mPYTHON = [[m
[31m|[m [32m+[m[32m    [0, 2, 2, 2, 2, 2, 0],[m
[31m|[m [32m+[m[32m    [2, 2, 2, 2, 2, 3, 4],[m
[31m|[m [32m+[m[32m    [2, 2, 2, 2, 2, 4, 4],[m
[31m|[m [32m+[m[32m    [2, 2, 3, 3, 3, 4, 4],[m
[31m|[m [32m+[m[32m    [2, 3, 4, 4, 4, 4, 4],[m
[31m|[m [32m+[m[32m    [2, 4, 4, 4, 4, 4, 4],[m
[31m|[m [32m+[m[32m    [0, 4, 4, 4, 4, 4, 0]][m
[31m|[m [32m+[m
[31m|[m  ASCII_TO_NUMBER = {[m
[31m|[m    '_': 0,[m
[31m|[m    '_': 1,[m
[31m|[m [36m@@ -237,8 +246,9 @@[m [mIMAGES = {[m
[31m|[m    'oneup_str': ONEUP_STR,[m
[31m|[m    'beer': BEER,[m
[31m|[m    'gliders': GLIDERS,[m
[31m|[m [31m-  'heart' : HEART, [m
[31m|[m [32m+[m[32m  'heart' : HEART,[m
[31m|[m    'heart_shiny' : HEART_SHINY,[m
[31m|[m [32m+[m[32m  'python': PYTHON,[m
[31m|[m  }[m
[31m|[m  [m
[31m|[m  SHELLS = {[m
[31m|[m [36m@@ -348,7 +358,7 @@[m [mdef generate_values_in_date_order(image, multiplier=1):[m
[31m|[m  [m
[31m|[m      for w in range(width):[m
[31m|[m          for h in range(height):[m
[31m|[m [31m-            yield image[h][w] * multiplier[m
[31m|[m [32m+[m[32m            yield image[h][w] * 16[m
[31m|[m  [m
[31m|[m  [m
[31m|[m  def commit(commitdate, shell):[m
[31m|[m [36m@@ -356,7 +366,7 @@[m [mdef commit(commitdate, shell):[m
[31m|[m          '''GIT_AUTHOR_DATE={0} GIT_COMMITTER_DATE={1} '''[m
[31m|[m          '''git commit --allow-empty -m "gitfiti" > /dev/null\n'''[m
[31m|[m      )[m
[31m|[m [31m-    [m
[31m|[m [32m+[m
[31m|[m      template_powershell = ([m
[31m|[m          '''$Env:GIT_AUTHOR_DATE="{0}"\n$Env:GIT_COMMITTER_DATE="{1}"\n'''[m
[31m|[m          '''git commit --allow-empty -m "gitfiti" | Out-Null\n'''[m
[31m|[m [36m@@ -488,9 +498,9 @@[m [mdef main():[m
[31m|[m          git_url = 'git@github.com'[m
[31m|[m      else:[m
[31m|[m          git_url = request_user_input('Enter Git URL like git@site.github.com: ')[m
[31m|[m [31m-        [m
[31m|[m [32m+[m
[31m|[m      shell = ''[m
[31m|[m [31m-    while shell not in SHELLS.keys(): [m
[31m|[m [32m+[m[32m    while shell not in SHELLS.keys():[m
[31m|[m          shell = request_user_input([m
[31m|[m              'Enter the target shell ({}): '.format(' or '.join(SHELLS.keys())))[m
[31m|[m  [m
[31m|[m 
* <div id="45d3174" class="tab"><input type="checkbox" name="toggle" id="45d317473239b59c79ed26a61d64ea6efe252df9" class="toggle"><label for="45d317473239b59c79ed26a61d64ea6efe252df9" class="title"><div class="line"><span class="tree"></span><span class="content">45d3174 shinier heart</span></div></label><div class="patch">
[31m|[m 
[31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[31m|[m [1mindex 2f76767..1acb052 100755[m
[31m|[m [1m--- a/gitfiti.py[m
[31m|[m [1m+++ b/gitfiti.py[m
[31m|[m [36m@@ -174,6 +174,16 @@[m [mHEART = [[m
[31m|[m    [0,0,0,4,0,0,0],[m
[31m|[m  ][m
[31m|[m  [m
[31m|[m [32m+[m[32mHEART_SHINY = [[m
[31m|[m [32m+[m[32m  [0,4,4,0,4,4,0],[m
[31m|[m [32m+[m[32m  [4,2,0,4,2,2,4],[m
[31m|[m [32m+[m[32m  [4,0,2,2,2,2,4],[m
[31m|[m [32m+[m[32m  [4,2,2,2,2,2,4],[m
[31m|[m [32m+[m[32m  [0,4,2,2,2,4,0],[m
[31m|[m [32m+[m[32m  [0,0,4,2,4,0,0],[m
[31m|[m [32m+[m[32m  [0,0,0,4,0,0,0],[m
[31m|[m [32m+[m[32m][m
[31m|[m [32m+[m
[31m|[m  ASCII_TO_NUMBER = {[m
[31m|[m    '_': 0,[m
[31m|[m    '_': 1,[m
[31m|[m [36m@@ -227,7 +237,8 @@[m [mIMAGES = {[m
[31m|[m    'oneup_str': ONEUP_STR,[m
[31m|[m    'beer': BEER,[m
[31m|[m    'gliders': GLIDERS,[m
[31m|[m [31m-  'heart' : HEART,[m
[31m|[m [32m+[m[32m  'heart' : HEART,[m[41m [m
[31m|[m [32m+[m[32m  'heart_shiny' : HEART_SHINY,[m
[31m|[m  }[m
[31m|[m  [m
[31m|[m  SHELLS = {[m
[31m|[m   
*   <div id="6eda4ec" class="tab"><input type="checkbox" name="toggle" id="6eda4ec8429f8f28e75587fd10a9d4e829659e1a" class="toggle"><label for="6eda4ec8429f8f28e75587fd10a9d4e829659e1a" class="title"><div class="line"><span class="tree"></span><span class="content">6eda4ec Merge branch 'x4m3-hi' into main Merging #52</span></div></label><div class="patch">
[32m|[m[33m\[m  
[32m|[m [33m|[m 
[32m|[m * <div id="dbfdb5c" class="tab"><input type="checkbox" name="toggle" id="dbfdb5cd88ba7730cbdd44bee40fdcce690d51f2" class="toggle"><label for="dbfdb5cd88ba7730cbdd44bee40fdcce690d51f2" class="title"><div class="line"><span class="tree"></span><span class="content">dbfdb5c udpated heart image</span></div></label><div class="patch">
[32m|[m [33m|[m 
[32m|[m [33m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[32m|[m [33m|[m [1mindex dc3cf56..2f76767 100755[m
[32m|[m [33m|[m [1m--- a/gitfiti.py[m
[32m|[m [33m|[m [1m+++ b/gitfiti.py[m
[32m|[m [33m|[m [36m@@ -168,7 +168,7 @@[m [mHEART = [[m
[32m|[m [33m|[m    [0,4,4,0,4,4,0],[m
[32m|[m [33m|[m    [4,2,2,4,2,2,4],[m
[32m|[m [33m|[m    [4,2,2,2,2,2,4],[m
[32m|[m [33m|[m [31m-  [4,0,2,2,2,2,4],[m
[32m|[m [33m|[m [32m+[m[32m  [4,2,2,2,2,2,4],[m
[32m|[m [33m|[m    [0,4,2,2,2,4,0],[m
[32m|[m [33m|[m    [0,0,4,2,4,0,0],[m
[32m|[m [33m|[m    [0,0,0,4,0,0,0],[m
[32m|[m [33m|[m 
[32m|[m * <div id="072b901" class="tab"><input type="checkbox" name="toggle" id="072b9018a4898fce08e4622e09c1110991008529" class="toggle"><label for="072b9018a4898fce08e4622e09c1110991008529" class="title"><div class="line"><span class="tree"></span><span class="content">072b901 added heart as an image option</span></div></label><div class="patch">
[32m|[m[32m/[m  
[32m|[m   
[32m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[32m|[m   [1mindex 7981d5c..dc3cf56 100755[m
[32m|[m   [1m--- a/gitfiti.py[m
[32m|[m   [1m+++ b/gitfiti.py[m
[32m|[m   [36m@@ -164,6 +164,16 @@[m [mGLIDERS = [[m
[32m|[m      [0,0,4,0,0,0,4,4,0,0,0,0,0,0],[m
[32m|[m    ][m
[32m|[m    [m
[32m|[m   [32m+[m[32mHEART = [[m
[32m|[m   [32m+[m[32m  [0,4,4,0,4,4,0],[m
[32m|[m   [32m+[m[32m  [4,2,2,4,2,2,4],[m
[32m|[m   [32m+[m[32m  [4,2,2,2,2,2,4],[m
[32m|[m   [32m+[m[32m  [4,0,2,2,2,2,4],[m
[32m|[m   [32m+[m[32m  [0,4,2,2,2,4,0],[m
[32m|[m   [32m+[m[32m  [0,0,4,2,4,0,0],[m
[32m|[m   [32m+[m[32m  [0,0,0,4,0,0,0],[m
[32m|[m   [32m+[m[32m][m
[32m|[m   [32m+[m
[32m|[m    ASCII_TO_NUMBER = {[m
[32m|[m      '_': 0,[m
[32m|[m      '_': 1,[m
[32m|[m   [36m@@ -217,6 +227,7 @@[m [mIMAGES = {[m
[32m|[m      'oneup_str': ONEUP_STR,[m
[32m|[m      'beer': BEER,[m
[32m|[m      'gliders': GLIDERS,[m
[32m|[m   [32m+[m[32m  'heart' : HEART,[m
[32m|[m    }[m
[32m|[m    [m
[32m|[m    SHELLS = {[m
[32m|[m   
*   <div id="63e28c8" class="tab"><input type="checkbox" name="toggle" id="63e28c8616c912af93b6980a8197c296542df7ec" class="toggle"><label for="63e28c8616c912af93b6980a8197c296542df7ec" class="title"><div class="line"><span class="tree"></span><span class="content">63e28c8 Merge pull request #70 from DenisBalan/master</span></div></label><div class="patch">
[34m|[m[35m\[m  
[34m|[m [35m|[m 
[34m|[m * <div id="13a8639" class="tab"><input type="checkbox" name="toggle" id="13a8639ad13b72625536a3b053606e1a02e4a934" class="toggle"><label for="13a8639ad13b72625536a3b053606e1a02e4a934" class="title"><div class="line"><span class="tree"></span><span class="content">13a8639 Add PSVandalism (Powershell wrapper for Pokrovsky)</span></div></label><div class="patch">
[34m|[m [35m|[m 
[34m|[m [35m|[m [1mdiff --git a/README.md b/README.md[m
[34m|[m [35m|[m [1mindex 1c33d5c..ce8308b 100644[m
[34m|[m [35m|[m [1m--- a/README.md[m
[34m|[m [35m|[m [1m+++ b/README.md[m
[34m|[m [35m|[m [36m@@ -65,6 +65,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m  #### Notable derivatives or mentions:[m
[34m|[m [35m|[m  - [Pikesley's](https://github.com/pikesley) Pokrovsky, which offers Github History Vandalism [as a Service!](http://pokrovsky.herokuapp.com/)[m
[34m|[m [35m|[m [32m+[m[32m- [PSVandalism](https://github.com/DenisBalan/PSVandalism) Wrapper around Pokrovsky, which makes possible vandalisming Github History from Powershell[m
[34m|[m [35m|[m  - [github-board](https://github.com/bayandin/github-board) commits gitfiti from easy templates[m
[34m|[m [35m|[m  - [ghdecoy](https://github.com/tickelton/ghdecoy) fills the contribution graph with random data (sneaky!)[m
[34m|[m [35m|[m  - [Gitfiti Painter](http://codepen.io/cbas/pen/vOXeKV) visual drawing tool for artists to easily create templates[m
[34m|[m [35m|[m   
* [35m|[m   <div id="a09773c" class="tab"><input type="checkbox" name="toggle" id="a09773cdbfa60cc14216544303b452bd81fe3806" class="toggle"><label for="a09773cdbfa60cc14216544303b452bd81fe3806" class="title"><div class="line"><span class="tree"></span><span class="content">a09773c Merge pull request #78 from christypacc21/new_images</span></div></label><div class="patch">
[36m|[m[1;31m\[m [35m\[m  
[36m|[m [1;31m|[m [35m|[m 
[36m|[m * [35m|[m <div id="b8cfd93" class="tab"><input type="checkbox" name="toggle" id="b8cfd93158fbbd199857376738d3309229bbd6e7" class="toggle"><label for="b8cfd93158fbbd199857376738d3309229bbd6e7" class="title"><div class="line"><span class="tree"></span><span class="content">b8cfd93 Added 2 images - heart1 and heart2</span></div></label><div class="patch">
[36m|[m [35m|[m[35m/[m  
[36m|[m [35m|[m   
[36m|[m [35m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [35m|[m   [1mindex eeb42a3..1587478 100755[m
[36m|[m [35m|[m   [1m--- a/gitfiti.py[m
[36m|[m [35m|[m   [1m+++ b/gitfiti.py[m
[36m|[m [35m|[m   [36m@@ -114,6 +114,26 @@[m [mHELLO = [[m
[36m|[m [35m|[m      [0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,4],[m
[36m|[m [35m|[m    ][m
[36m|[m [35m|[m    [m
[36m|[m [35m|[m   [32m+[m[32mHEART1 = [[m
[36m|[m [35m|[m   [32m+[m[32m  [0,1,1,0,1,1,0],[m
[36m|[m [35m|[m   [32m+[m[32m  [1,3,3,1,3,3,1],[m
[36m|[m [35m|[m   [32m+[m[32m  [1,3,4,3,4,3,1],[m
[36m|[m [35m|[m   [32m+[m[32m  [1,3,4,4,4,3,1],[m
[36m|[m [35m|[m   [32m+[m[32m  [0,1,3,4,3,1,0],[m
[36m|[m [35m|[m   [32m+[m[32m  [0,0,1,3,1,0,0],[m
[36m|[m [35m|[m   [32m+[m[32m  [0,0,0,1,0,0,0],[m[41m        [m
[36m|[m [35m|[m   [32m+[m[32m][m
[36m|[m [35m|[m   [32m+[m
[36m|[m [35m|[m   [32m+[m[32mHEART2 = [[m
[36m|[m [35m|[m   [32m+[m[32m  [0,5,5,0,5,5,0],[m
[36m|[m [35m|[m   [32m+[m[32m  [5,3,3,5,3,3,5],[m
[36m|[m [35m|[m   [32m+[m[32m  [5,3,1,3,1,3,5],[m
[36m|[m [35m|[m   [32m+[m[32m  [5,3,1,1,1,3,5],[m
[36m|[m [35m|[m   [32m+[m[32m  [0,5,3,1,3,5,0],[m
[36m|[m [35m|[m   [32m+[m[32m  [0,0,5,3,5,0,0],[m
[36m|[m [35m|[m   [32m+[m[32m  [0,0,0,5,0,0,0],[m[41m        [m
[36m|[m [35m|[m   [32m+[m[32m][m
[36m|[m [35m|[m   [32m+[m
[36m|[m [35m|[m    HIREME = [[m
[36m|[m [35m|[m      [1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[36m|[m [35m|[m      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[36m|[m [35m|[m   [36m@@ -191,6 +211,8 @@[m [mIMAGES = {[m
[36m|[m [35m|[m      'octocat': OCTOCAT,[m
[36m|[m [35m|[m      'octocat2': OCTOCAT2,[m
[36m|[m [35m|[m      'hello': HELLO,[m
[36m|[m [35m|[m   [32m+[m[32m  'heart1': HEART1,[m
[36m|[m [35m|[m   [32m+[m[32m  'heart2': HEART2,[m
[36m|[m [35m|[m      'hireme': HIREME,[m
[36m|[m [35m|[m      'oneup_str': ONEUP_STR,[m
[36m|[m [35m|[m      'beer': BEER,[m
[36m|[m [35m|[m 
* [35m|[m <div id="d4e1947" class="tab"><input type="checkbox" name="toggle" id="d4e1947362222970352eb8f907edae98c598ad33" class="toggle"><label for="d4e1947362222970352eb8f907edae98c598ad33" class="title"><div class="line"><span class="tree"></span><span class="content">d4e1947 update readme</span></div></label><div class="patch">
[1;31m|[m [35m|[m 
[1;31m|[m [35m|[m [1mdiff --git a/README.md b/README.md[m
[1;31m|[m [35m|[m [1mindex 1c6750c..6b78d58 100644[m
[1;31m|[m [35m|[m [1m--- a/README.md[m
[1;31m|[m [35m|[m [1m+++ b/README.md[m
[1;31m|[m [35m|[m [36m@@ -1,28 +1,30 @@[m
[1;31m|[m [35m|[m  [![Build Status](https://travis-ci.org/gelstudios/gitfiti.svg?branch=master)](https://travis-ci.org/gelstudios/gitfiti)[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-gitfiti _noun_ : Carefully crafted graffiti in a github commit history calendar.  [m
[1;31m|[m [35m|[m [32m+[m[32m**gitfiti** _noun_ : Carefully crafted graffiti in a github commit history calendar.[m[41m  [m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m  An example of gitfiti in the wild:  [m
[1;31m|[m [35m|[m [31m-![alt text](https://raw.github.com/gelstudios/gitfiti/master/gitfiti-screenshot.png "screenshot")[m
[1;31m|[m [35m|[m [32m+[m[32m![screenshot of gitfiti](https://raw.github.com/gelstudios/gitfiti/master/gitfiti-screenshot.png "screenshot")[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-`gitfiti.py` is a tool I wrote to decorate your github account's commit history calendar by (blatantly) abusing git's ability to accept commits _in the past_.[m
[1;31m|[m [35m|[m [32m+[m[32m`gitfiti.py` is a tool to decorate your github account's commit history calendar by (blatantly) abusing git's ability to accept commits _in the past_.[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-How?  `gitfiti.py` generates a script that makes commits with the GIT_AUTHOR_DATE and GIT_COMMITTER_DATE environment variables set for each targeted pixel.[m
[1;31m|[m [35m|[m [32m+[m[32mHow? `gitfiti.py` generates a script (powershell or bash) that makes commits with the GIT_AUTHOR_DATE and GIT_COMMITTER_DATE environment variables set for each targeted pixel.[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-Since this is likely to clobber repo's history, I highly recommend that you create a _new_ github repo when using gitfiti. Also, the generated bash script assumes you are using public-key authentication with git.[m
[1;31m|[m [35m|[m [32m+[m[32mSince this is likely to clobber repo's history, it is highly recommend that you create a _new_ github repo when using gitfiti. Also, the generated script assumes you are using public-key authentication with git.[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [32m+[m[32m### Pixel Art[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-### Pixel Art:[m
[1;31m|[m [35m|[m [31m-![alt text](https://raw.github.com/gelstudios/gitfiti/master/pixels-large.png "pixel art")  [m
[1;31m|[m [35m|[m [32m+[m[32m![pixel art examples](https://raw.github.com/gelstudios/gitfiti/master/pixels-large.png "pixel art")[m[41m  [m
[1;31m|[m [35m|[m  Included "art" from left to right: kitty, oneup, oneup2, hackerschool, octocat, octocat2[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-### Usage:[m
[1;31m|[m [35m|[m [32m+[m[32m### Usage[m
[1;31m|[m [35m|[m [32m+[m
[1;31m|[m [35m|[m  1. Create a new github repo to store your handiwork.[m
[1;31m|[m [35m|[m  2. Run `gitfiti.py` and follow the prompts for username, art selection, offset, and repo name.[m
[1;31m|[m [35m|[m  3. Run the generated `gitfiti.sh` or `gitfiti.ps1` from your home directory (or any non-git tracked dir) and watch it go to work.[m
[1;31m|[m [35m|[m  4. Wait... Seriously, you'll probably need to wait a day or two for the gitfiti to show in your commit graph.[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m  ### User Templates[m
[1;31m|[m [35m|[m [32m+[m
[1;31m|[m [35m|[m  The file format for personal templates is the following:[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m  1. Each template starts off with a ":" and then a name (eg. ":foo")[m
[1;31m|[m [35m|[m [36m@@ -47,15 +49,18 @@[m [mThis would output a 7 x 7 light green square with a single blank center square.[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m  Once you have a file with templates, enter its name when prompted and the templates will be added to the list of options.[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-### Removal:[m
[1;31m|[m [35m|[m [32m+[m[32m### Removal[m
[1;31m|[m [35m|[m [32m+[m
[1;31m|[m [35m|[m  Fortunately if you regret your gitfiti in the morning, removing it is fairly easy: delete the repo you created for your gitfiti (and wait).[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-### License:[m
[1;31m|[m [35m|[m [32m+[m[32m### License[m
[1;31m|[m [35m|[m [32m+[m
[1;31m|[m [35m|[m  gitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses/MIT)[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m  ---[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-#### Todo:[m
[1;31m|[m [35m|[m [32m+[m[32m#### Todo[m
[1;31m|[m [35m|[m [32m+[m
[1;31m|[m [35m|[m  - ~~Remove 'requests' dependency~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;31m|[m [35m|[m  - ~~Web interface~~ See several web-based things below[m
[1;31m|[m [35m|[m  - ~~Load "art" from a file~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;31m|[m [35m|[m [36m@@ -65,7 +70,8 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[1;31m|[m [35m|[m  - ...[m
[1;31m|[m [35m|[m  - Profit?[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [31m-#### Notable derivatives or mentions:[m
[1;31m|[m [35m|[m [32m+[m[32m#### Notable derivatives or mentions[m
[1;31m|[m [35m|[m [32m+[m
[1;31m|[m [35m|[m  - [Pikesley's](https://github.com/pikesley) Pokrovsky, which offers Github History Vandalism [as a Service!](http://pokrovsky.herokuapp.com/)[m
[1;31m|[m [35m|[m  - [github-board](https://github.com/bayandin/github-board) commits gitfiti from easy templates[m
[1;31m|[m [35m|[m  - [ghdecoy](https://github.com/tickelton/ghdecoy) fills the contribution graph with random data (sneaky!)[m
[1;31m|[m [35m|[m [36m@@ -74,8 +80,3 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[1;31m|[m [35m|[m  - [github-jack](https://github.com/tardypad/github-jack) a pure bash version with space invaders and shining creepypasta[m
[1;31m|[m [35m|[m  - [github-graffiti](https://github.com/mavrk/github-graffiti) a GUI editor with a bash script to allow custom designs on your commit map[m
[1;31m|[m [35m|[m  - Seen something else? Submit a pull request or open an issue![m
[1;31m|[m [35m|[m [31m-[m
[1;31m|[m [35m|[m [31m-[m
[1;31m|[m [35m|[m [31m-  [m
[1;31m|[m [35m|[m [31m-  [m
[1;31m|[m [35m|[m [31m-![alt text](http://f.cl.ly/items/0J463J0K1N020S1Q3E3l/er-small.png "tiny logo")[m
[1;31m|[m [35m|[m 
* [35m|[m <div id="1b213dc" class="tab"><input type="checkbox" name="toggle" id="1b213dc2fa88edf054edb3b5dd29a4423f18b6d1" class="toggle"><label for="1b213dc2fa88edf054edb3b5dd29a4423f18b6d1" class="title"><div class="line"><span class="tree"></span><span class="content">1b213dc update powershell template for new base branch</span></div></label><div class="patch">
[1;31m|[m [35m|[m 
[1;31m|[m [35m|[m [1mdiff --git a/README.md b/README.md[m
[1;31m|[m [35m|[m [1mindex 891eed4..1c6750c 100644[m
[1;31m|[m [35m|[m [1m--- a/README.md[m
[1;31m|[m [35m|[m [1m+++ b/README.md[m
[1;31m|[m [35m|[m [36m@@ -54,12 +54,14 @@[m [mFortunately if you regret your gitfiti in the morning, removing it is fairly eas[m
[1;31m|[m [35m|[m  gitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses/MIT)[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m  ---[m
[1;31m|[m [35m|[m [32m+[m
[1;31m|[m [35m|[m  #### Todo:[m
[1;31m|[m [35m|[m  - ~~Remove 'requests' dependency~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;31m|[m [35m|[m  - ~~Web interface~~ See several web-based things below[m
[1;31m|[m [35m|[m  - ~~Load "art" from a file~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;31m|[m [35m|[m  - Load commit content from a file[m
[1;31m|[m [35m|[m  - Text/alphabet option[m
[1;31m|[m [35m|[m [32m+[m[32m- ~~powershell support!~~ [_thanks axzn_](https://github.com/axzn)[m
[1;31m|[m [35m|[m  - ...[m
[1;31m|[m [35m|[m  - Profit?[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;31m|[m [35m|[m [1mindex 2db3e35..f6f38c1 100755[m
[1;31m|[m [35m|[m [1m--- a/gitfiti.py[m
[1;31m|[m [35m|[m [1m+++ b/gitfiti.py[m
[1;31m|[m [35m|[m [36m@@ -350,9 +350,10 @@[m [mdef fake_it(image, start_date, username, repo, git_url, shell, offset=0, multipl[m
[1;31m|[m [35m|[m          'New-Item gitfiti -ItemType file | Out-Null\n'[m
[1;31m|[m [35m|[m          'git add gitfiti\n'[m
[1;31m|[m [35m|[m          '{1}\n'[m
[1;31m|[m [35m|[m [32m+[m[32m        'git branch -M main\n'[m
[1;31m|[m [35m|[m          'git remote add origin {2}:{3}/$REPO.git\n'[m
[1;31m|[m [35m|[m [31m-        'git pull origin master\n'[m
[1;31m|[m [35m|[m [31m-        'git push -u origin master\n'[m
[1;31m|[m [35m|[m [32m+[m[32m        'git pull origin main\n'[m
[1;31m|[m [35m|[m [32m+[m[32m        'git push -u origin main\n'[m
[1;31m|[m [35m|[m      )[m
[1;31m|[m [35m|[m  [m
[1;31m|[m [35m|[m      template = template_bash if shell == 'bash' else template_powershell[m
[1;31m|[m [35m|[m   
* [35m|[m   <div id="6d8cc28" class="tab"><input type="checkbox" name="toggle" id="6d8cc28ca850feed376ab8d0f6e2311adb96d6db" class="toggle"><label for="6d8cc28ca850feed376ab8d0f6e2311adb96d6db" class="title"><div class="line"><span class="tree"></span><span class="content">6d8cc28 Merge branch 'main'</span></div></label><div class="patch">
[1;32m|[m[1;33m\[m [35m\[m  
[1;32m|[m [1;33m|[m [35m|[m 
[1;32m|[m * [35m|[m <div id="4ea2ff4" class="tab"><input type="checkbox" name="toggle" id="4ea2ff4e397a0c3f2e460a616885d0115ce4e1b4" class="toggle"><label for="4ea2ff4e397a0c3f2e460a616885d0115ce4e1b4" class="title"><div class="line"><span class="tree"></span><span class="content">4ea2ff4 update to support main as primary branch name</span></div></label><div class="patch">
[1;32m|[m [35m|[m[35m/[m  
[1;32m|[m [35m|[m   
[1;32m|[m [35m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;32m|[m [35m|[m   [1mindex eeb42a3..a17981a 100755[m
[1;32m|[m [35m|[m   [1m--- a/gitfiti.py[m
[1;32m|[m [35m|[m   [1m+++ b/gitfiti.py[m
[1;32m|[m [35m|[m   [36m@@ -322,9 +322,10 @@[m [mdef fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[1;32m|[m [35m|[m            'touch gitfiti\n'[m
[1;32m|[m [35m|[m            'git add gitfiti\n'[m
[1;32m|[m [35m|[m            '{1}\n'[m
[1;32m|[m [35m|[m   [32m+[m[32m        'git branch -M main\n'[m
[1;32m|[m [35m|[m            'git remote add origin {2}:{3}/$REPO.git\n'[m
[1;32m|[m [35m|[m   [31m-        'git pull origin master\n'[m
[1;32m|[m [35m|[m   [31m-        'git push -u origin master\n'[m
[1;32m|[m [35m|[m   [32m+[m[32m        'git pull origin main\n'[m
[1;32m|[m [35m|[m   [32m+[m[32m        'git push -u origin main\n'[m
[1;32m|[m [35m|[m        )[m
[1;32m|[m [35m|[m    [m
[1;32m|[m [35m|[m        strings = [][m
[1;32m|[m [35m|[m   
* [35m|[m   <div id="2c5486d" class="tab"><input type="checkbox" name="toggle" id="2c5486d31e4905eef5ddc633c37ec4d63c5923f3" class="toggle"><label for="2c5486d31e4905eef5ddc633c37ec4d63c5923f3" class="title"><div class="line"><span class="tree"></span><span class="content">2c5486d Merge pull request #74 from axzn/powershell-support</span></div></label><div class="patch">
[35m|[m[1;35m\[m [35m\[m  
[35m|[m [1;35m|[m[35m/[m  
[35m|[m[35m/[m[1;35m|[m   
[35m|[m [1;35m|[m 
[35m|[m * <div id="91686c4" class="tab"><input type="checkbox" name="toggle" id="91686c4272aab3c1a2f05f55bb96f682a13557a7" class="toggle"><label for="91686c4272aab3c1a2f05f55bb96f682a13557a7" class="title"><div class="line"><span class="tree"></span><span class="content">91686c4 support powershell as target shell</span></div></label><div class="patch">
[35m|[m[35m/[m  
[35m|[m   
[35m|[m   [1mdiff --git a/.gitignore b/.gitignore[m
[35m|[m   [1mindex b4d274e..3caa0d8 100644[m
[35m|[m   [1m--- a/.gitignore[m
[35m|[m   [1m+++ b/.gitignore[m
[35m|[m   [36m@@ -1,2 +1,3 @@[m
[35m|[m    *.pyc[m
[35m|[m    gitfiti.sh[m
[35m|[m   [32m+[m[32mgitfiti.ps1[m
[35m|[m   [1mdiff --git a/README.md b/README.md[m
[35m|[m   [1mindex 1c33d5c..891eed4 100644[m
[35m|[m   [1m--- a/README.md[m
[35m|[m   [1m+++ b/README.md[m
[35m|[m   [36m@@ -7,7 +7,7 @@[m [mAn example of gitfiti in the wild:[m
[35m|[m    [m
[35m|[m    `gitfiti.py` is a tool I wrote to decorate your github account's commit history calendar by (blatantly) abusing git's ability to accept commits _in the past_.[m
[35m|[m    [m
[35m|[m   [31m-How?  `gitfiti.py` generates a bash script: `gitfiti.sh` that makes commits with the GIT_AUTHOR_DATE and GIT_COMMITTER_DATE environment variables set for each targeted pixel.[m
[35m|[m   [32m+[m[32mHow?  `gitfiti.py` generates a script that makes commits with the GIT_AUTHOR_DATE and GIT_COMMITTER_DATE environment variables set for each targeted pixel.[m
[35m|[m    [m
[35m|[m    Since this is likely to clobber repo's history, I highly recommend that you create a _new_ github repo when using gitfiti. Also, the generated bash script assumes you are using public-key authentication with git.[m
[35m|[m    [m
[35m|[m   [36m@@ -19,7 +19,7 @@[m [mIncluded "art" from left to right: kitty, oneup, oneup2, hackerschool, octocat,[m
[35m|[m    ### Usage:[m
[35m|[m    1. Create a new github repo to store your handiwork.[m
[35m|[m    2. Run `gitfiti.py` and follow the prompts for username, art selection, offset, and repo name.[m
[35m|[m   [31m-3. Run the generated `gitfiti.sh` from your home directory (or any non-git tracked dir) and watch it go to work.[m
[35m|[m   [32m+[m[32m3. Run the generated `gitfiti.sh` or `gitfiti.ps1` from your home directory (or any non-git tracked dir) and watch it go to work.[m
[35m|[m    4. Wait... Seriously, you'll probably need to wait a day or two for the gitfiti to show in your commit graph.[m
[35m|[m    [m
[35m|[m    ### User Templates[m
[35m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m   [1mindex eeb42a3..005e634 100755[m
[35m|[m   [1m--- a/gitfiti.py[m
[35m|[m   [1m+++ b/gitfiti.py[m
[35m|[m   [36m@@ -197,6 +197,10 @@[m [mIMAGES = {[m
[35m|[m      'gliders': GLIDERS,[m
[35m|[m    }[m
[35m|[m    [m
[35m|[m   [32m+[m[32mSHELLS = {[m
[35m|[m   [32m+[m[32m  'bash': 'sh',[m
[35m|[m   [32m+[m[32m  'powershell': 'ps1',[m
[35m|[m   [32m+[m[32m}[m
[35m|[m    [m
[35m|[m    def load_images(img_names):[m
[35m|[m        """loads user images from given file(s)"""[m
[35m|[m   [36m@@ -303,16 +307,24 @@[m [mdef generate_values_in_date_order(image, multiplier=1):[m
[35m|[m                yield image[h][w] * multiplier[m
[35m|[m    [m
[35m|[m    [m
[35m|[m   [31m-def commit(commitdate):[m
[35m|[m   [31m-    template = ([m
[35m|[m   [32m+[m[32mdef commit(commitdate, shell):[m
[35m|[m   [32m+[m[32m    template_bash = ([m
[35m|[m            '''GIT_AUTHOR_DATE={0} GIT_COMMITTER_DATE={1} '''[m
[35m|[m            '''git commit --allow-empty -m "gitfiti" > /dev/null\n'''[m
[35m|[m        )[m
[35m|[m   [32m+[m[41m    [m
[35m|[m   [32m+[m[32m    template_powershell = ([m
[35m|[m   [32m+[m[32m        '''$Env:GIT_AUTHOR_DATE="{0}"\n$Env:GIT_COMMITTER_DATE="{1}"\n'''[m
[35m|[m   [32m+[m[32m        '''git commit --allow-empty -m "gitfiti" | Out-Null\n'''[m
[35m|[m   [32m+[m[32m    )[m
[35m|[m   [32m+[m
[35m|[m   [32m+[m[32m    template = template_bash if shell == 'bash' else template_powershell[m
[35m|[m   [32m+[m
[35m|[m        return template.format(commitdate.isoformat(), commitdate.isoformat())[m
[35m|[m    [m
[35m|[m    [m
[35m|[m   [31m-def fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[35m|[m   [31m-    template = ([m
[35m|[m   [32m+[m[32mdef fake_it(image, start_date, username, repo, git_url, shell, offset=0, multiplier=1):[m
[35m|[m   [32m+[m[32m    template_bash = ([m
[35m|[m            '#!/usr/bin/env bash\n'[m
[35m|[m            'REPO={0}\n'[m
[35m|[m            'git init $REPO\n'[m
[35m|[m   [36m@@ -327,11 +339,28 @@[m [mdef fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[35m|[m            'git push -u origin master\n'[m
[35m|[m        )[m
[35m|[m    [m
[35m|[m   [32m+[m[32m    template_powershell = ([m
[35m|[m   [32m+[m[32m        'cd $PSScriptRoot\n'[m
[35m|[m   [32m+[m[32m        '$REPO="{0}"\n'[m
[35m|[m   [32m+[m[32m        'git init $REPO\n'[m
[35m|[m   [32m+[m[32m        'cd $REPO\n'[m
[35m|[m   [32m+[m[32m        'New-Item README.md -ItemType file | Out-Null\n'[m
[35m|[m   [32m+[m[32m        'git add README.md\n'[m
[35m|[m   [32m+[m[32m        'New-Item gitfiti -ItemType file | Out-Null\n'[m
[35m|[m   [32m+[m[32m        'git add gitfiti\n'[m
[35m|[m   [32m+[m[32m        '{1}\n'[m
[35m|[m   [32m+[m[32m        'git remote add origin {2}:{3}/$REPO.git\n'[m
[35m|[m   [32m+[m[32m        'git pull origin master\n'[m
[35m|[m   [32m+[m[32m        'git push -u origin master\n'[m
[35m|[m   [32m+[m[32m    )[m
[35m|[m   [32m+[m
[35m|[m   [32m+[m[32m    template = template_bash if shell == 'bash' else template_powershell[m
[35m|[m   [32m+[m
[35m|[m        strings = [][m
[35m|[m        for value, date in zip(generate_values_in_date_order(image, multiplier),[m
[35m|[m                generate_next_dates(start_date, offset)):[m
[35m|[m            for _ in range(value):[m
[35m|[m   [31m-            strings.append(commit(date))[m
[35m|[m   [32m+[m[32m            strings.append(commit(date, shell))[m
[35m|[m    [m
[35m|[m        return template.format(repo, ''.join(strings), git_url, username)[m
[35m|[m    [m
[35m|[m   [36m@@ -413,12 +442,18 @@[m [mdef main():[m
[35m|[m            git_url = 'git@github.com'[m
[35m|[m        else:[m
[35m|[m            git_url = request_user_input('Enter Git URL like git@site.github.com: ')[m
[35m|[m   [32m+[m[41m        [m
[35m|[m   [32m+[m[32m    shell = ''[m
[35m|[m   [32m+[m[32m    while shell not in SHELLS.keys():[m[41m [m
[35m|[m   [32m+[m[32m        shell = request_user_input([m
[35m|[m   [32m+[m[32m            'Enter the target shell ({}): '.format(' or '.join(SHELLS.keys())))[m
[35m|[m    [m
[35m|[m   [31m-    output = fake_it(image, start_date, username, repo, git_url, offset,[m
[35m|[m   [32m+[m[32m    output = fake_it(image, start_date, username, repo, git_url, shell, offset,[m
[35m|[m                         fake_it_multiplier)[m
[35m|[m    [m
[35m|[m   [31m-    save(output, 'gitfiti.sh')[m
[35m|[m   [31m-    print('gitfiti.sh saved.')[m
[35m|[m   [32m+[m[32m    output_filename = 'gitfiti.{}'.format(SHELLS[shell])[m
[35m|[m   [32m+[m[32m    save(output, output_filename)[m
[35m|[m   [32m+[m[32m    print('{} saved.'.format(output_filename))[m
[35m|[m        print('Create a new(!) repo named {0} at {1} and run the script'.format(repo, git_base))[m
[35m|[m    [m
[35m|[m    [m
[35m|[m   
[35m|[m * <div id="f5dedda" class="tab"><input type="checkbox" name="toggle" id="f5dedda57b4dcfb2a5cc27d26651a4417b9ad9f1" class="toggle"><label for="f5dedda57b4dcfb2a5cc27d26651a4417b9ad9f1" class="title"><div class="line"><span class="tree"></span><span class="content">f5dedda Let the user choose between the default date and a custom input</span></div></label><div class="patch">
[35m|[m [1;36m|[m 
[35m|[m [1;36m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m [1;36m|[m [1mindex b2629e3..6a0bb13 100755[m
[35m|[m [1;36m|[m [1m--- a/gitfiti.py[m
[35m|[m [1;36m|[m [1m+++ b/gitfiti.py[m
[35m|[m [1;36m|[m [36m@@ -272,15 +272,15 @@[m [mdef calculate_multiplier(max_commits):[m
[35m|[m [1;36m|[m      return m[m
[35m|[m [1;36m|[m  [m
[35m|[m [1;36m|[m  [m
[35m|[m [1;36m|[m [31m-def get_start_date():[m
[35m|[m [1;36m|[m [31m-    """returns a datetime object for the first sunday after one year ago today[m
[35m|[m [1;36m|[m [31m-    at 12:00 noon"""[m
[35m|[m [1;36m|[m [32m+[m[32mdef get_default_date():[m
[35m|[m [1;36m|[m [32m+[m[32m    """returns a datetime object from one year ago, at 12:00 noon"""[m
[35m|[m [1;36m|[m      today = datetime.today()[m
[35m|[m [1;36m|[m [31m-    date = datetime(today.year - 1, today.month, today.day, 12)[m
[35m|[m [1;36m|[m [32m+[m[32m    return datetime(today.year - 1, today.month, today.day, 12)[m
[35m|[m [1;36m|[m  [m
[35m|[m [1;36m|[m [32m+[m[32mdef calculate_next_sunday(date):[m
[35m|[m [1;36m|[m [32m+[m[32m    """returns a datetime object for the first sunday after the input date"""[m
[35m|[m [1;36m|[m      return date + timedelta(6 - datetime.weekday(date))[m
[35m|[m [1;36m|[m  [m
[35m|[m [1;36m|[m [31m-[m
[35m|[m [1;36m|[m  def generate_next_dates(start_date, offset=0):[m
[35m|[m [1;36m|[m      """generator that returns the next date, requires a datetime object as[m
[35m|[m [1;36m|[m      input. The offset is in weeks"""[m
[35m|[m [1;36m|[m [36m@@ -401,7 +401,15 @@[m [mdef main():[m
[35m|[m [1;36m|[m          except:[m
[35m|[m [1;36m|[m              image = IMAGES[image_name_fallback][m
[35m|[m [1;36m|[m  [m
[35m|[m [1;36m|[m [31m-    start_date = get_start_date()[m
[35m|[m [1;36m|[m [32m+[m[32m    print('Enter the origin date (blank to start today, one year ago)')[m
[35m|[m [1;36m|[m [32m+[m[32m    try:[m
[35m|[m [1;36m|[m [32m+[m[32m        input_date = datetime.strptime([m
[35m|[m [1;36m|[m [32m+[m[32m            request_user_input('yyyy-mm-dd: '),[m
[35m|[m [1;36m|[m [32m+[m[32m            '%Y-%m-%d')[m
[35m|[m [1;36m|[m [32m+[m[32m    except ValueError:[m
[35m|[m [1;36m|[m [32m+[m[32m        input_date = get_default_date()[m
[35m|[m [1;36m|[m [32m+[m[32m    start_date = calculate_next_sunday(input_date)[m
[35m|[m [1;36m|[m [32m+[m
[35m|[m [1;36m|[m      fake_it_multiplier = m * match[m
[35m|[m [1;36m|[m  [m
[35m|[m [1;36m|[m      if not ghe:[m
[35m|[m [1;36m|[m 
[35m|[m * <div id="0584fcf" class="tab"><input type="checkbox" name="toggle" id="0584fcf844d53f3c0edc6688d86216f1b2292443" class="toggle"><label for="0584fcf844d53f3c0edc6688d86216f1b2292443" class="title"><div class="line"><span class="tree"></span><span class="content">0584fcf Simplify date calculations</span></div></label><div class="patch">
[35m|[m[35m/[m  
[35m|[m   
[35m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m   [1mindex eeb42a3..b2629e3 100755[m
[35m|[m   [1m--- a/gitfiti.py[m
[35m|[m   [1m+++ b/gitfiti.py[m
[35m|[m   [36m@@ -277,13 +277,8 @@[m [mdef get_start_date():[m
[35m|[m        at 12:00 noon"""[m
[35m|[m        today = datetime.today()[m
[35m|[m        date = datetime(today.year - 1, today.month, today.day, 12)[m
[35m|[m   [31m-    weekday = datetime.weekday(date)[m
[35m|[m    [m
[35m|[m   [31m-    while weekday < 6:[m
[35m|[m   [31m-        date = date + timedelta(1)[m
[35m|[m   [31m-        weekday = datetime.weekday(date)[m
[35m|[m   [31m-[m
[35m|[m   [31m-    return date[m
[35m|[m   [32m+[m[32m    return date + timedelta(6 - datetime.weekday(date))[m
[35m|[m    [m
[35m|[m    [m
[35m|[m    def generate_next_dates(start_date, offset=0):[m
[35m|[m   
*   <div id="d9af21c" class="tab"><input type="checkbox" name="toggle" id="d9af21cc6b472a5aa5120b68c796fdbb09f7058f" class="toggle"><label for="d9af21cc6b472a5aa5120b68c796fdbb09f7058f" class="title"><div class="line"><span class="tree"></span><span class="content">d9af21c Merge pull request #59 from mavrk/master</span></div></label><div class="patch">
[31m|[m[32m\[m  
[31m|[m [32m|[m 
[31m|[m * <div id="6ac49aa" class="tab"><input type="checkbox" name="toggle" id="6ac49aac2f7ac0532aebbaf9d49661c0dba902b0" class="toggle"><label for="6ac49aac2f7ac0532aebbaf9d49661c0dba902b0" class="title"><div class="line"><span class="tree"></span><span class="content">6ac49aa Update README.md</span></div></label><div class="patch">
[31m|[m[31m/[m  
[31m|[m   
[31m|[m   [1mdiff --git a/README.md b/README.md[m
[31m|[m   [1mindex 278df82..1c33d5c 100644[m
[31m|[m   [1m--- a/README.md[m
[31m|[m   [1m+++ b/README.md[m
[31m|[m   [36m@@ -70,6 +70,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[31m|[m    - [Gitfiti Painter](http://codepen.io/cbas/pen/vOXeKV) visual drawing tool for artists to easily create templates[m
[31m|[m    - [git-draw](https://github.com/ben174/git-draw) a Chrome extension which will allow you to freely draw on your commit map(!)[m
[31m|[m    - [github-jack](https://github.com/tardypad/github-jack) a pure bash version with space invaders and shining creepypasta[m
[31m|[m   [32m+[m[32m- [github-graffiti](https://github.com/mavrk/github-graffiti) a GUI editor with a bash script to allow custom designs on your commit map[m
[31m|[m    - Seen something else? Submit a pull request or open an issue![m
[31m|[m    [m
[31m|[m    [m
[31m|[m   
*   <div id="a686cc5" class="tab"><input type="checkbox" name="toggle" id="a686cc5bcbfc65129d9ee7cb0f57a4978668ea30" class="toggle"><label for="a686cc5bcbfc65129d9ee7cb0f57a4978668ea30" class="title"><div class="line"><span class="tree"></span><span class="content">a686cc5 Merge pull request #57 from veggiedefender/master</span></div></label><div class="patch">
[33m|[m[34m\[m  
[33m|[m [34m|[m 
[33m|[m * <div id="84e75e0" class="tab"><input type="checkbox" name="toggle" id="84e75e0b87d9fa5386a388a488f357e0a309c192" class="toggle"><label for="84e75e0b87d9fa5386a388a488f357e0a309c192" class="title"><div class="line"><span class="tree"></span><span class="content">84e75e0 Add gliders template</span></div></label><div class="patch">
[33m|[m [34m|[m 
[33m|[m [34m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[33m|[m [34m|[m [1mindex 248a6ab..eeb42a3 100755[m
[33m|[m [34m|[m [1m--- a/gitfiti.py[m
[33m|[m [34m|[m [1m+++ b/gitfiti.py[m
[33m|[m [34m|[m [36m@@ -134,6 +134,15 @@[m [mBEER = [[m
[33m|[m [34m|[m    [0,0,2,2,2,2,0,3,3,3,0,0,3,3,3,0,3,3,3,0,3,0,0,3,0],[m
[33m|[m [34m|[m  ][m
[33m|[m [34m|[m  [m
[33m|[m [34m|[m [32m+[m[32mGLIDERS = [[m
[33m|[m [34m|[m [32m+[m[32m  [0,0,0,4,0,4,0,0,0,0,4,0,0,0],[m
[33m|[m [34m|[m [32m+[m[32m  [0,4,0,4,0,0,4,4,0,0,0,4,0,0],[m
[33m|[m [34m|[m [32m+[m[32m  [0,0,4,4,0,4,4,0,0,4,4,4,0,0],[m
[33m|[m [34m|[m [32m+[m[32m  [0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[33m|[m [34m|[m [32m+[m[32m  [0,4,0,4,0,0,0,4,0,0,0,0,0,0],[m
[33m|[m [34m|[m [32m+[m[32m  [0,0,4,4,0,4,0,4,0,0,0,0,0,0],[m
[33m|[m [34m|[m [32m+[m[32m  [0,0,4,0,0,0,4,4,0,0,0,0,0,0],[m
[33m|[m [34m|[m [32m+[m[32m][m
[33m|[m [34m|[m  [m
[33m|[m [34m|[m  ASCII_TO_NUMBER = {[m
[33m|[m [34m|[m    '_': 0,[m
[33m|[m [34m|[m [36m@@ -185,6 +194,7 @@[m [mIMAGES = {[m
[33m|[m [34m|[m    'hireme': HIREME,[m
[33m|[m [34m|[m    'oneup_str': ONEUP_STR,[m
[33m|[m [34m|[m    'beer': BEER,[m
[33m|[m [34m|[m [32m+[m[32m  'gliders': GLIDERS,[m
[33m|[m [34m|[m  }[m
[33m|[m [34m|[m  [m
[33m|[m [34m|[m  [m
[33m|[m [34m|[m 
[33m|[m * <div id="2a908ac" class="tab"><input type="checkbox" name="toggle" id="2a908acf05509037700c934ee48979ba2560aeae" class="toggle"><label for="2a908acf05509037700c934ee48979ba2560aeae" class="title"><div class="line"><span class="tree"></span><span class="content">2a908ac Set execute permissions on generated script</span></div></label><div class="patch">
[33m|[m[33m/[m  
[33m|[m   
[33m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[33m|[m   [1mindex 5519ab2..248a6ab 100755[m
[33m|[m   [1m--- a/gitfiti.py[m
[33m|[m   [1m+++ b/gitfiti.py[m
[33m|[m   [36m@@ -13,6 +13,7 @@[m [mfrom datetime import datetime, timedelta[m
[33m|[m    import itertools[m
[33m|[m    import json[m
[33m|[m    import math[m
[33m|[m   [32m+[m[32mimport os[m
[33m|[m    try:[m
[33m|[m        # Python 3+[m
[33m|[m        from urllib.error import HTTPError, URLError[m
[33m|[m   [36m@@ -329,6 +330,7 @@[m [mdef save(output, filename):[m
[33m|[m        """Saves the list to a given filename"""[m
[33m|[m        with open(filename, 'w') as f:[m
[33m|[m            f.write(output)[m
[33m|[m   [32m+[m[32m    os.chmod(filename, 0o755) # add execute permissions[m
[33m|[m    [m
[33m|[m    [m
[33m|[m    def request_user_input(prompt='> '):[m
[33m|[m   
*   <div id="af7c6f4" class="tab"><input type="checkbox" name="toggle" id="af7c6f4f8ee5f0db9feca898e664e7433aa715e8" class="toggle"><label for="af7c6f4f8ee5f0db9feca898e664e7433aa715e8" class="title"><div class="line"><span class="tree"></span><span class="content">af7c6f4 Merge pull request #55 from gmarmstrong/env-bash</span></div></label><div class="patch">
[35m|[m[36m\[m  
[35m|[m [36m|[m 
[35m|[m * <div id="3001c5c" class="tab"><input type="checkbox" name="toggle" id="3001c5c18990f085414dbb14c9a51593edb8721c" class="toggle"><label for="3001c5c18990f085414dbb14c9a51593edb8721c" class="title"><div class="line"><span class="tree"></span><span class="content">3001c5c Replace "/bin/bash" with "/usr/bin/env bash"</span></div></label><div class="patch">
[35m|[m[35m/[m  
[35m|[m   
[35m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m   [1mindex f30d193..5519ab2 100755[m
[35m|[m   [1m--- a/gitfiti.py[m
[35m|[m   [1m+++ b/gitfiti.py[m
[35m|[m   [36m@@ -302,7 +302,7 @@[m [mdef commit(commitdate):[m
[35m|[m    [m
[35m|[m    def fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[35m|[m        template = ([m
[35m|[m   [31m-        '#!/bin/bash\n'[m
[35m|[m   [32m+[m[32m        '#!/usr/bin/env bash\n'[m
[35m|[m            'REPO={0}\n'[m
[35m|[m            'git init $REPO\n'[m
[35m|[m            'cd $REPO\n'[m
[35m|[m   
*   <div id="2e2f9ff" class="tab"><input type="checkbox" name="toggle" id="2e2f9fff3ba56b7ed51e33c1f3e7c1470085c22e" class="toggle"><label for="2e2f9fff3ba56b7ed51e33c1f3e7c1470085c22e" class="title"><div class="line"><span class="tree"></span><span class="content">2e2f9ff Merge pull request #54 from irishshagua/Add_New_Template</span></div></label><div class="patch">
[1;31m|[m[1;32m\[m  
[1;31m|[m [1;32m|[m 
[1;31m|[m * <div id="d605712" class="tab"><input type="checkbox" name="toggle" id="d605712886c833b00773f7c7ba48520ba8488c7e" class="toggle"><label for="d605712886c833b00773f7c7ba48520ba8488c7e" class="title"><div class="line"><span class="tree"></span><span class="content">d605712 Add new beer template</span></div></label><div class="patch">
[1;31m|[m[1;31m/[m  
[1;31m|[m   
[1;31m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;31m|[m   [1mindex 14b1f4d..f30d193 100755[m
[1;31m|[m   [1m--- a/gitfiti.py[m
[1;31m|[m   [1m+++ b/gitfiti.py[m
[1;31m|[m   [36m@@ -123,6 +123,16 @@[m [mHIREME = [[m
[1;31m|[m      [1,0,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1],[m
[1;31m|[m    ][m
[1;31m|[m    [m
[1;31m|[m   [32m+[m[32mBEER = [[m
[1;31m|[m   [32m+[m[32m  [0,0,0,0,0,0,0,3,3,3,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0],[m
[1;31m|[m   [32m+[m[32m  [0,0,1,1,1,1,0,3,0,0,3,0,3,0,0,0,3,0,0,0,3,0,0,3,0],[m
[1;31m|[m   [32m+[m[32m  [0,2,2,2,2,2,0,3,0,0,3,0,3,0,0,0,3,0,0,0,3,0,0,3,0],[m
[1;31m|[m   [32m+[m[32m  [2,0,2,2,2,2,0,3,3,3,0,0,3,3,3,0,3,3,3,0,3,3,3,0,0],[m
[1;31m|[m   [32m+[m[32m  [2,0,2,2,2,2,0,3,0,0,3,0,3,0,0,0,3,0,0,0,3,0,3,0,0],[m
[1;31m|[m   [32m+[m[32m  [0,2,2,2,2,2,0,3,0,0,3,0,3,0,0,0,3,0,0,0,3,0,0,3,0],[m
[1;31m|[m   [32m+[m[32m  [0,0,2,2,2,2,0,3,3,3,0,0,3,3,3,0,3,3,3,0,3,0,0,3,0],[m
[1;31m|[m   [32m+[m[32m][m
[1;31m|[m   [32m+[m
[1;31m|[m    [m
[1;31m|[m    ASCII_TO_NUMBER = {[m
[1;31m|[m      '_': 0,[m
[1;31m|[m   [36m@@ -173,6 +183,7 @@[m [mIMAGES = {[m
[1;31m|[m      'hello': HELLO,[m
[1;31m|[m      'hireme': HIREME,[m
[1;31m|[m      'oneup_str': ONEUP_STR,[m
[1;31m|[m   [32m+[m[32m  'beer': BEER,[m
[1;31m|[m    }[m
[1;31m|[m    [m
[1;31m|[m    [m
[1;31m|[m   
*   <div id="53cb8c6" class="tab"><input type="checkbox" name="toggle" id="53cb8c69fb0cfaf9846c179ebff570ccaf03ce4d" class="toggle"><label for="53cb8c69fb0cfaf9846c179ebff570ccaf03ce4d" class="title"><div class="line"><span class="tree"></span><span class="content">53cb8c6 Merge pull request #51 from mxm/master</span></div></label><div class="patch">
[1;33m|[m[1;34m\[m  
[1;33m|[m [1;34m|[m 
[1;33m|[m * <div id="7ef5f32" class="tab"><input type="checkbox" name="toggle" id="7ef5f3202510d46a20b8e639ac3df7cf468e439b" class="toggle"><label for="7ef5f3202510d46a20b8e639ac3df7cf468e439b" class="title"><div class="line"><span class="tree"></span><span class="content">7ef5f32 Adjust final message</span></div></label><div class="patch">
[1;33m|[m[1;33m/[m  
[1;33m|[m   
[1;33m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;33m|[m   [1mindex e0bbfea..14b1f4d 100755[m
[1;33m|[m   [1m--- a/gitfiti.py[m
[1;33m|[m   [1m+++ b/gitfiti.py[m
[1;33m|[m   [36m@@ -396,7 +396,7 @@[m [mdef main():[m
[1;33m|[m    [m
[1;33m|[m        save(output, 'gitfiti.sh')[m
[1;33m|[m        print('gitfiti.sh saved.')[m
[1;33m|[m   [31m-    print('Create a new(!) repo at {0}new and run the script'.format(git_base))[m
[1;33m|[m   [32m+[m[32m    print('Create a new(!) repo named {0} at {1} and run the script'.format(repo, git_base))[m
[1;33m|[m    [m
[1;33m|[m    [m
[1;33m|[m    if __name__ == '__main__':[m
[1;33m|[m   
[1;33m|[m * <div id="d8ec59c" class="tab"><input type="checkbox" name="toggle" id="d8ec59cb2341d7bbe90ef4d960942da1f2977713" class="toggle"><label for="d8ec59cb2341d7bbe90ef4d960942da1f2977713" class="title"><div class="line"><span class="tree"></span><span class="content">d8ec59c more shiny</span></div></label><div class="patch">
[1;33m|[m [1;35m|[m 
[1;33m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;33m|[m [1;35m|[m [1mindex e5e141e..8e0a039 100755[m
[1;33m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;33m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;33m|[m [1;35m|[m [36m@@ -135,8 +135,8 @@[m [mHEART = [[m
[1;33m|[m [1;35m|[m  [m
[1;33m|[m [1;35m|[m  HEART_SHINY = [[m
[1;33m|[m [1;35m|[m    [0,4,4,0,4,4,0],[m
[1;33m|[m [1;35m|[m [31m-  [4,2,1,4,2,2,4],[m
[1;33m|[m [1;35m|[m [31m-  [4,1,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [4,2,0,4,2,2,4],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [4,0,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m    [4,2,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m    [0,4,2,2,2,4,0],[m
[1;33m|[m [1;35m|[m    [0,0,4,2,4,0,0],[m
[1;33m|[m [1;35m|[m 
[1;33m|[m * <div id="5feb179" class="tab"><input type="checkbox" name="toggle" id="5feb179da50b275c535d490fa01d1de4b521d34a" class="toggle"><label for="5feb179da50b275c535d490fa01d1de4b521d34a" class="title"><div class="line"><span class="tree"></span><span class="content">5feb179 heart + heart shiny</span></div></label><div class="patch">
[1;33m|[m [1;35m|[m 
[1;33m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;33m|[m [1;35m|[m [1mindex 3affb98..e5e141e 100755[m
[1;33m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;33m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;33m|[m [1;35m|[m [36m@@ -127,12 +127,21 @@[m [mHEART = [[m
[1;33m|[m [1;35m|[m    [0,4,4,0,4,4,0],[m
[1;33m|[m [1;35m|[m    [4,2,2,4,2,2,4],[m
[1;33m|[m [1;35m|[m    [4,2,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m [31m-  [4,0,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [4,2,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m    [0,4,2,2,2,4,0],[m
[1;33m|[m [1;35m|[m    [0,0,4,2,4,0,0],[m
[1;33m|[m [1;35m|[m    [0,0,0,4,0,0,0],[m
[1;33m|[m [1;35m|[m  ][m
[1;33m|[m [1;35m|[m  [m
[1;33m|[m [1;35m|[m [32m+[m[32mHEART_SHINY = [[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [0,4,4,0,4,4,0],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [4,2,1,4,2,2,4],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [4,1,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [4,2,2,2,2,2,4],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [0,4,2,2,2,4,0],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [0,0,4,2,4,0,0],[m
[1;33m|[m [1;35m|[m [32m+[m[32m  [0,0,0,4,0,0,0],[m
[1;33m|[m [1;35m|[m [32m+[m[32m][m
[1;33m|[m [1;35m|[m  [m
[1;33m|[m [1;35m|[m  ASCII_TO_NUMBER = {[m
[1;33m|[m [1;35m|[m    '_': 0,[m
[1;33m|[m [1;35m|[m [36m@@ -184,6 +193,7 @@[m [mIMAGES = {[m
[1;33m|[m [1;35m|[m    'hireme': HIREME,[m
[1;33m|[m [1;35m|[m    'oneup_str': ONEUP_STR,[m
[1;33m|[m [1;35m|[m    'heart' : HEART,[m
[1;33m|[m [1;35m|[m [32m+[m[32m  'heart_shiny' : HEART_SHINY,[m
[1;33m|[m [1;35m|[m  }[m
[1;33m|[m [1;35m|[m  [m
[1;33m|[m [1;35m|[m  [m
[1;33m|[m [1;35m|[m 
[1;33m|[m * <div id="62a3a3f" class="tab"><input type="checkbox" name="toggle" id="62a3a3f8fc03e634c4252fe004c9a65888bbfd64" class="toggle"><label for="62a3a3f8fc03e634c4252fe004c9a65888bbfd64" class="title"><div class="line"><span class="tree"></span><span class="content">62a3a3f added heart as an image option</span></div></label><div class="patch">
[1;33m|[m[1;33m/[m  
[1;33m|[m   
[1;33m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;33m|[m   [1mindex e0bbfea..3affb98 100755[m
[1;33m|[m   [1m--- a/gitfiti.py[m
[1;33m|[m   [1m+++ b/gitfiti.py[m
[1;33m|[m   [36m@@ -123,6 +123,16 @@[m [mHIREME = [[m
[1;33m|[m      [1,0,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1],[m
[1;33m|[m    ][m
[1;33m|[m    [m
[1;33m|[m   [32m+[m[32mHEART = [[m
[1;33m|[m   [32m+[m[32m  [0,4,4,0,4,4,0],[m
[1;33m|[m   [32m+[m[32m  [4,2,2,4,2,2,4],[m
[1;33m|[m   [32m+[m[32m  [4,2,2,2,2,2,4],[m
[1;33m|[m   [32m+[m[32m  [4,0,2,2,2,2,4],[m
[1;33m|[m   [32m+[m[32m  [0,4,2,2,2,4,0],[m
[1;33m|[m   [32m+[m[32m  [0,0,4,2,4,0,0],[m
[1;33m|[m   [32m+[m[32m  [0,0,0,4,0,0,0],[m
[1;33m|[m   [32m+[m[32m][m
[1;33m|[m   [32m+[m
[1;33m|[m    [m
[1;33m|[m    ASCII_TO_NUMBER = {[m
[1;33m|[m      '_': 0,[m
[1;33m|[m   [36m@@ -173,6 +183,7 @@[m [mIMAGES = {[m
[1;33m|[m      'hello': HELLO,[m
[1;33m|[m      'hireme': HIREME,[m
[1;33m|[m      'oneup_str': ONEUP_STR,[m
[1;33m|[m   [32m+[m[32m  'heart' : HEART,[m
[1;33m|[m    }[m
[1;33m|[m    [m
[1;33m|[m    [m
[1;33m|[m 
* <div id="c853d1c" class="tab"><input type="checkbox" name="toggle" id="c853d1cc297f09e861e03eea1ecbde9915886055" class="toggle"><label for="c853d1cc297f09e861e03eea1ecbde9915886055" class="title"><div class="line"><span class="tree"></span><span class="content">c853d1c Update README.md</span></div></label><div class="patch">
[1;35m|[m 
[1;35m|[m [1mdiff --git a/README.md b/README.md[m
[1;35m|[m [1mindex 05c5e9d..278df82 100644[m
[1;35m|[m [1m--- a/README.md[m
[1;35m|[m [1m+++ b/README.md[m
[1;35m|[m [36m@@ -69,6 +69,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[1;35m|[m  - [ghdecoy](https://github.com/tickelton/ghdecoy) fills the contribution graph with random data (sneaky!)[m
[1;35m|[m  - [Gitfiti Painter](http://codepen.io/cbas/pen/vOXeKV) visual drawing tool for artists to easily create templates[m
[1;35m|[m  - [git-draw](https://github.com/ben174/git-draw) a Chrome extension which will allow you to freely draw on your commit map(!)[m
[1;35m|[m [32m+[m[32m- [github-jack](https://github.com/tardypad/github-jack) a pure bash version with space invaders and shining creepypasta[m
[1;35m|[m  - Seen something else? Submit a pull request or open an issue![m
[1;35m|[m  [m
[1;35m|[m  [m
[1;35m|[m   
*   <div id="9feaf24" class="tab"><input type="checkbox" name="toggle" id="9feaf24a189e19fd46a1730351afddca53650b46" class="toggle"><label for="9feaf24a189e19fd46a1730351afddca53650b46" class="title"><div class="line"><span class="tree"></span><span class="content">9feaf24 Merge pull request #48 from bryant1410/master</span></div></label><div class="patch">
[1;36m|[m[31m\[m  
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="a99941e" class="tab"><input type="checkbox" name="toggle" id="a99941e25e9871fc61f4392f2cd7839b5c6f251d" class="toggle"><label for="a99941e25e9871fc61f4392f2cd7839b5c6f251d" class="title"><div class="line"><span class="tree"></span><span class="content">a99941e Fix broken Markdown headings</span></div></label><div class="patch">
[1;36m|[m[1;36m/[m  
[1;36m|[m   
[1;36m|[m   [1mdiff --git a/README.md b/README.md[m
[1;36m|[m   [1mindex 77e9545..05c5e9d 100644[m
[1;36m|[m   [1m--- a/README.md[m
[1;36m|[m   [1m+++ b/README.md[m
[1;36m|[m   [36m@@ -12,11 +12,11 @@[m [mHow?  `gitfiti.py` generates a bash script: `gitfiti.sh` that makes commits with[m
[1;36m|[m    Since this is likely to clobber repo's history, I highly recommend that you create a _new_ github repo when using gitfiti. Also, the generated bash script assumes you are using public-key authentication with git.[m
[1;36m|[m    [m
[1;36m|[m    [m
[1;36m|[m   [31m-###Pixel Art:[m
[1;36m|[m   [32m+[m[32m### Pixel Art:[m
[1;36m|[m    ![alt text](https://raw.github.com/gelstudios/gitfiti/master/pixels-large.png "pixel art")  [m
[1;36m|[m    Included "art" from left to right: kitty, oneup, oneup2, hackerschool, octocat, octocat2[m
[1;36m|[m    [m
[1;36m|[m   [31m-###Usage:[m
[1;36m|[m   [32m+[m[32m### Usage:[m
[1;36m|[m    1. Create a new github repo to store your handiwork.[m
[1;36m|[m    2. Run `gitfiti.py` and follow the prompts for username, art selection, offset, and repo name.[m
[1;36m|[m    3. Run the generated `gitfiti.sh` from your home directory (or any non-git tracked dir) and watch it go to work.[m
[1;36m|[m   [36m@@ -47,14 +47,14 @@[m [mThis would output a 7 x 7 light green square with a single blank center square.[m
[1;36m|[m    [m
[1;36m|[m    Once you have a file with templates, enter its name when prompted and the templates will be added to the list of options.[m
[1;36m|[m    [m
[1;36m|[m   [31m-###Removal:[m
[1;36m|[m   [32m+[m[32m### Removal:[m
[1;36m|[m    Fortunately if you regret your gitfiti in the morning, removing it is fairly easy: delete the repo you created for your gitfiti (and wait).[m
[1;36m|[m    [m
[1;36m|[m   [31m-###License:[m
[1;36m|[m   [32m+[m[32m### License:[m
[1;36m|[m    gitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses/MIT)[m
[1;36m|[m    [m
[1;36m|[m    ---[m
[1;36m|[m   [31m-####Todo:[m
[1;36m|[m   [32m+[m[32m#### Todo:[m
[1;36m|[m    - ~~Remove 'requests' dependency~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;36m|[m    - ~~Web interface~~ See several web-based things below[m
[1;36m|[m    - ~~Load "art" from a file~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;36m|[m   [36m@@ -63,7 +63,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[1;36m|[m    - ...[m
[1;36m|[m    - Profit?[m
[1;36m|[m    [m
[1;36m|[m   [31m-####Notable derivatives or mentions:[m
[1;36m|[m   [32m+[m[32m#### Notable derivatives or mentions:[m
[1;36m|[m    - [Pikesley's](https://github.com/pikesley) Pokrovsky, which offers Github History Vandalism [as a Service!](http://pokrovsky.herokuapp.com/)[m
[1;36m|[m    - [github-board](https://github.com/bayandin/github-board) commits gitfiti from easy templates[m
[1;36m|[m    - [ghdecoy](https://github.com/tickelton/ghdecoy) fills the contribution graph with random data (sneaky!)[m
[1;36m|[m   
*   <div id="cfb0d89" class="tab"><input type="checkbox" name="toggle" id="cfb0d897474ccef80b1c9fac7676a1006fa5dfce" class="toggle"><label for="cfb0d897474ccef80b1c9fac7676a1006fa5dfce" class="title"><div class="line"><span class="tree"></span><span class="content">cfb0d89 Merge pull request #45 from antoinegergy/master</span></div></label><div class="patch">
[32m|[m[33m\[m  
[32m|[m [33m|[m 
[32m|[m * <div id="0df25a7" class="tab"><input type="checkbox" name="toggle" id="0df25a7527e41c28f3478244ed99540e9f84971d" class="toggle"><label for="0df25a7527e41c28f3478244ed99540e9f84971d" class="title"><div class="line"><span class="tree"></span><span class="content">0df25a7 Fix git pull</span></div></label><div class="patch">
[32m|[m[32m/[m  
[32m|[m   
[32m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[32m|[m   [1mindex 46dffcd..e0bbfea 100755[m
[32m|[m   [1m--- a/gitfiti.py[m
[32m|[m   [1m+++ b/gitfiti.py[m
[32m|[m   [36m@@ -301,7 +301,7 @@[m [mdef fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[32m|[m            'git add gitfiti\n'[m
[32m|[m            '{1}\n'[m
[32m|[m            'git remote add origin {2}:{3}/$REPO.git\n'[m
[32m|[m   [31m-        'git pull\n'[m
[32m|[m   [32m+[m[32m        'git pull origin master\n'[m
[32m|[m            'git push -u origin master\n'[m
[32m|[m        )[m
[32m|[m    [m
[32m|[m   
*   <div id="92c44e6" class="tab"><input type="checkbox" name="toggle" id="92c44e6b4d5a01fc065c27f709691a1545e0acea" class="toggle"><label for="92c44e6b4d5a01fc065c27f709691a1545e0acea" class="title"><div class="line"><span class="tree"></span><span class="content">92c44e6 Merge pull request #42 from numberoverzero/master</span></div></label><div class="patch">
[34m|[m[35m\[m  
[34m|[m [35m|[m 
[34m|[m * <div id="7a80c1d" class="tab"><input type="checkbox" name="toggle" id="7a80c1d7302f646cc7eea505c5eab79db348f9db" class="toggle"><label for="7a80c1d7302f646cc7eea505c5eab79db348f9db" class="title"><div class="line"><span class="tree"></span><span class="content">7a80c1d drop unused content arg from commit function</span></div></label><div class="patch">
[34m|[m [35m|[m 
[34m|[m [35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[34m|[m [35m|[m [1mindex 3af317d..46dffcd 100755[m
[34m|[m [35m|[m [1m--- a/gitfiti.py[m
[34m|[m [35m|[m [1m+++ b/gitfiti.py[m
[34m|[m [35m|[m [36m@@ -281,7 +281,7 @@[m [mdef generate_values_in_date_order(image, multiplier=1):[m
[34m|[m [35m|[m              yield image[h][w] * multiplier[m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m [31m-def commit(content, commitdate):[m
[34m|[m [35m|[m [32m+[m[32mdef commit(commitdate):[m
[34m|[m [35m|[m      template = ([m
[34m|[m [35m|[m          '''GIT_AUTHOR_DATE={0} GIT_COMMITTER_DATE={1} '''[m
[34m|[m [35m|[m          '''git commit --allow-empty -m "gitfiti" > /dev/null\n'''[m
[34m|[m [35m|[m [36m@@ -308,8 +308,8 @@[m [mdef fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[34m|[m [35m|[m      strings = [][m
[34m|[m [35m|[m      for value, date in zip(generate_values_in_date_order(image, multiplier),[m
[34m|[m [35m|[m              generate_next_dates(start_date, offset)):[m
[34m|[m [35m|[m [31m-        for i in range(value):[m
[34m|[m [35m|[m [31m-            strings.append(commit(i, date))[m
[34m|[m [35m|[m [32m+[m[32m        for _ in range(value):[m
[34m|[m [35m|[m [32m+[m[32m            strings.append(commit(date))[m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m      return template.format(repo, ''.join(strings), git_url, username)[m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m 
[34m|[m * <div id="52884b2" class="tab"><input type="checkbox" name="toggle" id="52884b2999747e36baade1eeb6240a8cc19ffd2d" class="toggle"><label for="52884b2999747e36baade1eeb6240a8cc19ffd2d" class="title"><div class="line"><span class="tree"></span><span class="content">52884b2 Use --allow-empty for performance gelstudios/gitfiti#32</span></div></label><div class="patch">
[34m|[m[34m/[m  
[34m|[m   
[34m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[34m|[m   [1mindex b15b75b..3af317d 100755[m
[34m|[m   [1m--- a/gitfiti.py[m
[34m|[m   [1m+++ b/gitfiti.py[m
[34m|[m   [36m@@ -34,12 +34,12 @@[m [mFALLBACK_IMAGE = 'kitty'[m
[34m|[m    [m
[34m|[m    [m
[34m|[m    TITLE = '''[m
[34m|[m   [31m-          _ __  _____ __  _ [m
[34m|[m   [32m+[m[32m          _ __  _____ __  _[m
[34m|[m       ____ _(_) /_/ __(_) /_(_)[m
[34m|[m   [31m-  / __ `/ / __/ /_/ / __/ / [m
[34m|[m   [31m- / /_/ / / /_/ __/ / /_/ /  [m
[34m|[m   [31m- \__, /_/\__/_/ /_/\__/_/   [m
[34m|[m   [31m-/____/ [m
[34m|[m   [32m+[m[32m  / __ `/ / __/ /_/ / __/ /[m
[34m|[m   [32m+[m[32m / /_/ / / /_/ __/ / /_/ /[m
[34m|[m   [32m+[m[32m \__, /_/\__/_/ /_/\__/_/[m
[34m|[m   [32m+[m[32m/____/[m
[34m|[m    '''[m
[34m|[m    [m
[34m|[m    [m
[34m|[m   [36m@@ -153,13 +153,13 @@[m [mdef str_to_sprite(content):[m
[34m|[m    [m
[34m|[m    [m
[34m|[m    ONEUP_STR = str_to_sprite('''[m
[34m|[m   [31m- ******* [m
[34m|[m   [32m+[m[32m *******[m
[34m|[m    *=~~-~~=*[m
[34m|[m    *~~---~~*[m
[34m|[m    *=*****=*[m
[34m|[m    **-*-*-**[m
[34m|[m   [31m- *-----* [m
[34m|[m   [31m-  *****  [m
[34m|[m   [32m+[m[32m *-----*[m
[34m|[m   [32m+[m[32m  *****[m
[34m|[m    ''')[m
[34m|[m    [m
[34m|[m    [m
[34m|[m   [36m@@ -211,7 +211,7 @@[m [mdef retrieve_contributions_calendar(username, base_url):[m
[34m|[m        """retrieves the GitHub commit calendar data for a username"""[m
[34m|[m        base_url = base_url + 'users/' + username[m
[34m|[m    [m
[34m|[m   [31m-    try:        [m
[34m|[m   [32m+[m[32m    try:[m
[34m|[m            url = base_url + '/contributions'[m
[34m|[m            page = urlopen(url)[m
[34m|[m        except (HTTPError, URLError) as e:[m
[34m|[m   [36m@@ -283,12 +283,10 @@[m [mdef generate_values_in_date_order(image, multiplier=1):[m
[34m|[m    [m
[34m|[m    def commit(content, commitdate):[m
[34m|[m        template = ([m
[34m|[m   [31m-        '''echo {0} >> gitfiti\n'''[m
[34m|[m   [31m-        '''GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2} '''[m
[34m|[m   [31m-        '''git commit -a -m "gitfiti" > /dev/null\n'''[m
[34m|[m   [32m+[m[32m        '''GIT_AUTHOR_DATE={0} GIT_COMMITTER_DATE={1} '''[m
[34m|[m   [32m+[m[32m        '''git commit --allow-empty -m "gitfiti" > /dev/null\n'''[m
[34m|[m        )[m
[34m|[m   [31m-    return template.format(content, commitdate.isoformat(), [m
[34m|[m   [31m-            commitdate.isoformat())[m
[34m|[m   [32m+[m[32m    return template.format(commitdate.isoformat(), commitdate.isoformat())[m
[34m|[m    [m
[34m|[m    [m
[34m|[m    def fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[34m|[m   [36m@@ -380,9 +378,9 @@[m [mdef main():[m
[34m|[m        if not image:[m
[34m|[m            image = IMAGES[image_name_fallback][m
[34m|[m        else:[m
[34m|[m   [31m-        try: [m
[34m|[m   [32m+[m[32m        try:[m
[34m|[m                image = images[image][m
[34m|[m   [31m-        except: [m
[34m|[m   [32m+[m[32m        except:[m
[34m|[m                image = IMAGES[image_name_fallback][m
[34m|[m    [m
[34m|[m        start_date = get_start_date()[m
[34m|[m   
*   <div id="9e06be3" class="tab"><input type="checkbox" name="toggle" id="9e06be360b9d41552ab27fb618a93720585b7c0f" class="toggle"><label for="9e06be360b9d41552ab27fb618a93720585b7c0f" class="title"><div class="line"><span class="tree"></span><span class="content">9e06be3 Merge pull request #39 from homeworkprod/master</span></div></label><div class="patch">
[36m|[m[1;31m\[m  
[36m|[m [1;31m|[m 
[36m|[m * <div id="65b7694" class="tab"><input type="checkbox" name="toggle" id="65b7694662f79e88d63a3a87e5e5186ac55dd9a2" class="toggle"><label for="65b7694662f79e88d63a3a87e5e5186ac55dd9a2" class="title"><div class="line"><span class="tree"></span><span class="content">65b7694 Simplified finding of highest daily count by using the `max` function.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;31m|[m [1mindex 339de6b..b15b75b 100755[m
[36m|[m [1;31m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;31m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;31m|[m [36m@@ -234,11 +234,8 @@[m [mdef parse_contributions_calendar(contributions_calendar):[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  def find_max_daily_commits(contributions_calendar):[m
[36m|[m [1;31m|[m      """finds the highest number of commits in one day"""[m
[36m|[m [1;31m|[m [31m-    output = parse_contributions_calendar(contributions_calendar)[m
[36m|[m [1;31m|[m [31m-    output = list(output)[m
[36m|[m [1;31m|[m [31m-    output.sort()[m
[36m|[m [1;31m|[m [31m-    output.reverse()[m
[36m|[m [1;31m|[m [31m-    return output[0][m
[36m|[m [1;31m|[m [32m+[m[32m    daily_counts = parse_contributions_calendar(contributions_calendar)[m
[36m|[m [1;31m|[m [32m+[m[32m    return max(daily_counts)[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  def calculate_multiplier(max_commits):[m
[36m|[m [1;31m|[m 
[36m|[m * <div id="d23a2d0" class="tab"><input type="checkbox" name="toggle" id="d23a2d0746e33745164bd88d3aa3033cca9faa1a" class="toggle"><label for="d23a2d0746e33745164bd88d3aa3033cca9faa1a" class="title"><div class="line"><span class="tree"></span><span class="content">d23a2d0 Extracted function to parse daily counts from a contributions SVG and added a test for it.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;31m|[m [1mindex 0c5d79a..339de6b 100755[m
[36m|[m [1;31m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;31m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;31m|[m [36m@@ -222,17 +222,19 @@[m [mdef retrieve_contributions_calendar(username, base_url):[m
[36m|[m [1;31m|[m      return page.read().decode('utf-8')[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-def find_max_daily_commits(contributions_calendar):[m
[36m|[m [1;31m|[m [31m-    """finds the highest number of commits in one day"""[m
[36m|[m [1;31m|[m [31m-    output = set()[m
[36m|[m [1;31m|[m [31m-[m
[36m|[m [1;31m|[m [32m+[m[32mdef parse_contributions_calendar(contributions_calendar):[m
[36m|[m [1;31m|[m [32m+[m[32m    """Yield daily counts extracted from the contributions SVG."""[m
[36m|[m [1;31m|[m      for line in contributions_calendar.splitlines():[m
[36m|[m [1;31m|[m          for day in line.split():[m
[36m|[m [1;31m|[m              if 'data-count=' in day:[m
[36m|[m [1;31m|[m                  commit = day.split('=')[1][m
[36m|[m [1;31m|[m                  commit = commit.strip('"')[m
[36m|[m [1;31m|[m [31m-                output.add(int(commit))[m
[36m|[m [1;31m|[m [32m+[m[32m                yield int(commit)[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32mdef find_max_daily_commits(contributions_calendar):[m
[36m|[m [1;31m|[m [32m+[m[32m    """finds the highest number of commits in one day"""[m
[36m|[m [1;31m|[m [32m+[m[32m    output = parse_contributions_calendar(contributions_calendar)[m
[36m|[m [1;31m|[m      output = list(output)[m
[36m|[m [1;31m|[m      output.sort()[m
[36m|[m [1;31m|[m      output.reverse()[m
[36m|[m [1;31m|[m [1mdiff --git a/tests/test_find_max_daily_commits.py b/tests/test_find_max_daily_commits.py[m
[36m|[m [1;31m|[m [1mindex 25acb71..d8950db 100644[m
[36m|[m [1;31m|[m [1m--- a/tests/test_find_max_daily_commits.py[m
[36m|[m [1;31m|[m [1m+++ b/tests/test_find_max_daily_commits.py[m
[36m|[m [1;31m|[m [36m@@ -1,4 +1,4 @@[m
[36m|[m [1;31m|[m [31m-from gitfiti import find_max_daily_commits[m
[36m|[m [1;31m|[m [32m+[m[32mfrom gitfiti import find_max_daily_commits, parse_contributions_calendar[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  CONTRIBUTIONS_CALENDAR_SVG = '''\[m
[36m|[m [1;31m|[m [36m@@ -71,5 +71,19 @@[m [mCONTRIBUTIONS_CALENDAR_SVG = '''\[m
[36m|[m [1;31m|[m  '''[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [32m+[m[32mdef test_parse_contributions_calendar():[m
[36m|[m [1;31m|[m [32m+[m[32m    expected = [[m
[36m|[m [1;31m|[m [32m+[m[32m        0, 0, 0, 0, 6, 0, 0,[m
[36m|[m [1;31m|[m [32m+[m[32m        0, 0, 0, 0, 0, 0, 6,[m
[36m|[m [1;31m|[m [32m+[m[32m        84, 16, 4, 8, 0, 0, 0,[m
[36m|[m [1;31m|[m [32m+[m[32m        0, 25, 66, 20, 10, 0, 0,[m
[36m|[m [1;31m|[m [32m+[m[32m        33, 9, 0, 0, 7,[m
[36m|[m [1;31m|[m [32m+[m[32m    ][m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32m    actual = parse_contributions_calendar(CONTRIBUTIONS_CALENDAR_SVG)[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32m    assert list(actual) == expected[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m  def test_find_max_daily_commits():[m
[36m|[m [1;31m|[m      assert find_max_daily_commits(CONTRIBUTIONS_CALENDAR_SVG) == 84[m
[36m|[m [1;31m|[m 
[36m|[m * <div id="2c9c4cb" class="tab"><input type="checkbox" name="toggle" id="2c9c4cba83c36d252a84ef944a4fedba81d41013" class="toggle"><label for="2c9c4cba83c36d252a84ef944a4fedba81d41013" class="title"><div class="line"><span class="tree"></span><span class="content">2c9c4cb Added test for `find_max_daily_commits`.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/tests/test_find_max_daily_commits.py b/tests/test_find_max_daily_commits.py[m
[36m|[m [1;31m|[m [1mnew file mode 100644[m
[36m|[m [1;31m|[m [1mindex 0000000..25acb71[m
[36m|[m [1;31m|[m [1m--- /dev/null[m
[36m|[m [1;31m|[m [1m+++ b/tests/test_find_max_daily_commits.py[m
[36m|[m [1;31m|[m [36m@@ -0,0 +1,75 @@[m
[36m|[m [1;31m|[m [32m+[m[32mfrom gitfiti import find_max_daily_commits[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32mCONTRIBUTIONS_CALENDAR_SVG = '''\[m
[36m|[m [1;31m|[m [32m+[m[32m<svg width="721" height="110" class="js-calendar-graph-svg">[m
[36m|[m [1;31m|[m [32m+[m[32m  <g transform="translate(20, 20)">[m
[36m|[m [1;31m|[m [32m+[m[32m      <g transform="translate(624, 0)">[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="0" fill="#eeeeee" data-count="0" data-date="2016-05-08"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="13" fill="#eeeeee" data-count="0" data-date="2016-05-09"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="26" fill="#eeeeee" data-count="0" data-date="2016-05-10"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="39" fill="#eeeeee" data-count="0" data-date="2016-05-11"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="52" fill="#d6e685" data-count="6" data-date="2016-05-12"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="65" fill="#eeeeee" data-count="0" data-date="2016-05-13"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="78" fill="#eeeeee" data-count="0" data-date="2016-05-14"/>[m
[36m|[m [1;31m|[m [32m+[m[32m      </g>[m
[36m|[m [1;31m|[m [32m+[m[32m      <g transform="translate(637, 0)">[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="0" fill="#eeeeee" data-count="0" data-date="2016-05-15"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="13" fill="#eeeeee" data-count="0" data-date="2016-05-16"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="26" fill="#eeeeee" data-count="0" data-date="2016-05-17"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="39" fill="#eeeeee" data-count="0" data-date="2016-05-18"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="52" fill="#eeeeee" data-count="0" data-date="2016-05-19"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="65" fill="#eeeeee" data-count="0" data-date="2016-05-20"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="78" fill="#d6e685" data-count="6" data-date="2016-05-21"/>[m
[36m|[m [1;31m|[m [32m+[m[32m      </g>[m
[36m|[m [1;31m|[m [32m+[m[32m      <g transform="translate(650, 0)">[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="0" fill="#1e6823" data-count="84" data-date="2016-05-22"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="13" fill="#d6e685" data-count="16" data-date="2016-05-23"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="26" fill="#d6e685" data-count="4" data-date="2016-05-24"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="39" fill="#d6e685" data-count="8" data-date="2016-05-25"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="52" fill="#eeeeee" data-count="0" data-date="2016-05-26"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="65" fill="#eeeeee" data-count="0" data-date="2016-05-27"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="78" fill="#eeeeee" data-count="0" data-date="2016-05-28"/>[m
[36m|[m [1;31m|[m [32m+[m[32m      </g>[m
[36m|[m [1;31m|[m [32m+[m[32m      <g transform="translate(663, 0)">[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="0" fill="#eeeeee" data-count="0" data-date="2016-05-29"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="13" fill="#8cc665" data-count="25" data-date="2016-05-30"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="26" fill="#1e6823" data-count="66" data-date="2016-05-31"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="39" fill="#d6e685" data-count="20" data-date="2016-06-01"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="52" fill="#d6e685" data-count="10" data-date="2016-06-02"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="65" fill="#eeeeee" data-count="0" data-date="2016-06-03"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="78" fill="#eeeeee" data-count="0" data-date="2016-06-04"/>[m
[36m|[m [1;31m|[m [32m+[m[32m      </g>[m
[36m|[m [1;31m|[m [32m+[m[32m      <g transform="translate(676, 0)">[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="0" fill="#8cc665" data-count="33" data-date="2016-06-05"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="13" fill="#d6e685" data-count="9" data-date="2016-06-06"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="26" fill="#eeeeee" data-count="0" data-date="2016-06-07"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="39" fill="#eeeeee" data-count="0" data-date="2016-06-08"/>[m
[36m|[m [1;31m|[m [32m+[m[32m          <rect class="day" width="11" height="11" y="52" fill="#d6e685" data-count="7" data-date="2016-06-09"/>[m
[36m|[m [1;31m|[m [32m+[m[32m      </g>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="0" y="-5" class="month">Jun</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="52" y="-5" class="month">Jul</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="104" y="-5" class="month">Aug</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="169" y="-5" class="month">Sep</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="221" y="-5" class="month">Oct</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="273" y="-5" class="month">Nov</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="338" y="-5" class="month">Dec</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="390" y="-5" class="month">Jan</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="455" y="-5" class="month">Feb</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="507" y="-5" class="month">Mar</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="559" y="-5" class="month">Apr</text>[m
[36m|[m [1;31m|[m [32m+[m[32m      <text x="611" y="-5" class="month">May</text>[m
[36m|[m [1;31m|[m [32m+[m[32m    <text text-anchor="middle" class="wday" dx="-10" dy="9" style="display: none;">S</text>[m
[36m|[m [1;31m|[m [32m+[m[32m    <text text-anchor="middle" class="wday" dx="-10" dy="22">M</text>[m
[36m|[m [1;31m|[m [32m+[m[32m    <text text-anchor="middle" class="wday" dx="-10" dy="35" style="display: none;">T</text>[m
[36m|[m [1;31m|[m [32m+[m[32m    <text text-anchor="middle" class="wday" dx="-10" dy="48">W</text>[m
[36m|[m [1;31m|[m [32m+[m[32m    <text text-anchor="middle" class="wday" dx="-10" dy="61" style="display: none;">T</text>[m
[36m|[m [1;31m|[m [32m+[m[32m    <text text-anchor="middle" class="wday" dx="-10" dy="74">F</text>[m
[36m|[m [1;31m|[m [32m+[m[32m    <text text-anchor="middle" class="wday" dx="-10" dy="87" style="display: none;">S</text>[m
[36m|[m [1;31m|[m [32m+[m[32m  </g>[m
[36m|[m [1;31m|[m [32m+[m[32m</svg>[m
[36m|[m [1;31m|[m [32m+[m[32m'''[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32mdef test_find_max_daily_commits():[m
[36m|[m [1;31m|[m [32m+[m[32m    assert find_max_daily_commits(CONTRIBUTIONS_CALENDAR_SVG) == 84[m
[36m|[m [1;31m|[m 
[36m|[m * <div id="4d4af43" class="tab"><input type="checkbox" name="toggle" id="4d4af436f4b57067693be6678fd1caa7eea6b04b" class="toggle"><label for="4d4af436f4b57067693be6678fd1caa7eea6b04b" class="title"><div class="line"><span class="tree"></span><span class="content">4d4af43 Retrieve and return the contributions calender as a string; split into lines later as part of the processing stage.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;31m|[m [1mindex e83fc54..0c5d79a 100755[m
[36m|[m [1;31m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;31m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;31m|[m [36m@@ -219,14 +219,14 @@[m [mdef retrieve_contributions_calendar(username, base_url):[m
[36m|[m [1;31m|[m          print(e)[m
[36m|[m [1;31m|[m          raise SystemExit[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-    return page.read().decode('utf-8').splitlines()[m
[36m|[m [1;31m|[m [32m+[m[32m    return page.read().decode('utf-8')[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  def find_max_daily_commits(contributions_calendar):[m
[36m|[m [1;31m|[m      """finds the highest number of commits in one day"""[m
[36m|[m [1;31m|[m      output = set()[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-    for line in contributions_calendar:[m
[36m|[m [1;31m|[m [32m+[m[32m    for line in contributions_calendar.splitlines():[m
[36m|[m [1;31m|[m          for day in line.split():[m
[36m|[m [1;31m|[m              if 'data-count=' in day:[m
[36m|[m [1;31m|[m                  commit = day.split('=')[1][m
[36m|[m [1;31m|[m 
[36m|[m * <div id="18b49c1" class="tab"><input type="checkbox" name="toggle" id="18b49c1dad76a5b5c6f1ca7cb4de44690da48acd" class="toggle"><label for="18b49c1dad76a5b5c6f1ca7cb4de44690da48acd" class="title"><div class="line"><span class="tree"></span><span class="content">18b49c1 Clarified names.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;31m|[m [1mindex ac1afcd..e83fc54 100755[m
[36m|[m [1;31m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;31m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;31m|[m [36m@@ -207,7 +207,7 @@[m [mdef load_images(img_names):[m
[36m|[m [1;31m|[m          return loaded_imgs[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-def get_calendar(username, base_url):[m
[36m|[m [1;31m|[m [32m+[m[32mdef retrieve_contributions_calendar(username, base_url):[m
[36m|[m [1;31m|[m      """retrieves the GitHub commit calendar data for a username"""[m
[36m|[m [1;31m|[m      base_url = base_url + 'users/' + username[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [36m@@ -222,11 +222,11 @@[m [mdef get_calendar(username, base_url):[m
[36m|[m [1;31m|[m      return page.read().decode('utf-8').splitlines()[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-def find_max_commits(calendar):[m
[36m|[m [1;31m|[m [32m+[m[32mdef find_max_daily_commits(contributions_calendar):[m
[36m|[m [1;31m|[m      """finds the highest number of commits in one day"""[m
[36m|[m [1;31m|[m      output = set()[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-    for line in calendar:[m
[36m|[m [1;31m|[m [32m+[m[32m    for line in contributions_calendar:[m
[36m|[m [1;31m|[m          for day in line.split():[m
[36m|[m [1;31m|[m              if 'data-count=' in day:[m
[36m|[m [1;31m|[m                  commit = day.split('=')[1][m
[36m|[m [1;31m|[m [36m@@ -338,11 +338,11 @@[m [mdef main():[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m      git_base = ghe if ghe else GITHUB_BASE_URL[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-    cal = get_calendar(username, git_base)[m
[36m|[m [1;31m|[m [32m+[m[32m    contributions_calendar = retrieve_contributions_calendar(username, git_base)[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-    max_commits = find_max_commits(cal)[m
[36m|[m [1;31m|[m [32m+[m[32m    max_daily_commits = find_max_daily_commits(contributions_calendar)[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-    m = calculate_multiplier(max_commits)[m
[36m|[m [1;31m|[m [32m+[m[32m    m = calculate_multiplier(max_daily_commits)[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m      repo = request_user_input([m
[36m|[m [1;31m|[m          'Enter the name of the repository to use by gitfiti: ')[m
[36m|[m [1;31m|[m [36m@@ -361,7 +361,7 @@[m [mdef main():[m
[36m|[m [1;31m|[m          'Enter the word "gitfiti" to exceed your max\n'[m
[36m|[m [1;31m|[m          '(this option generates WAY more commits)\n'[m
[36m|[m [1;31m|[m          'Any other input will cause the default matching behavior'[m
[36m|[m [1;31m|[m [31m-    ).format(max_commits))[m
[36m|[m [1;31m|[m [32m+[m[32m    ).format(max_daily_commits))[m
[36m|[m [1;31m|[m      match = request_user_input()[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m      match = m if (match == 'gitfiti') else 1[m
[36m|[m [1;31m|[m 
* [1;31m|[m <div id="824bdf0" class="tab"><input type="checkbox" name="toggle" id="824bdf0c4d2be77f4d0d42a2d7adf35e936c5f5c" class="toggle"><label for="824bdf0c4d2be77f4d0d42a2d7adf35e936c5f5c" class="title"><div class="line"><span class="tree"></span><span class="content">824bdf0 Update README.md</span></div></label><div class="patch">
[1;31m|[m [1;31m|[m 
[1;31m|[m [1;31m|[m [1mdiff --git a/README.md b/README.md[m
[1;31m|[m [1;31m|[m [1mindex d78c9b9..77e9545 100644[m
[1;31m|[m [1;31m|[m [1m--- a/README.md[m
[1;31m|[m [1;31m|[m [1m+++ b/README.md[m
[1;31m|[m [1;31m|[m [36m@@ -1,3 +1,5 @@[m
[1;31m|[m [1;31m|[m [32m+[m[32m[![Build Status](https://travis-ci.org/gelstudios/gitfiti.svg?branch=master)](https://travis-ci.org/gelstudios/gitfiti)[m
[1;31m|[m [1;31m|[m [32m+[m
[1;31m|[m [1;31m|[m  gitfiti _noun_ : Carefully crafted graffiti in a github commit history calendar.  [m
[1;31m|[m [1;31m|[m  [m
[1;31m|[m [1;31m|[m  An example of gitfiti in the wild:  [m
[1;31m|[m [1;31m|[m [36m@@ -8,8 +10,8 @@[m [mAn example of gitfiti in the wild:[m
[1;31m|[m [1;31m|[m  How?  `gitfiti.py` generates a bash script: `gitfiti.sh` that makes commits with the GIT_AUTHOR_DATE and GIT_COMMITTER_DATE environment variables set for each targeted pixel.[m
[1;31m|[m [1;31m|[m  [m
[1;31m|[m [1;31m|[m  Since this is likely to clobber repo's history, I highly recommend that you create a _new_ github repo when using gitfiti. Also, the generated bash script assumes you are using public-key authentication with git.[m
[1;31m|[m [1;31m|[m [31m-  [m
[1;31m|[m [1;31m|[m [31m-  [m
[1;31m|[m [1;31m|[m [32m+[m
[1;31m|[m [1;31m|[m [32m+[m
[1;31m|[m [1;31m|[m  ###Pixel Art:[m
[1;31m|[m [1;31m|[m  ![alt text](https://raw.github.com/gelstudios/gitfiti/master/pixels-large.png "pixel art")  [m
[1;31m|[m [1;31m|[m  Included "art" from left to right: kitty, oneup, oneup2, hackerschool, octocat, octocat2[m
[1;31m|[m [1;31m|[m [36m@@ -54,7 +56,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[1;31m|[m [1;31m|[m  ---[m
[1;31m|[m [1;31m|[m  ####Todo:[m
[1;31m|[m [1;31m|[m  - ~~Remove 'requests' dependency~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;31m|[m [1;31m|[m [31m-- Web interface[m
[1;31m|[m [1;31m|[m [32m+[m[32m- ~~Web interface~~ See several web-based things below[m
[1;31m|[m [1;31m|[m  - ~~Load "art" from a file~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;31m|[m [1;31m|[m  - Load commit content from a file[m
[1;31m|[m [1;31m|[m  - Text/alphabet option[m
[1;31m|[m [1;31m|[m   
* [1;31m|[m   <div id="4e194f8" class="tab"><input type="checkbox" name="toggle" id="4e194f837f970f28ba8ee4e9ef1f4e57d1fbfea7" class="toggle"><label for="4e194f837f970f28ba8ee4e9ef1f4e57d1fbfea7" class="title"><div class="line"><span class="tree"></span><span class="content">4e194f8 Merge pull request #40 from homeworkprod/travis-config</span></div></label><div class="patch">
[1;32m|[m[1;33m\[m [1;31m\[m  
[1;32m|[m [1;33m|[m [1;31m|[m 
[1;32m|[m * [1;31m|[m <div id="b92ea75" class="tab"><input type="checkbox" name="toggle" id="b92ea7529cfa5a2b8e4b4a95b10b6a5782f51165" class="toggle"><label for="b92ea7529cfa5a2b8e4b4a95b10b6a5782f51165" class="title"><div class="line"><span class="tree"></span><span class="content">b92ea75 Added Python'3.5-dev' and 'nightly' to the build bot.</span></div></label><div class="patch">
[1;32m|[m [1;33m|[m [1;31m|[m 
[1;32m|[m [1;33m|[m [1;31m|[m [1mdiff --git a/.travis.yml b/.travis.yml[m
[1;32m|[m [1;33m|[m [1;31m|[m [1mindex b3da71a..a1a7681 100644[m
[1;32m|[m [1;33m|[m [1;31m|[m [1m--- a/.travis.yml[m
[1;32m|[m [1;33m|[m [1;31m|[m [1m+++ b/.travis.yml[m
[1;32m|[m [1;33m|[m [1;31m|[m [36m@@ -3,6 +3,8 @@[m [mpython:[m
[1;32m|[m [1;33m|[m [1;31m|[m    - "2.7"[m
[1;32m|[m [1;33m|[m [1;31m|[m    - "3.4"[m
[1;32m|[m [1;33m|[m [1;31m|[m    - "3.5"[m
[1;32m|[m [1;33m|[m [1;31m|[m [32m+[m[32m  - "3.5-dev"[m
[1;32m|[m [1;33m|[m [1;31m|[m [32m+[m[32m  - "nightly"[m
[1;32m|[m [1;33m|[m [1;31m|[m  install:[m
[1;32m|[m [1;33m|[m [1;31m|[m    - "pip install pytest"[m
[1;32m|[m [1;33m|[m [1;31m|[m  script:[m
[1;32m|[m [1;33m|[m [1;31m|[m 
[1;32m|[m * [1;31m|[m <div id="25a3a2c" class="tab"><input type="checkbox" name="toggle" id="25a3a2c1b2b3afc77e897631e207ec835fc8fd8a" class="toggle"><label for="25a3a2c1b2b3afc77e897631e207ec835fc8fd8a" class="title"><div class="line"><span class="tree"></span><span class="content">25a3a2c Added initial configuration file for Travis CI.</span></div></label><div class="patch">
[1;32m|[m[1;32m/[m [1;31m/[m  
[1;32m|[m [1;31m|[m   
[1;32m|[m [1;31m|[m   [1mdiff --git a/.travis.yml b/.travis.yml[m
[1;32m|[m [1;31m|[m   [1mnew file mode 100644[m
[1;32m|[m [1;31m|[m   [1mindex 0000000..b3da71a[m
[1;32m|[m [1;31m|[m   [1m--- /dev/null[m
[1;32m|[m [1;31m|[m   [1m+++ b/.travis.yml[m
[1;32m|[m [1;31m|[m   [36m@@ -0,0 +1,12 @@[m
[1;32m|[m [1;31m|[m   [32m+[m[32mlanguage: python[m
[1;32m|[m [1;31m|[m   [32m+[m[32mpython:[m
[1;32m|[m [1;31m|[m   [32m+[m[32m  - "2.7"[m
[1;32m|[m [1;31m|[m   [32m+[m[32m  - "3.4"[m
[1;32m|[m [1;31m|[m   [32m+[m[32m  - "3.5"[m
[1;32m|[m [1;31m|[m   [32m+[m[32minstall:[m
[1;32m|[m [1;31m|[m   [32m+[m[32m  - "pip install pytest"[m
[1;32m|[m [1;31m|[m   [32m+[m[32mscript:[m
[1;32m|[m [1;31m|[m   [32m+[m[32m  - "py.test tests"[m
[1;32m|[m [1;31m|[m   [32m+[m[32msudo: false[m
[1;32m|[m [1;31m|[m   [32m+[m[32mnotifications:[m
[1;32m|[m [1;31m|[m   [32m+[m[32m  email: false[m
[1;32m|[m [1;31m|[m 
* [1;31m|[m <div id="2fe08fd" class="tab"><input type="checkbox" name="toggle" id="2fe08fd28af6976e96e8aaf7c4a4e5b22ca187b0" class="toggle"><label for="2fe08fd28af6976e96e8aaf7c4a4e5b22ca187b0" class="title"><div class="line"><span class="tree"></span><span class="content">2fe08fd Merge pull request #34 from homeworkprod/cleanup</span></div></label><div class="patch">
[1;34m|[m[1;31m\[m[1;31m|[m 
[1;34m|[m [1;31m|[m 
[1;34m|[m * <div id="6aa5272" class="tab"><input type="checkbox" name="toggle" id="6aa52725a604ae6802424849be3dfc10c7ee8b88" class="toggle"><label for="6aa52725a604ae6802424849be3dfc10c7ee8b88" class="title"><div class="line"><span class="tree"></span><span class="content">6aa5272 Adjusted calendar SVG retrieval to work on Python 3, too.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 9129cce..ac1afcd 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -219,7 +219,7 @@[m [mdef get_calendar(username, base_url):[m
[1;34m|[m [1;35m|[m          print(e)[m
[1;34m|[m [1;35m|[m          raise SystemExit[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    return page.readlines()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    return page.read().decode('utf-8').splitlines()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def find_max_commits(calendar):[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="603c7f3" class="tab"><input type="checkbox" name="toggle" id="603c7f30e7c93a9242efe1d8da381b391e7cb3d7" class="toggle"><label for="603c7f30e7c93a9242efe1d8da381b391e7cb3d7" class="title"><div class="line"><span class="tree"></span><span class="content">603c7f3 Extracted "constant" for fallback image name.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex af41a60..9129cce 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -30,6 +30,7 @@[m [mexcept NameError:[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  GITHUB_BASE_URL = 'https://github.com/'[m
[1;34m|[m [1;35m|[m [32m+[m[32mFALLBACK_IMAGE = 'kitty'[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  TITLE = '''[m
[1;34m|[m [1;35m|[m [36m@@ -375,7 +376,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      print('Images: ' + ', '.join(images.keys()))[m
[1;34m|[m [1;35m|[m      image = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    image_name_fallback = 'kitty'[m
[1;34m|[m [1;35m|[m [32m+[m[32m    image_name_fallback = FALLBACK_IMAGE[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not image:[m
[1;34m|[m [1;35m|[m          image = IMAGES[image_name_fallback][m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="580c13a" class="tab"><input type="checkbox" name="toggle" id="580c13ab6884b297eec5047bce5b5197942225fa" class="toggle"><label for="580c13ab6884b297eec5047bce5b5197942225fa" class="title"><div class="line"><span class="tree"></span><span class="content">580c13a Slightly streamlined user interface.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 959ecf0..af41a60 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -330,12 +330,10 @@[m [mdef request_user_input(prompt='> '):[m
[1;34m|[m [1;35m|[m  def main():[m
[1;34m|[m [1;35m|[m      print(TITLE)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('Enter GitHub URL')[m
[1;34m|[m [1;35m|[m [31m-    ghe = request_user_input('Enter nothing for {} to be used: '[m
[1;34m|[m [1;35m|[m [31m-                             .format(GITHUB_BASE_URL))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    ghe = request_user_input([m
[1;34m|[m [1;35m|[m [32m+[m[32m        'Enter GitHub URL (leave blank to use {}): '.format(GITHUB_BASE_URL))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('Enter your GitHub username:')[m
[1;34m|[m [1;35m|[m [31m-    username = request_user_input()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    username = request_user_input('Enter your GitHub username: ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      git_base = ghe if ghe else GITHUB_BASE_URL[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -345,11 +343,11 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      m = calculate_multiplier(max_commits)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m [1;35m|[m [31m-    repo = request_user_input()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    repo = request_user_input([m
[1;34m|[m [1;35m|[m [32m+[m[32m        'Enter the name of the repository to use by gitfiti: ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('Enter the number of weeks to offset the image (from the left):')[m
[1;34m|[m [1;35m|[m [31m-    offset = request_user_input()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    offset = request_user_input([m
[1;34m|[m [1;35m|[m [32m+[m[32m        'Enter the number of weeks to offset the image (from the left): ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      offset = int(offset) if offset.strip() else 0[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -367,14 +365,14 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      match = m if (match == 'gitfiti') else 1[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('Enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m [1;35m|[m      img_names = request_user_input().split(' ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      loaded_images = load_images(img_names)[m
[1;34m|[m [1;35m|[m      images = dict(IMAGES, **loaded_images)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('enter the image name to gitfiti')[m
[1;34m|[m [1;35m|[m [31m-    print('images: ' + ', '.join(images.keys()))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('Enter the image name to gitfiti')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('Images: ' + ', '.join(images.keys()))[m
[1;34m|[m [1;35m|[m      image = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      image_name_fallback = 'kitty'[m
[1;34m|[m [1;35m|[m [36m@@ -400,7 +398,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      save(output, 'gitfiti.sh')[m
[1;34m|[m [1;35m|[m      print('gitfiti.sh saved.')[m
[1;34m|[m [1;35m|[m [31m-    print('Create a new(!) repo at: {0}new and run it.'.format(git_base))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('Create a new(!) repo at {0}new and run the script'.format(git_base))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  if __name__ == '__main__':[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="777f264" class="tab"><input type="checkbox" name="toggle" id="777f264796323aad09fbfb89d6dc79e02c097c51" class="toggle"><label for="777f264796323aad09fbfb89d6dc79e02c097c51" class="title"><div class="line"><span class="tree"></span><span class="content">777f264 Make `raw_input` available on Python 3 by aliasing it to `input`.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 67efb4d..959ecf0 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -21,6 +21,13 @@[m [mexcept ImportError:[m
[1;34m|[m [1;35m|[m      # Python 2[m
[1;34m|[m [1;35m|[m      from urllib2 import HTTPError, URLError, urlopen[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [32m+[m[32mtry:[m
[1;34m|[m [1;35m|[m [32m+[m[32m    # Python 2[m
[1;34m|[m [1;35m|[m [32m+[m[32m    raw_input[m
[1;34m|[m [1;35m|[m [32m+[m[32mexcept NameError:[m
[1;34m|[m [1;35m|[m [32m+[m[32m    # Python 3 (Python 2's `raw_input` was renamed to `input`)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    raw_input = input[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  GITHUB_BASE_URL = 'https://github.com/'[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="3e92a86" class="tab"><input type="checkbox" name="toggle" id="3e92a86161ab72f0d660f9318407e6728b450b6e" class="toggle"><label for="3e92a86161ab72f0d660f9318407e6728b450b6e" class="title"><div class="line"><span class="tree"></span><span class="content">3e92a86 Fix `str_to_sprite` on Python 3.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex e05432f..67efb4d 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -133,7 +133,7 @@[m [mdef str_to_sprite(content):[m
[1;34m|[m [1;35m|[m      lines = filter(is_empty_line, lines)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      # Break up lines into each character[m
[1;34m|[m [1;35m|[m [31m-    split_lines = map(list, lines)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    split_lines = [list(line) for line in lines][m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      # Replace each character with its numeric equivalent[m
[1;34m|[m [1;35m|[m      for line in split_lines:[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="811a7c2" class="tab"><input type="checkbox" name="toggle" id="811a7c2a443de7f1b5ce5458171c953671b1bed0" class="toggle"><label for="811a7c2a443de7f1b5ce5458171c953671b1bed0" class="title"><div class="line"><span class="tree"></span><span class="content">811a7c2 Fixed import of `urlopen[2]` on Python 3.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 08030f8..e05432f 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -13,7 +13,13 @@[m [mfrom datetime import datetime, timedelta[m
[1;34m|[m [1;35m|[m  import itertools[m
[1;34m|[m [1;35m|[m  import json[m
[1;34m|[m [1;35m|[m  import math[m
[1;34m|[m [1;35m|[m [31m-import urllib2[m
[1;34m|[m [1;35m|[m [32m+[m[32mtry:[m
[1;34m|[m [1;35m|[m [32m+[m[32m    # Python 3+[m
[1;34m|[m [1;35m|[m [32m+[m[32m    from urllib.error import HTTPError, URLError[m
[1;34m|[m [1;35m|[m [32m+[m[32m    from urllib.request import urlopen[m
[1;34m|[m [1;35m|[m [32m+[m[32mexcept ImportError:[m
[1;34m|[m [1;35m|[m [32m+[m[32m    # Python 2[m
[1;34m|[m [1;35m|[m [32m+[m[32m    from urllib2 import HTTPError, URLError, urlopen[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  GITHUB_BASE_URL = 'https://github.com/'[m
[1;34m|[m [1;35m|[m [36m@@ -199,8 +205,8 @@[m [mdef get_calendar(username, base_url):[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      try:        [m
[1;34m|[m [1;35m|[m          url = base_url + '/contributions'[m
[1;34m|[m [1;35m|[m [31m-        page = urllib2.urlopen(url)[m
[1;34m|[m [1;35m|[m [31m-    except (urllib2.HTTPError, urllib2.URLError) as e:[m
[1;34m|[m [1;35m|[m [32m+[m[32m        page = urlopen(url)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    except (HTTPError, URLError) as e:[m
[1;34m|[m [1;35m|[m          print('There was a problem fetching data from {0}'.format(url))[m
[1;34m|[m [1;35m|[m          print(e)[m
[1;34m|[m [1;35m|[m          raise SystemExit[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="e7e6783" class="tab"><input type="checkbox" name="toggle" id="e7e67834c873a68fd8ec2dcfbdcd1429660126e3" class="toggle"><label for="e7e67834c873a68fd8ec2dcfbdcd1429660126e3" class="title"><div class="line"><span class="tree"></span><span class="content">e7e6783 Introduced package for tests and added a test case for `str_to_sprite`.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/tests/__init__.py b/tests/__init__.py[m
[1;34m|[m [1;35m|[m [1mnew file mode 100644[m
[1;34m|[m [1;35m|[m [1mindex 0000000..e69de29[m
[1;34m|[m [1;35m|[m [1mdiff --git a/tests/test_str_to_sprite.py b/tests/test_str_to_sprite.py[m
[1;34m|[m [1;35m|[m [1mnew file mode 100644[m
[1;34m|[m [1;35m|[m [1mindex 0000000..41cc43c[m
[1;34m|[m [1;35m|[m [1m--- /dev/null[m
[1;34m|[m [1;35m|[m [1m+++ b/tests/test_str_to_sprite.py[m
[1;34m|[m [1;35m|[m [36m@@ -0,0 +1,27 @@[m
[1;34m|[m [1;35m|[m [32m+[m[32mfrom gitfiti import str_to_sprite, ONEUP_STR[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m[32mSYMBOLS = '''[m
[1;34m|[m [1;35m|[m [32m+[m[32m *******[m[41m [m
[1;34m|[m [1;35m|[m [32m+[m[32m*=~~-~~=*[m
[1;34m|[m [1;35m|[m [32m+[m[32m*~~---~~*[m
[1;34m|[m [1;35m|[m [32m+[m[32m*=*****=*[m
[1;34m|[m [1;35m|[m [32m+[m[32m**-*-*-**[m
[1;34m|[m [1;35m|[m [32m+[m[32m *-----*[m[41m [m
[1;34m|[m [1;35m|[m [32m+[m[32m  *****[m[41m  [m
[1;34m|[m [1;35m|[m [32m+[m[32m'''[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m[32mNUMBERS = [[m
[1;34m|[m [1;35m|[m [32m+[m[32m  [0,4,4,4,4,4,4,4,0],[m
[1;34m|[m [1;35m|[m [32m+[m[32m  [4,3,2,2,0,2,2,3,4],[m
[1;34m|[m [1;35m|[m [32m+[m[32m  [4,2,2,0,0,0,2,2,4],[m
[1;34m|[m [1;35m|[m [32m+[m[32m  [4,3,4,4,4,4,4,3,4],[m
[1;34m|[m [1;35m|[m [32m+[m[32m  [4,4,0,4,0,4,0,4,4],[m
[1;34m|[m [1;35m|[m [32m+[m[32m  [0,4,0,0,0,0,0,4,0],[m
[1;34m|[m [1;35m|[m [32m+[m[32m  [0,0,4,4,4,4,4,0,0],[m
[1;34m|[m [1;35m|[m [32m+[m[32m][m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef test_symbols_to_numbers():[m
[1;34m|[m [1;35m|[m [32m+[m[32m    actual = str_to_sprite(SYMBOLS)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    assert actual == NUMBERS[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="5b6a3cf" class="tab"><input type="checkbox" name="toggle" id="5b6a3cfc2c580005208172498e6e9dafbf1f155b" class="toggle"><label for="5b6a3cfc2c580005208172498e6e9dafbf1f155b" class="title"><div class="line"><span class="tree"></span><span class="content">5b6a3cf Finding the highest daily commit count once is sufficient.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex d0ef78a..08030f8 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -328,7 +328,9 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      cal = get_calendar(username, git_base)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    m = calculate_multiplier(find_max_commits(cal))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    max_commits = find_max_commits(cal)[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m[32m    m = calculate_multiplier(max_commits)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m [1;35m|[m      repo = request_user_input()[m
[1;34m|[m [1;35m|[m [36m@@ -347,7 +349,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          'Enter the word "gitfiti" to exceed your max\n'[m
[1;34m|[m [1;35m|[m          '(this option generates WAY more commits)\n'[m
[1;34m|[m [1;35m|[m          'Any other input will cause the default matching behavior'[m
[1;34m|[m [1;35m|[m [31m-    ).format(find_max_commits(cal)))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    ).format(max_commits))[m
[1;34m|[m [1;35m|[m      match = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      match = m if (match == 'gitfiti') else 1[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="302e834" class="tab"><input type="checkbox" name="toggle" id="302e83416d0934535b509ecb92484aa11321b7fe" class="toggle"><label for="302e83416d0934535b509ecb92484aa11321b7fe" class="title"><div class="line"><span class="tree"></span><span class="content">302e834 Use one-liner.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 982b064..d0ef78a 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -324,10 +324,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      print('Enter your GitHub username:')[m
[1;34m|[m [1;35m|[m      username = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    if not ghe:[m
[1;34m|[m [1;35m|[m [31m-        git_base = GITHUB_BASE_URL[m
[1;34m|[m [1;35m|[m [31m-    else:[m
[1;34m|[m [1;35m|[m [31m-        git_base = ghe[m
[1;34m|[m [1;35m|[m [32m+[m[32m    git_base = ghe if ghe else GITHUB_BASE_URL[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      cal = get_calendar(username, git_base)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="f6727b2" class="tab"><input type="checkbox" name="toggle" id="f6727b25557be48eda76e08b08d5dd169cd3fa29" class="toggle"><label for="f6727b25557be48eda76e08b08d5dd169cd3fa29" class="title"><div class="line"><span class="tree"></span><span class="content">f6727b2 Extracted function calls.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 713695b..982b064 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -326,11 +326,11 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m          git_base = GITHUB_BASE_URL[m
[1;34m|[m [1;35m|[m [31m-        cal = get_calendar(username, git_base)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m [31m-        cal = get_calendar(username, ghe)[m
[1;34m|[m [1;35m|[m          git_base = ghe[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [32m+[m[32m    cal = get_calendar(username, git_base)[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m      m = calculate_multiplier(find_max_commits(cal))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m [1;35m|[m [36m@@ -380,12 +380,11 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m          git_url = 'git@github.com'[m
[1;34m|[m [1;35m|[m [31m-        output = fake_it(image, start_date, username, repo, git_url, offset,[m
[1;34m|[m [1;35m|[m [31m-                         fake_it_multiplier)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m          git_url = request_user_input('Enter Git URL like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m [31m-        output = fake_it(image, start_date, username, repo, git_url, offset,[m
[1;34m|[m [1;35m|[m [31m-                         fake_it_multiplier)[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m[32m    output = fake_it(image, start_date, username, repo, git_url, offset,[m
[1;34m|[m [1;35m|[m [32m+[m[32m                     fake_it_multiplier)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      save(output, 'gitfiti.sh')[m
[1;34m|[m [1;35m|[m      print('gitfiti.sh saved.')[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="ca1dc8f" class="tab"><input type="checkbox" name="toggle" id="ca1dc8f00e69691f4425372a33dcd65c301b7678" class="toggle"><label for="ca1dc8f00e69691f4425372a33dcd65c301b7678" class="title"><div class="line"><span class="tree"></span><span class="content">ca1dc8f Turn the optional Git URL argument into a mandatory one.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex acaefa8..713695b 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -278,8 +278,7 @@[m [mdef commit(content, commitdate):[m
[1;34m|[m [1;35m|[m              commitdate.isoformat())[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;34m|[m [1;35m|[m [31m-            git_url='git@github.com'):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef fake_it(image, start_date, username, repo, git_url, offset=0, multiplier=1):[m
[1;34m|[m [1;35m|[m      template = ([m
[1;34m|[m [1;35m|[m          '#!/bin/bash\n'[m
[1;34m|[m [1;35m|[m          'REPO={0}\n'[m
[1;34m|[m [1;35m|[m [36m@@ -380,12 +379,13 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      fake_it_multiplier = m * match[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m [31m-        output = fake_it(image, start_date, username, repo, offset,[m
[1;34m|[m [1;35m|[m [32m+[m[32m        git_url = 'git@github.com'[m
[1;34m|[m [1;35m|[m [32m+[m[32m        output = fake_it(image, start_date, username, repo, git_url, offset,[m
[1;34m|[m [1;35m|[m                           fake_it_multiplier)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m          git_url = request_user_input('Enter Git URL like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m [31m-        output = fake_it(image, start_date, username, repo, offset,[m
[1;34m|[m [1;35m|[m [31m-                         fake_it_multiplier, git_url=git_url)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        output = fake_it(image, start_date, username, repo, git_url, offset,[m
[1;34m|[m [1;35m|[m [32m+[m[32m                         fake_it_multiplier)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      save(output, 'gitfiti.sh')[m
[1;34m|[m [1;35m|[m      print('gitfiti.sh saved.')[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="02d049b" class="tab"><input type="checkbox" name="toggle" id="02d049b1a3b9b14eba98e9422e5fdf9ea0f787a0" class="toggle"><label for="02d049b1a3b9b14eba98e9422e5fdf9ea0f787a0" class="title"><div class="line"><span class="tree"></span><span class="content">02d049b Introduced a few variables.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 5a09f2e..acaefa8 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -359,27 +359,33 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      print('enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m [1;35m|[m      img_names = request_user_input().split(' ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    images = dict(IMAGES, **load_images(img_names))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    loaded_images = load_images(img_names)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    images = dict(IMAGES, **loaded_images)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('enter the image name to gitfiti')[m
[1;34m|[m [1;35m|[m      print('images: ' + ', '.join(images.keys()))[m
[1;34m|[m [1;35m|[m      image = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [32m+[m[32m    image_name_fallback = 'kitty'[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m      if not image:[m
[1;34m|[m [1;35m|[m [31m-        image = IMAGES['kitty'][m
[1;34m|[m [1;35m|[m [32m+[m[32m        image = IMAGES[image_name_fallback][m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m          try: [m
[1;34m|[m [1;35m|[m              image = images[image][m
[1;34m|[m [1;35m|[m          except: [m
[1;34m|[m [1;35m|[m [31m-            image = IMAGES['kitty'][m
[1;34m|[m [1;35m|[m [32m+[m[32m            image = IMAGES[image_name_fallback][m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m[32m    start_date = get_start_date()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    fake_it_multiplier = m * match[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m [31m-        output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m [31m-                         offset, m * match)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        output = fake_it(image, start_date, username, repo, offset,[m
[1;34m|[m [1;35m|[m [32m+[m[32m                         fake_it_multiplier)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m          git_url = request_user_input('Enter Git URL like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m [31m-        output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m [31m-                         offset, m * match, git_url=git_url)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        output = fake_it(image, start_date, username, repo, offset,[m
[1;34m|[m [1;35m|[m [32m+[m[32m                         fake_it_multiplier, git_url=git_url)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      save(output, 'gitfiti.sh')[m
[1;34m|[m [1;35m|[m      print('gitfiti.sh saved.')[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="71c88fc" class="tab"><input type="checkbox" name="toggle" id="71c88fc0842a4442ee34c85af1da2b3b250766b6" class="toggle"><label for="71c88fc0842a4442ee34c85af1da2b3b250766b6" class="title"><div class="line"><span class="tree"></span><span class="content">71c88fc Turn the optional base URL argument into a mandatory one.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex a84c529..5a09f2e 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -193,7 +193,7 @@[m [mdef load_images(img_names):[m
[1;34m|[m [1;35m|[m          return loaded_imgs[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def get_calendar(username, base_url=GITHUB_BASE_URL):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef get_calendar(username, base_url):[m
[1;34m|[m [1;35m|[m      """retrieves the GitHub commit calendar data for a username"""[m
[1;34m|[m [1;35m|[m      base_url = base_url + 'users/' + username[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -327,9 +327,9 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m          git_base = GITHUB_BASE_URL[m
[1;34m|[m [1;35m|[m [31m-        cal = get_calendar(username)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        cal = get_calendar(username, git_base)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m [31m-        cal = get_calendar(username, base_url=ghe)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        cal = get_calendar(username, ghe)[m
[1;34m|[m [1;35m|[m          git_base = ghe[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      m = calculate_multiplier(find_max_commits(cal))[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="68a1fb2" class="tab"><input type="checkbox" name="toggle" id="68a1fb2b031bcd605e027cc45cf1d4ee3637211e" class="toggle"><label for="68a1fb2b031bcd605e027cc45cf1d4ee3637211e" class="title"><div class="line"><span class="tree"></span><span class="content">68a1fb2 Extracted "constant" for GitHub base URL.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex ed8d128..a84c529 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -16,6 +16,9 @@[m [mimport math[m
[1;34m|[m [1;35m|[m  import urllib2[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [32m+[m[32mGITHUB_BASE_URL = 'https://github.com/'[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m  TITLE = '''[m
[1;34m|[m [1;35m|[m            _ __  _____ __  _ [m
[1;34m|[m [1;35m|[m     ____ _(_) /_/ __(_) /_(_)[m
[1;34m|[m [1;35m|[m [36m@@ -190,7 +193,7 @@[m [mdef load_images(img_names):[m
[1;34m|[m [1;35m|[m          return loaded_imgs[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def get_calendar(username, base_url='https://github.com/'):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef get_calendar(username, base_url=GITHUB_BASE_URL):[m
[1;34m|[m [1;35m|[m      """retrieves the GitHub commit calendar data for a username"""[m
[1;34m|[m [1;35m|[m      base_url = base_url + 'users/' + username[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -316,13 +319,14 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      print(TITLE)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter GitHub URL')[m
[1;34m|[m [1;35m|[m [31m-    ghe = request_user_input('Enter nothing for https://github.com/ to be used: ')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    ghe = request_user_input('Enter nothing for {} to be used: '[m
[1;34m|[m [1;35m|[m [32m+[m[32m                             .format(GITHUB_BASE_URL))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter your GitHub username:')[m
[1;34m|[m [1;35m|[m      username = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m [31m-        git_base = 'https://github.com/'[m
[1;34m|[m [1;35m|[m [32m+[m[32m        git_base = GITHUB_BASE_URL[m
[1;34m|[m [1;35m|[m          cal = get_calendar(username)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m          cal = get_calendar(username, base_url=ghe)[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="73361c6" class="tab"><input type="checkbox" name="toggle" id="73361c64d9ea09c2de681b5b14db8643914ef887" class="toggle"><label for="73361c64d9ea09c2de681b5b14db8643914ef887" class="title"><div class="line"><span class="tree"></span><span class="content">73361c6 Prefix function names with verbs to avoid confusion (or upcoming conflicts) with variables.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 3403690..ed8d128 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -205,7 +205,7 @@[m [mdef get_calendar(username, base_url='https://github.com/'):[m
[1;34m|[m [1;35m|[m      return page.readlines()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def max_commits(calendar):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef find_max_commits(calendar):[m
[1;34m|[m [1;35m|[m      """finds the highest number of commits in one day"""[m
[1;34m|[m [1;35m|[m      output = set()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -222,7 +222,7 @@[m [mdef max_commits(calendar):[m
[1;34m|[m [1;35m|[m      return output[0][m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def multiplier(max_commits):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef calculate_multiplier(max_commits):[m
[1;34m|[m [1;35m|[m      """calculates a multiplier to scale GitHub colors to commit history"""[m
[1;34m|[m [1;35m|[m      m = max_commits / 4.0[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -248,7 +248,7 @@[m [mdef get_start_date():[m
[1;34m|[m [1;35m|[m      return date[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def date_gen(start_date, offset=0):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef generate_next_dates(start_date, offset=0):[m
[1;34m|[m [1;35m|[m      """generator that returns the next date, requires a datetime object as[m
[1;34m|[m [1;35m|[m      input. The offset is in weeks"""[m
[1;34m|[m [1;35m|[m      start = offset * 7[m
[1;34m|[m [1;35m|[m [36m@@ -256,7 +256,7 @@[m [mdef date_gen(start_date, offset=0):[m
[1;34m|[m [1;35m|[m          yield start_date + timedelta(i)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def values_in_date_order(image, multiplier=1):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef generate_values_in_date_order(image, multiplier=1):[m
[1;34m|[m [1;35m|[m      height = 7[m
[1;34m|[m [1;35m|[m      width = len(image[0])[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -293,8 +293,8 @@[m [mdef fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;34m|[m [1;35m|[m      )[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      strings = [][m
[1;34m|[m [1;35m|[m [31m-    for value, date in zip(values_in_date_order(image, multiplier),[m
[1;34m|[m [1;35m|[m [31m-            date_gen(start_date, offset)):[m
[1;34m|[m [1;35m|[m [32m+[m[32m    for value, date in zip(generate_values_in_date_order(image, multiplier),[m
[1;34m|[m [1;35m|[m [32m+[m[32m            generate_next_dates(start_date, offset)):[m
[1;34m|[m [1;35m|[m          for i in range(value):[m
[1;34m|[m [1;35m|[m              strings.append(commit(i, date))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -328,7 +328,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          cal = get_calendar(username, base_url=ghe)[m
[1;34m|[m [1;35m|[m          git_base = ghe[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    m = multiplier(max_commits(cal))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    m = calculate_multiplier(find_max_commits(cal))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m [1;35m|[m      repo = request_user_input()[m
[1;34m|[m [1;35m|[m [36m@@ -347,7 +347,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          'Enter the word "gitfiti" to exceed your max\n'[m
[1;34m|[m [1;35m|[m          '(this option generates WAY more commits)\n'[m
[1;34m|[m [1;35m|[m          'Any other input will cause the default matching behavior'[m
[1;34m|[m [1;35m|[m [31m-    ).format(max_commits(cal)))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    ).format(find_max_commits(cal)))[m
[1;34m|[m [1;35m|[m      match = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      match = m if (match == 'gitfiti') else 1[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="bdcdd8f" class="tab"><input type="checkbox" name="toggle" id="bdcdd8f137ace83a10be5265e0e3758d95c6d75f" class="toggle"><label for="bdcdd8f137ace83a10be5265e0e3758d95c6d75f" class="title"><div class="line"><span class="tree"></span><span class="content">bdcdd8f Selectively employ one-liner conditionals for brevity.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex e632ffc..3403690 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -336,10 +336,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      print('Enter the number of weeks to offset the image (from the left):')[m
[1;34m|[m [1;35m|[m      offset = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    if not offset.strip():[m
[1;34m|[m [1;35m|[m [31m-        offset = 0[m
[1;34m|[m [1;35m|[m [31m-    else:[m
[1;34m|[m [1;35m|[m [31m-        offset = int(offset)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    offset = int(offset) if offset.strip() else 0[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print(([m
[1;34m|[m [1;35m|[m          'By default gitfiti.py matches the darkest pixel to the highest\n'[m
[1;34m|[m [1;35m|[m [36m@@ -353,10 +350,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      ).format(max_commits(cal)))[m
[1;34m|[m [1;35m|[m      match = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    if match == 'gitfiti': [m
[1;34m|[m [1;35m|[m [31m-        match = m[m
[1;34m|[m [1;35m|[m [31m-    else: [m
[1;34m|[m [1;35m|[m [31m-        match = 1[m
[1;34m|[m [1;35m|[m [32m+[m[32m    match = m if (match == 'gitfiti') else 1[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m [1;35m|[m      img_names = request_user_input().split(' ')[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="8220489" class="tab"><input type="checkbox" name="toggle" id="822048909b8b49170503d465c5b2e34cceed6f19" class="toggle"><label for="822048909b8b49170503d465c5b2e34cceed6f19" class="title"><div class="line"><span class="tree"></span><span class="content">8220489 Extracted function to request user input.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex a3ab4f9..e632ffc 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -307,14 +307,19 @@[m [mdef save(output, filename):[m
[1;34m|[m [1;35m|[m          f.write(output)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [32m+[m[32mdef request_user_input(prompt='> '):[m
[1;34m|[m [1;35m|[m [32m+[m[32m    """Request input from the user and return what has been entered."""[m
[1;34m|[m [1;35m|[m [32m+[m[32m    return raw_input(prompt)[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m [32m+[m
[1;34m|[m [1;35m|[m  def main():[m
[1;34m|[m [1;35m|[m      print(TITLE)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter GitHub URL')[m
[1;34m|[m [1;35m|[m [31m-    ghe = raw_input('Enter nothing for https://github.com/ to be used: ')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    ghe = request_user_input('Enter nothing for https://github.com/ to be used: ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter your GitHub username:')[m
[1;34m|[m [1;35m|[m [31m-    username = raw_input('>')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    username = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m          git_base = 'https://github.com/'[m
[1;34m|[m [1;35m|[m [36m@@ -326,10 +331,10 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      m = multiplier(max_commits(cal))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m [1;35m|[m [31m-    repo = raw_input('>')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    repo = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter the number of weeks to offset the image (from the left):')[m
[1;34m|[m [1;35m|[m [31m-    offset = raw_input('>')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    offset = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not offset.strip():[m
[1;34m|[m [1;35m|[m          offset = 0[m
[1;34m|[m [1;35m|[m [36m@@ -346,7 +351,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          '(this option generates WAY more commits)\n'[m
[1;34m|[m [1;35m|[m          'Any other input will cause the default matching behavior'[m
[1;34m|[m [1;35m|[m      ).format(max_commits(cal)))[m
[1;34m|[m [1;35m|[m [31m-    match = raw_input('>')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    match = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if match == 'gitfiti': [m
[1;34m|[m [1;35m|[m          match = m[m
[1;34m|[m [1;35m|[m [36m@@ -354,13 +359,13 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          match = 1[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m [1;35m|[m [31m-    img_names = raw_input('>').split(' ')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    img_names = request_user_input().split(' ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      images = dict(IMAGES, **load_images(img_names))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('enter the image name to gitfiti')[m
[1;34m|[m [1;35m|[m      print('images: ' + ', '.join(images.keys()))[m
[1;34m|[m [1;35m|[m [31m-    image = raw_input('>')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    image = request_user_input()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not image:[m
[1;34m|[m [1;35m|[m          image = IMAGES['kitty'][m
[1;34m|[m [1;35m|[m [36m@@ -374,7 +379,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m                           offset, m * match)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m [31m-        git_url = raw_input('Enter Git URL like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m [32m+[m[32m        git_url = request_user_input('Enter Git URL like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m          output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m                           offset, m * match, git_url=git_url)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="60c2aae" class="tab"><input type="checkbox" name="toggle" id="60c2aae15fc2331ecd15d0dd192b09441a81eda3" class="toggle"><label for="60c2aae15fc2331ecd15d0dd192b09441a81eda3" class="title"><div class="line"><span class="tree"></span><span class="content">60c2aae Fixed name and acronym case.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 54fa9a6..a3ab4f9 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -6,7 +6,7 @@[m
[1;34m|[m [1;35m|[m  """[m
[1;34m|[m [1;35m|[m  gitfiti[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-noun : Carefully crafted graffiti in a github commit history calendar[m
[1;34m|[m [1;35m|[m [32m+[m[32mnoun : Carefully crafted graffiti in a GitHub commit history calendar[m
[1;34m|[m [1;35m|[m  """[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  from datetime import datetime, timedelta[m
[1;34m|[m [1;35m|[m [36m@@ -191,7 +191,7 @@[m [mdef load_images(img_names):[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def get_calendar(username, base_url='https://github.com/'):[m
[1;34m|[m [1;35m|[m [31m-    """retrieves the github commit calendar data for a username"""[m
[1;34m|[m [1;35m|[m [32m+[m[32m    """retrieves the GitHub commit calendar data for a username"""[m
[1;34m|[m [1;35m|[m      base_url = base_url + 'users/' + username[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      try:        [m
[1;34m|[m [1;35m|[m [36m@@ -223,7 +223,7 @@[m [mdef max_commits(calendar):[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def multiplier(max_commits):[m
[1;34m|[m [1;35m|[m [31m-    """calculates a multiplier to scale github colors to commit history"""[m
[1;34m|[m [1;35m|[m [32m+[m[32m    """calculates a multiplier to scale GitHub colors to commit history"""[m
[1;34m|[m [1;35m|[m      m = max_commits / 4.0[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if m == 0:[m
[1;34m|[m [1;35m|[m [36m@@ -310,10 +310,10 @@[m [mdef save(output, filename):[m
[1;34m|[m [1;35m|[m  def main():[m
[1;34m|[m [1;35m|[m      print(TITLE)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('Enter github url')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('Enter GitHub URL')[m
[1;34m|[m [1;35m|[m      ghe = raw_input('Enter nothing for https://github.com/ to be used: ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print('Enter your github username:')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('Enter your GitHub username:')[m
[1;34m|[m [1;35m|[m      username = raw_input('>')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m [36m@@ -338,7 +338,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print(([m
[1;34m|[m [1;35m|[m          'By default gitfiti.py matches the darkest pixel to the highest\n'[m
[1;34m|[m [1;35m|[m [31m-        'number of commits found in your github commit/activity calendar,\n'[m
[1;34m|[m [1;35m|[m [32m+[m[32m        'number of commits found in your GitHub commit/activity calendar,\n'[m
[1;34m|[m [1;35m|[m          '\n'[m
[1;34m|[m [1;35m|[m          'Currently this is: {0} commits\n'[m
[1;34m|[m [1;35m|[m          '\n'[m
[1;34m|[m [1;35m|[m [36m@@ -374,7 +374,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m                           offset, m * match)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m [31m-        git_url = raw_input('Enter git url like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m [32m+[m[32m        git_url = raw_input('Enter Git URL like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m          output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m                           offset, m * match, git_url=git_url)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="bb31c8e" class="tab"><input type="checkbox" name="toggle" id="bb31c8eb46a511ba9a29641417c0020808843618" class="toggle"><label for="bb31c8eb46a511ba9a29641417c0020808843618" class="title"><div class="line"><span class="tree"></span><span class="content">bb31c8e Create empty dict via literal syntax instead of function call.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 66a4fbf..54fa9a6 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -162,7 +162,7 @@[m [mIMAGES = {[m
[1;34m|[m [1;35m|[m  def load_images(img_names):[m
[1;34m|[m [1;35m|[m      """loads user images from given file(s)"""[m
[1;34m|[m [1;35m|[m      if img_names[0] == '':[m
[1;34m|[m [1;35m|[m [31m-        return dict()[m
[1;34m|[m [1;35m|[m [32m+[m[32m        return {}[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      for image_name in img_names:[m
[1;34m|[m [1;35m|[m          img = open(image_name)[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="c7ffdcd" class="tab"><input type="checkbox" name="toggle" id="c7ffdcde4de8b62965d3b9b5e5201e6c3af9b31d" class="toggle"><label for="c7ffdcde4de8b62965d3b9b5e5201e6c3af9b31d" class="title"><div class="line"><span class="tree"></span><span class="content">c7ffdcd Renamed function argument to reveal its meaning and to not override the built-in `input` function.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 7f7e50c..66a4fbf 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -205,11 +205,11 @@[m [mdef get_calendar(username, base_url='https://github.com/'):[m
[1;34m|[m [1;35m|[m      return page.readlines()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-def max_commits(input):[m
[1;34m|[m [1;35m|[m [32m+[m[32mdef max_commits(calendar):[m
[1;34m|[m [1;35m|[m      """finds the highest number of commits in one day"""[m
[1;34m|[m [1;35m|[m      output = set()[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    for line in input:[m
[1;34m|[m [1;35m|[m [32m+[m[32m    for line in calendar:[m
[1;34m|[m [1;35m|[m          for day in line.split():[m
[1;34m|[m [1;35m|[m              if 'data-count=' in day:[m
[1;34m|[m [1;35m|[m                  commit = day.split('=')[1][m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="c2870bb" class="tab"><input type="checkbox" name="toggle" id="c2870bb4ec7f849c920130cdac633fcff6124177" class="toggle"><label for="c2870bb4ec7f849c920130cdac633fcff6124177" class="title"><div class="line"><span class="tree"></span><span class="content">c2870bb Clarified variable name.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 88e6ebe..7f7e50c 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -237,8 +237,8 @@[m [mdef multiplier(max_commits):[m
[1;34m|[m [1;35m|[m  def get_start_date():[m
[1;34m|[m [1;35m|[m      """returns a datetime object for the first sunday after one year ago today[m
[1;34m|[m [1;35m|[m      at 12:00 noon"""[m
[1;34m|[m [1;35m|[m [31m-    d = datetime.today()[m
[1;34m|[m [1;35m|[m [31m-    date = datetime(d.year - 1, d.month, d.day, 12)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    today = datetime.today()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    date = datetime(today.year - 1, today.month, today.day, 12)[m
[1;34m|[m [1;35m|[m      weekday = datetime.weekday(date)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      while weekday < 6:[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="a76dd86" class="tab"><input type="checkbox" name="toggle" id="a76dd860f302dac91202e2c4e9c4aec41f7d1089" class="toggle"><label for="a76dd860f302dac91202e2c4e9c4aec41f7d1089" class="title"><div class="line"><span class="tree"></span><span class="content">a76dd86 Use string literal delimiters consistently (triple double-quotes for docstrings, [triple] single quotes for everything else where feasible).</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 871f001..88e6ebe 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -135,7 +135,7 @@[m [mdef str_to_sprite(content):[m
[1;34m|[m [1;35m|[m      return split_lines[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-ONEUP_STR = str_to_sprite("""[m
[1;34m|[m [1;35m|[m [32m+[m[32mONEUP_STR = str_to_sprite('''[m
[1;34m|[m [1;35m|[m   ******* [m
[1;34m|[m [1;35m|[m  *=~~-~~=*[m
[1;34m|[m [1;35m|[m  *~~---~~*[m
[1;34m|[m [1;35m|[m [36m@@ -143,7 +143,7 @@[m [mONEUP_STR = str_to_sprite("""[m
[1;34m|[m [1;35m|[m  **-*-*-**[m
[1;34m|[m [1;35m|[m   *-----* [m
[1;34m|[m [1;35m|[m    *****  [m
[1;34m|[m [1;35m|[m [31m-""")[m
[1;34m|[m [1;35m|[m [32m+[m[32m''')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  IMAGES = {[m
[1;34m|[m [1;35m|[m [36m@@ -198,7 +198,7 @@[m [mdef get_calendar(username, base_url='https://github.com/'):[m
[1;34m|[m [1;35m|[m          url = base_url + '/contributions'[m
[1;34m|[m [1;35m|[m          page = urllib2.urlopen(url)[m
[1;34m|[m [1;35m|[m      except (urllib2.HTTPError, urllib2.URLError) as e:[m
[1;34m|[m [1;35m|[m [31m-        print("There was a problem fetching data from {0}".format(url))[m
[1;34m|[m [1;35m|[m [32m+[m[32m        print('There was a problem fetching data from {0}'.format(url))[m
[1;34m|[m [1;35m|[m          print(e)[m
[1;34m|[m [1;35m|[m          raise SystemExit[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -211,7 +211,7 @@[m [mdef max_commits(input):[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      for line in input:[m
[1;34m|[m [1;35m|[m          for day in line.split():[m
[1;34m|[m [1;35m|[m [31m-            if "data-count=" in day:[m
[1;34m|[m [1;35m|[m [32m+[m[32m            if 'data-count=' in day:[m
[1;34m|[m [1;35m|[m                  commit = day.split('=')[1][m
[1;34m|[m [1;35m|[m                  commit = commit.strip('"')[m
[1;34m|[m [1;35m|[m                  output.add(int(commit))[m
[1;34m|[m [1;35m|[m [36m@@ -267,9 +267,9 @@[m [mdef values_in_date_order(image, multiplier=1):[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def commit(content, commitdate):[m
[1;34m|[m [1;35m|[m      template = ([m
[1;34m|[m [1;35m|[m [31m-        """echo {0} >> gitfiti\n"""[m
[1;34m|[m [1;35m|[m [31m-        """GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2} """[m
[1;34m|[m [1;35m|[m [31m-        """git commit -a -m "gitfiti" > /dev/null\n"""[m
[1;34m|[m [1;35m|[m [32m+[m[32m        '''echo {0} >> gitfiti\n'''[m
[1;34m|[m [1;35m|[m [32m+[m[32m        '''GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2} '''[m
[1;34m|[m [1;35m|[m [32m+[m[32m        '''git commit -a -m "gitfiti" > /dev/null\n'''[m
[1;34m|[m [1;35m|[m      )[m
[1;34m|[m [1;35m|[m      return template.format(content, commitdate.isoformat(), [m
[1;34m|[m [1;35m|[m              commitdate.isoformat())[m
[1;34m|[m [1;35m|[m [36m@@ -298,26 +298,26 @@[m [mdef fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;34m|[m [1;35m|[m          for i in range(value):[m
[1;34m|[m [1;35m|[m              strings.append(commit(i, date))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    return template.format(repo, "".join(strings), git_url, username)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    return template.format(repo, ''.join(strings), git_url, username)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def save(output, filename):[m
[1;34m|[m [1;35m|[m      """Saves the list to a given filename"""[m
[1;34m|[m [1;35m|[m [31m-    with open(filename, "w") as f:[m
[1;34m|[m [1;35m|[m [32m+[m[32m    with open(filename, 'w') as f:[m
[1;34m|[m [1;35m|[m          f.write(output)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def main():[m
[1;34m|[m [1;35m|[m      print(TITLE)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    print("Enter github url")[m
[1;34m|[m [1;35m|[m [31m-    ghe = raw_input("Enter nothing for https://github.com/ to be used: ")[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('Enter github url')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    ghe = raw_input('Enter nothing for https://github.com/ to be used: ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter your github username:')[m
[1;34m|[m [1;35m|[m [31m-    username = raw_input(">")[m
[1;34m|[m [1;35m|[m [32m+[m[32m    username = raw_input('>')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not ghe:[m
[1;34m|[m [1;35m|[m [31m-        git_base = "https://github.com/"[m
[1;34m|[m [1;35m|[m [32m+[m[32m        git_base = 'https://github.com/'[m
[1;34m|[m [1;35m|[m          cal = get_calendar(username)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m          cal = get_calendar(username, base_url=ghe)[m
[1;34m|[m [1;35m|[m [36m@@ -326,10 +326,10 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m      m = multiplier(max_commits(cal))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m [1;35m|[m [31m-    repo = raw_input(">")[m
[1;34m|[m [1;35m|[m [32m+[m[32m    repo = raw_input('>')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('Enter the number of weeks to offset the image (from the left):')[m
[1;34m|[m [1;35m|[m [31m-    offset = raw_input(">")[m
[1;34m|[m [1;35m|[m [32m+[m[32m    offset = raw_input('>')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not offset.strip():[m
[1;34m|[m [1;35m|[m          offset = 0[m
[1;34m|[m [1;35m|[m [36m@@ -346,21 +346,21 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          '(this option generates WAY more commits)\n'[m
[1;34m|[m [1;35m|[m          'Any other input will cause the default matching behavior'[m
[1;34m|[m [1;35m|[m      ).format(max_commits(cal)))[m
[1;34m|[m [1;35m|[m [31m-    match = raw_input(">")[m
[1;34m|[m [1;35m|[m [32m+[m[32m    match = raw_input('>')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-    if match == "gitfiti": [m
[1;34m|[m [1;35m|[m [32m+[m[32m    if match == 'gitfiti':[m[41m [m
[1;34m|[m [1;35m|[m          match = m[m
[1;34m|[m [1;35m|[m      else: [m
[1;34m|[m [1;35m|[m          match = 1[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m [1;35m|[m [31m-    img_names = raw_input(">").split(' ')[m
[1;34m|[m [1;35m|[m [32m+[m[32m    img_names = raw_input('>').split(' ')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      images = dict(IMAGES, **load_images(img_names))[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      print('enter the image name to gitfiti')[m
[1;34m|[m [1;35m|[m [31m-    print('images: ' + ", ".join(images.keys()))[m
[1;34m|[m [1;35m|[m [31m-    image = raw_input(">")[m
[1;34m|[m [1;35m|[m [32m+[m[32m    print('images: ' + ', '.join(images.keys()))[m
[1;34m|[m [1;35m|[m [32m+[m[32m    image = raw_input('>')[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      if not image:[m
[1;34m|[m [1;35m|[m          image = IMAGES['kitty'][m
[1;34m|[m [1;35m|[m [36m@@ -374,7 +374,7 @@[m [mdef main():[m
[1;34m|[m [1;35m|[m          output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m                           offset, m * match)[m
[1;34m|[m [1;35m|[m      else:[m
[1;34m|[m [1;35m|[m [31m-        git_url = raw_input("Enter git url like git@site.github.com: ")[m
[1;34m|[m [1;35m|[m [32m+[m[32m        git_url = raw_input('Enter git url like git@site.github.com: ')[m
[1;34m|[m [1;35m|[m          output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m [1;35m|[m                           offset, m * match, git_url=git_url)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="b717414" class="tab"><input type="checkbox" name="toggle" id="b717414e7bdfe759efa7345653105c359f63155a" class="toggle"><label for="b717414e7bdfe759efa7345653105c359f63155a" class="title"><div class="line"><span class="tree"></span><span class="content">b717414 Import the `datetime` and `timedelta` classes from the `datetime` package without having to fully qualify their uses.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex f2459d9..871f001 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -9,7 +9,7 @@[m [mgitfiti[m
[1;34m|[m [1;35m|[m  noun : Carefully crafted graffiti in a github commit history calendar[m
[1;34m|[m [1;35m|[m  """[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [31m-import datetime[m
[1;34m|[m [1;35m|[m [32m+[m[32mfrom datetime import datetime, timedelta[m
[1;34m|[m [1;35m|[m  import itertools[m
[1;34m|[m [1;35m|[m  import json[m
[1;34m|[m [1;35m|[m  import math[m
[1;34m|[m [1;35m|[m [36m@@ -237,13 +237,13 @@[m [mdef multiplier(max_commits):[m
[1;34m|[m [1;35m|[m  def get_start_date():[m
[1;34m|[m [1;35m|[m      """returns a datetime object for the first sunday after one year ago today[m
[1;34m|[m [1;35m|[m      at 12:00 noon"""[m
[1;34m|[m [1;35m|[m [31m-    d = datetime.datetime.today()[m
[1;34m|[m [1;35m|[m [31m-    date = datetime.datetime(d.year - 1, d.month, d.day, 12)[m
[1;34m|[m [1;35m|[m [31m-    weekday = datetime.datetime.weekday(date)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    d = datetime.today()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    date = datetime(d.year - 1, d.month, d.day, 12)[m
[1;34m|[m [1;35m|[m [32m+[m[32m    weekday = datetime.weekday(date)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      while weekday < 6:[m
[1;34m|[m [1;35m|[m [31m-        date = date + datetime.timedelta(1)[m
[1;34m|[m [1;35m|[m [31m-        weekday = datetime.datetime.weekday(date)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        date = date + timedelta(1)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        weekday = datetime.weekday(date)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m      return date[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m [36m@@ -253,7 +253,7 @@[m [mdef date_gen(start_date, offset=0):[m
[1;34m|[m [1;35m|[m      input. The offset is in weeks"""[m
[1;34m|[m [1;35m|[m      start = offset * 7[m
[1;34m|[m [1;35m|[m      for i in itertools.count(start):[m
[1;34m|[m [1;35m|[m [31m-        yield start_date + datetime.timedelta(i)[m
[1;34m|[m [1;35m|[m [32m+[m[32m        yield start_date + timedelta(i)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def values_in_date_order(image, multiplier=1):[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="e1b2657" class="tab"><input type="checkbox" name="toggle" id="e1b2657ff022c959cc10146c6d50a95e11527c05" class="toggle"><label for="e1b2657ff022c959cc10146c6d50a95e11527c05" class="title"><div class="line"><span class="tree"></span><span class="content">e1b2657 Open file via `with` statement so it gets closed automatically.</span></div></label><div class="patch">
[1;34m|[m [1;35m|[m 
[1;34m|[m [1;35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m [1;35m|[m [1mindex 7f2c678..f2459d9 100755[m
[1;34m|[m [1;35m|[m [1m--- a/gitfiti.py[m
[1;34m|[m [1;35m|[m [1m+++ b/gitfiti.py[m
[1;34m|[m [1;35m|[m [36m@@ -303,9 +303,8 @@[m [mdef fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def save(output, filename):[m
[1;34m|[m [1;35m|[m      """Saves the list to a given filename"""[m
[1;34m|[m [1;35m|[m [31m-    f = open(filename, "w")[m
[1;34m|[m [1;35m|[m [31m-    f.write(output)[m
[1;34m|[m [1;35m|[m [31m-    f.close()[m
[1;34m|[m [1;35m|[m [32m+[m[32m    with open(filename, "w") as f:[m
[1;34m|[m [1;35m|[m [32m+[m[32m        f.write(output)[m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  [m
[1;34m|[m [1;35m|[m  def main():[m
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="be6bd58" class="tab"><input type="checkbox" name="toggle" id="be6bd58080d4ff02b9ef7a285bdd46cd8c8359c4" class="toggle"><label for="be6bd58080d4ff02b9ef7a285bdd46cd8c8359c4" class="title"><div class="line"><span class="tree"></span><span class="content">be6bd58 Formatted with PEP 8 in mind. Inserted additional blank lines for readability. Ordered imports alphabetically. Removed unnecessary parentheses.</span></div></label><div class="patch">
[1;34m|[m[1;34m/[m  
[1;34m|[m   
[1;34m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m   [1mindex 6dba153..7f2c678 100755[m
[1;34m|[m   [1m--- a/gitfiti.py[m
[1;34m|[m   [1m+++ b/gitfiti.py[m
[1;34m|[m   [36m@@ -7,14 +7,14 @@[m
[1;34m|[m    gitfiti[m
[1;34m|[m    [m
[1;34m|[m    noun : Carefully crafted graffiti in a github commit history calendar[m
[1;34m|[m   [31m-[m
[1;34m|[m    """[m
[1;34m|[m    [m
[1;34m|[m    import datetime[m
[1;34m|[m   [31m-import math[m
[1;34m|[m    import itertools[m
[1;34m|[m   [31m-import urllib2[m
[1;34m|[m    import json[m
[1;34m|[m   [32m+[m[32mimport math[m
[1;34m|[m   [32m+[m[32mimport urllib2[m
[1;34m|[m   [32m+[m
[1;34m|[m    [m
[1;34m|[m    TITLE = '''[m
[1;34m|[m              _ __  _____ __  _ [m
[1;34m|[m   [36m@@ -25,101 +25,116 @@[m [mTITLE = '''[m
[1;34m|[m    /____/ [m
[1;34m|[m    '''[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    KITTY = [[m
[1;34m|[m   [31m-[0,0,0,4,0,0,0,0,4,0,0,0],[m
[1;34m|[m   [31m-[0,0,4,2,4,4,4,4,2,4,0,0],[m
[1;34m|[m   [31m-[0,0,4,2,2,2,2,2,2,4,0,0],[m
[1;34m|[m   [31m-[2,2,4,2,4,2,2,4,2,4,2,2],[m
[1;34m|[m   [31m-[0,0,4,2,2,3,3,2,2,4,0,0],[m
[1;34m|[m   [31m-[2,2,4,2,2,2,2,2,2,4,2,2],[m
[1;34m|[m   [31m-[0,0,0,3,4,4,4,4,3,0,0,0]][m
[1;34m|[m   [32m+[m[32m  [0,0,0,4,0,0,0,0,4,0,0,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,2,4,4,4,4,2,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,2,2,2,2,2,2,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [2,2,4,2,4,2,2,4,2,4,2,2],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,2,2,3,3,2,2,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [2,2,4,2,2,2,2,2,2,4,2,2],[m
[1;34m|[m   [32m+[m[32m  [0,0,0,3,4,4,4,4,3,0,0,0],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m    [m
[1;34m|[m    ONEUP = [[m
[1;34m|[m   [31m-[0,4,4,4,4,4,4,4,0],[m
[1;34m|[m   [31m-[4,3,2,2,1,2,2,3,4],[m
[1;34m|[m   [31m-[4,2,2,1,1,1,2,2,4],[m
[1;34m|[m   [31m-[4,3,4,4,4,4,4,3,4],[m
[1;34m|[m   [31m-[4,4,1,4,1,4,1,4,4],[m
[1;34m|[m   [31m-[0,4,1,1,1,1,1,4,0],[m
[1;34m|[m   [31m-[0,0,4,4,4,4,4,0,0]][m
[1;34m|[m   [32m+[m[32m  [0,4,4,4,4,4,4,4,0],[m
[1;34m|[m   [32m+[m[32m  [4,3,2,2,1,2,2,3,4],[m
[1;34m|[m   [32m+[m[32m  [4,2,2,1,1,1,2,2,4],[m
[1;34m|[m   [32m+[m[32m  [4,3,4,4,4,4,4,3,4],[m
[1;34m|[m   [32m+[m[32m  [4,4,1,4,1,4,1,4,4],[m
[1;34m|[m   [32m+[m[32m  [0,4,1,1,1,1,1,4,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,4,4,4,4,0,0],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m    [m
[1;34m|[m    ONEUP2 = [[m
[1;34m|[m   [31m-[0,0,4,4,4,4,4,4,4,0,0],[m
[1;34m|[m   [31m-[0,4,2,2,1,1,1,2,2,4,0],[m
[1;34m|[m   [31m-[4,3,2,2,1,1,1,2,2,3,4],[m
[1;34m|[m   [31m-[4,3,3,4,4,4,4,4,3,3,4],[m
[1;34m|[m   [31m-[0,4,4,1,4,1,4,1,4,4,0],[m
[1;34m|[m   [31m-[0,0,4,1,1,1,1,1,4,0,0],[m
[1;34m|[m   [31m-[0,0,0,4,4,4,4,4,0,0,0]][m
[1;34m|[m   [32m+[m[32m  [0,0,4,4,4,4,4,4,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [0,4,2,2,1,1,1,2,2,4,0],[m
[1;34m|[m   [32m+[m[32m  [4,3,2,2,1,1,1,2,2,3,4],[m
[1;34m|[m   [32m+[m[32m  [4,3,3,4,4,4,4,4,3,3,4],[m
[1;34m|[m   [32m+[m[32m  [0,4,4,1,4,1,4,1,4,4,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,1,1,1,1,1,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,0,4,4,4,4,4,0,0,0],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m    [m
[1;34m|[m    HACKERSCHOOL = [[m
[1;34m|[m   [31m-[4,4,4,4,4,4],[m
[1;34m|[m   [31m-[4,3,3,3,3,4],[m
[1;34m|[m   [31m-[4,1,3,3,1,4],[m
[1;34m|[m   [31m-[4,3,3,3,3,4],[m
[1;34m|[m   [31m-[4,4,4,4,4,4],[m
[1;34m|[m   [31m-[0,0,4,4,0,0],[m
[1;34m|[m   [31m-[4,4,4,4,4,4]][m
[1;34m|[m   [32m+[m[32m  [4,4,4,4,4,4],[m
[1;34m|[m   [32m+[m[32m  [4,3,3,3,3,4],[m
[1;34m|[m   [32m+[m[32m  [4,1,3,3,1,4],[m
[1;34m|[m   [32m+[m[32m  [4,3,3,3,3,4],[m
[1;34m|[m   [32m+[m[32m  [4,4,4,4,4,4],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [4,4,4,4,4,4],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m    [m
[1;34m|[m    OCTOCAT = [[m
[1;34m|[m   [31m-[0,0,0,4,0,0,0,4,0],[m
[1;34m|[m   [31m-[0,0,4,4,4,4,4,4,4],[m
[1;34m|[m   [31m-[0,0,4,1,3,3,3,1,4],[m
[1;34m|[m   [31m-[4,0,3,4,3,3,3,4,3],[m
[1;34m|[m   [31m-[0,4,0,0,4,4,4,0,0],[m
[1;34m|[m   [31m-[0,0,4,4,4,4,4,4,4],[m
[1;34m|[m   [31m-[0,0,4,0,4,0,4,0,4]][m
[1;34m|[m   [32m+[m[32m  [0,0,0,4,0,0,0,4,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,4,4,4,4,4,4],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,1,3,3,3,1,4],[m
[1;34m|[m   [32m+[m[32m  [4,0,3,4,3,3,3,4,3],[m
[1;34m|[m   [32m+[m[32m  [0,4,0,0,4,4,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,4,4,4,4,4,4],[m
[1;34m|[m   [32m+[m[32m  [0,0,4,0,4,0,4,0,4],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m    [m
[1;34m|[m    OCTOCAT2 = [[m
[1;34m|[m   [31m-[0,0,4,0,0,4,0],[m
[1;34m|[m   [31m-[0,4,4,4,4,4,4],[m
[1;34m|[m   [31m-[0,4,1,3,3,1,4],[m
[1;34m|[m   [31m-[0,4,4,4,4,4,4],[m
[1;34m|[m   [31m-[4,0,0,4,4,0,0],[m
[1;34m|[m   [31m-[0,4,4,4,4,4,0],[m
[1;34m|[m   [31m-[0,0,0,4,4,4,0]][m
[1;34m|[m   [32m+[m[32m  [0,0,4,0,0,4,0],[m
[1;34m|[m   [32m+[m[32m  [0,4,4,4,4,4,4],[m
[1;34m|[m   [32m+[m[32m  [0,4,1,3,3,1,4],[m
[1;34m|[m   [32m+[m[32m  [0,4,4,4,4,4,4],[m
[1;34m|[m   [32m+[m[32m  [4,0,0,4,4,0,0],[m
[1;34m|[m   [32m+[m[32m  [0,4,4,4,4,4,0],[m
[1;34m|[m   [32m+[m[32m  [0,0,0,4,4,4,0],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m    [m
[1;34m|[m    HELLO = [[m
[1;34m|[m   [31m-[0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,4],[m
[1;34m|[m   [31m-[0,2,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,4],[m
[1;34m|[m   [31m-[0,3,3,3,0,2,3,3,0,3,0,3,0,1,3,1,0,3],[m
[1;34m|[m   [31m-[0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,3],[m
[1;34m|[m   [31m-[0,3,0,3,0,3,3,3,0,3,0,3,0,3,0,3,0,2],[m
[1;34m|[m   [31m-[0,2,0,2,0,2,0,0,0,2,0,2,0,2,0,2,0,0],[m
[1;34m|[m   [31m-[0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,4]][m
[1;34m|[m   [32m+[m[32m  [0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,4],[m
[1;34m|[m   [32m+[m[32m  [0,2,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,4],[m
[1;34m|[m   [32m+[m[32m  [0,3,3,3,0,2,3,3,0,3,0,3,0,1,3,1,0,3],[m
[1;34m|[m   [32m+[m[32m  [0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,3],[m
[1;34m|[m   [32m+[m[32m  [0,3,0,3,0,3,3,3,0,3,0,3,0,3,0,3,0,2],[m
[1;34m|[m   [32m+[m[32m  [0,2,0,2,0,2,0,0,0,2,0,2,0,2,0,2,0,0],[m
[1;34m|[m   [32m+[m[32m  [0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,4],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m    [m
[1;34m|[m    HIREME = [[m
[1;34m|[m   [31m-[1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[1;34m|[m   [31m-[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[1;34m|[m   [31m-[3,3,3,0,2,0,3,3,3,0,2,3,3,0,0,3,3,0,3,0,0,2,3,3],[m
[1;34m|[m   [31m-[4,0,4,0,4,0,4,0,0,0,4,0,4,0,0,4,0,4,0,4,0,4,0,4],[m
[1;34m|[m   [31m-[3,0,3,0,3,0,3,0,0,0,3,3,3,0,0,3,0,3,0,3,0,3,3,3],[m
[1;34m|[m   [31m-[2,0,2,0,2,0,2,0,0,0,2,0,0,0,0,2,0,2,0,2,0,2,0,0],[m
[1;34m|[m   [31m-[1,0,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1]][m
[1;34m|[m   [32m+[m[32m  [1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[1;34m|[m   [32m+[m[32m  [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[1;34m|[m   [32m+[m[32m  [3,3,3,0,2,0,3,3,3,0,2,3,3,0,0,3,3,0,3,0,0,2,3,3],[m
[1;34m|[m   [32m+[m[32m  [4,0,4,0,4,0,4,0,0,0,4,0,4,0,0,4,0,4,0,4,0,4,0,4],[m
[1;34m|[m   [32m+[m[32m  [3,0,3,0,3,0,3,0,0,0,3,3,3,0,0,3,0,3,0,3,0,3,3,3],[m
[1;34m|[m   [32m+[m[32m  [2,0,2,0,2,0,2,0,0,0,2,0,0,0,0,2,0,2,0,2,0,2,0,0],[m
[1;34m|[m   [32m+[m[32m  [1,0,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1],[m
[1;34m|[m   [32m+[m[32m][m
[1;34m|[m   [32m+[m
[1;34m|[m    [m
[1;34m|[m    ASCII_TO_NUMBER = {[m
[1;34m|[m      '_': 0,[m
[1;34m|[m      '_': 1,[m
[1;34m|[m      '~': 2,[m
[1;34m|[m      '=': 3,[m
[1;34m|[m   [31m-  '*': 4[m
[1;34m|[m   [32m+[m[32m  '*': 4,[m
[1;34m|[m    }[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def str_to_sprite(content):[m
[1;34m|[m        # Break out lines and filter any excess[m
[1;34m|[m        lines = content.split('\n')[m
[1;34m|[m        def is_empty_line(line):[m
[1;34m|[m            return len(line) != 0[m
[1;34m|[m        lines = filter(is_empty_line, lines)[m
[1;34m|[m   [32m+[m
[1;34m|[m        # Break up lines into each character[m
[1;34m|[m        split_lines = map(list, lines)[m
[1;34m|[m   [32m+[m
[1;34m|[m        # Replace each character with its numeric equivalent[m
[1;34m|[m        for line in split_lines:[m
[1;34m|[m            for index, char in enumerate(line):[m
[1;34m|[m                line[index] = ASCII_TO_NUMBER.get(char, 0)[m
[1;34m|[m   [32m+[m
[1;34m|[m        # Return the formatted str[m
[1;34m|[m        return split_lines[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    ONEUP_STR = str_to_sprite("""[m
[1;34m|[m     ******* [m
[1;34m|[m    *=~~-~~=*[m
[1;34m|[m   [36m@@ -130,22 +145,25 @@[m [mONEUP_STR = str_to_sprite("""[m
[1;34m|[m      *****  [m
[1;34m|[m    """)[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    IMAGES = {[m
[1;34m|[m   [31m-'kitty': KITTY,[m
[1;34m|[m   [31m-'oneup':ONEUP,[m
[1;34m|[m   [31m-'oneup2':ONEUP2,[m
[1;34m|[m   [31m-'hackerschool':HACKERSCHOOL,[m
[1;34m|[m   [31m-'octocat':OCTOCAT,[m
[1;34m|[m   [31m-'octocat2':OCTOCAT2,[m
[1;34m|[m   [31m-'hello':HELLO,[m
[1;34m|[m   [31m-'hireme':HIREME,[m
[1;34m|[m   [31m-'oneup_str':ONEUP_STR[m
[1;34m|[m   [32m+[m[32m  'kitty': KITTY,[m
[1;34m|[m   [32m+[m[32m  'oneup': ONEUP,[m
[1;34m|[m   [32m+[m[32m  'oneup2': ONEUP2,[m
[1;34m|[m   [32m+[m[32m  'hackerschool': HACKERSCHOOL,[m
[1;34m|[m   [32m+[m[32m  'octocat': OCTOCAT,[m
[1;34m|[m   [32m+[m[32m  'octocat2': OCTOCAT2,[m
[1;34m|[m   [32m+[m[32m  'hello': HELLO,[m
[1;34m|[m   [32m+[m[32m  'hireme': HIREME,[m
[1;34m|[m   [32m+[m[32m  'oneup_str': ONEUP_STR,[m
[1;34m|[m    }[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def load_images(img_names):[m
[1;34m|[m        """loads user images from given file(s)"""[m
[1;34m|[m        if img_names[0] == '':[m
[1;34m|[m            return dict()[m
[1;34m|[m   [32m+[m
[1;34m|[m        for image_name in img_names:[m
[1;34m|[m            img = open(image_name)[m
[1;34m|[m            loaded_imgs = {}[m
[1;34m|[m   [36m@@ -158,61 +176,78 @@[m [mdef load_images(img_names):[m
[1;34m|[m                img_line = img.readline()[m
[1;34m|[m                if img_line == '':[m
[1;34m|[m                    break[m
[1;34m|[m   [32m+[m
[1;34m|[m                img_line.replace('\n', '')[m
[1;34m|[m   [31m-            if(img_line[0] == ':'):[m
[1;34m|[m   [32m+[m[32m            if img_line[0] == ':':[m
[1;34m|[m                    loaded_imgs[name] = json.loads(img_list)[m
[1;34m|[m                    name = img_line[1:][m
[1;34m|[m                    img_list = ''[m
[1;34m|[m                else:[m
[1;34m|[m                    img_list += img_line[m
[1;34m|[m   [32m+[m
[1;34m|[m            loaded_imgs[name] = json.loads(img_list)[m
[1;34m|[m   [32m+[m
[1;34m|[m            return loaded_imgs[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def get_calendar(username, base_url='https://github.com/'):[m
[1;34m|[m        """retrieves the github commit calendar data for a username"""[m
[1;34m|[m        base_url = base_url + 'users/' + username[m
[1;34m|[m   [32m+[m
[1;34m|[m        try:        [m
[1;34m|[m            url = base_url + '/contributions'[m
[1;34m|[m            page = urllib2.urlopen(url)[m
[1;34m|[m   [31m-    except (urllib2.HTTPError,urllib2.URLError) as e:[m
[1;34m|[m   [31m-        print ("There was a problem fetching data from {0}".format(url))[m
[1;34m|[m   [31m-        print (e)[m
[1;34m|[m   [32m+[m[32m    except (urllib2.HTTPError, urllib2.URLError) as e:[m
[1;34m|[m   [32m+[m[32m        print("There was a problem fetching data from {0}".format(url))[m
[1;34m|[m   [32m+[m[32m        print(e)[m
[1;34m|[m            raise SystemExit[m
[1;34m|[m   [32m+[m
[1;34m|[m        return page.readlines()[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def max_commits(input):[m
[1;34m|[m        """finds the highest number of commits in one day"""[m
[1;34m|[m        output = set()[m
[1;34m|[m   [32m+[m
[1;34m|[m        for line in input:[m
[1;34m|[m            for day in line.split():[m
[1;34m|[m                if "data-count=" in day:[m
[1;34m|[m                    commit = day.split('=')[1][m
[1;34m|[m                    commit = commit.strip('"')[m
[1;34m|[m                    output.add(int(commit))[m
[1;34m|[m   [32m+[m
[1;34m|[m        output = list(output)[m
[1;34m|[m        output.sort()[m
[1;34m|[m        output.reverse()[m
[1;34m|[m        return output[0][m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def multiplier(max_commits):[m
[1;34m|[m        """calculates a multiplier to scale github colors to commit history"""[m
[1;34m|[m   [31m-    m = max_commits/4.0[m
[1;34m|[m   [31m-    if m == 0: return 1[m
[1;34m|[m   [32m+[m[32m    m = max_commits / 4.0[m
[1;34m|[m   [32m+[m
[1;34m|[m   [32m+[m[32m    if m == 0:[m
[1;34m|[m   [32m+[m[32m        return 1[m
[1;34m|[m   [32m+[m
[1;34m|[m        m = math.ceil(m)[m
[1;34m|[m        m = int(m)[m
[1;34m|[m        return m[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def get_start_date():[m
[1;34m|[m        """returns a datetime object for the first sunday after one year ago today[m
[1;34m|[m        at 12:00 noon"""[m
[1;34m|[m        d = datetime.datetime.today()[m
[1;34m|[m   [31m-    date = datetime.datetime(d.year-1, d.month, d.day, 12)[m
[1;34m|[m   [32m+[m[32m    date = datetime.datetime(d.year - 1, d.month, d.day, 12)[m
[1;34m|[m        weekday = datetime.datetime.weekday(date)[m
[1;34m|[m   [32m+[m
[1;34m|[m        while weekday < 6:[m
[1;34m|[m            date = date + datetime.timedelta(1)[m
[1;34m|[m            weekday = datetime.datetime.weekday(date)[m
[1;34m|[m   [32m+[m
[1;34m|[m        return date[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def date_gen(start_date, offset=0):[m
[1;34m|[m        """generator that returns the next date, requires a datetime object as[m
[1;34m|[m        input. The offset is in weeks"""[m
[1;34m|[m   [36m@@ -220,23 +255,30 @@[m [mdef date_gen(start_date, offset=0):[m
[1;34m|[m        for i in itertools.count(start):[m
[1;34m|[m            yield start_date + datetime.timedelta(i)[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def values_in_date_order(image, multiplier=1):[m
[1;34m|[m        height = 7[m
[1;34m|[m        width = len(image[0])[m
[1;34m|[m   [32m+[m
[1;34m|[m        for w in range(width):[m
[1;34m|[m            for h in range(height):[m
[1;34m|[m   [31m-            yield image[h][w]*multiplier[m
[1;34m|[m   [32m+[m[32m            yield image[h][w] * multiplier[m
[1;34m|[m   [32m+[m
[1;34m|[m    [m
[1;34m|[m    def commit(content, commitdate):[m
[1;34m|[m   [31m-    template = ("""echo {0} >> gitfiti\n"""[m
[1;34m|[m   [31m-    """GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2} """[m
[1;34m|[m   [31m-    """git commit -a -m "gitfiti" > /dev/null\n""")[m
[1;34m|[m   [32m+[m[32m    template = ([m
[1;34m|[m   [32m+[m[32m        """echo {0} >> gitfiti\n"""[m
[1;34m|[m   [32m+[m[32m        """GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2} """[m
[1;34m|[m   [32m+[m[32m        """git commit -a -m "gitfiti" > /dev/null\n"""[m
[1;34m|[m   [32m+[m[32m    )[m
[1;34m|[m        return template.format(content, commitdate.isoformat(), [m
[1;34m|[m                commitdate.isoformat())[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;34m|[m   [31m-        git_url='git@github.com'):[m
[1;34m|[m   [31m-    template = ('#!/bin/bash\n'[m
[1;34m|[m   [32m+[m[32m            git_url='git@github.com'):[m
[1;34m|[m   [32m+[m[32m    template = ([m
[1;34m|[m   [32m+[m[32m        '#!/bin/bash\n'[m
[1;34m|[m            'REPO={0}\n'[m
[1;34m|[m            'git init $REPO\n'[m
[1;34m|[m            'cd $REPO\n'[m
[1;34m|[m   [36m@@ -247,66 +289,80 @@[m [mdef fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;34m|[m            '{1}\n'[m
[1;34m|[m            'git remote add origin {2}:{3}/$REPO.git\n'[m
[1;34m|[m            'git pull\n'[m
[1;34m|[m   [31m-        'git push -u origin master\n')[m
[1;34m|[m   [32m+[m[32m        'git push -u origin master\n'[m
[1;34m|[m   [32m+[m[32m    )[m
[1;34m|[m   [32m+[m
[1;34m|[m        strings = [][m
[1;34m|[m        for value, date in zip(values_in_date_order(image, multiplier),[m
[1;34m|[m                date_gen(start_date, offset)):[m
[1;34m|[m            for i in range(value):[m
[1;34m|[m                strings.append(commit(i, date))[m
[1;34m|[m   [32m+[m
[1;34m|[m        return template.format(repo, "".join(strings), git_url, username)[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def save(output, filename):[m
[1;34m|[m        """Saves the list to a given filename"""[m
[1;34m|[m        f = open(filename, "w")[m
[1;34m|[m        f.write(output)[m
[1;34m|[m        f.close()[m
[1;34m|[m    [m
[1;34m|[m   [32m+[m
[1;34m|[m    def main():[m
[1;34m|[m   [31m-    print (TITLE)[m
[1;34m|[m   [31m-    print ("Enter github url")[m
[1;34m|[m   [32m+[m[32m    print(TITLE)[m
[1;34m|[m   [32m+[m
[1;34m|[m   [32m+[m[32m    print("Enter github url")[m
[1;34m|[m        ghe = raw_input("Enter nothing for https://github.com/ to be used: ")[m
[1;34m|[m   [31m-    print ('Enter your github username:')[m
[1;34m|[m   [32m+[m
[1;34m|[m   [32m+[m[32m    print('Enter your github username:')[m
[1;34m|[m        username = raw_input(">")[m
[1;34m|[m   [32m+[m
[1;34m|[m        if not ghe:[m
[1;34m|[m            git_base = "https://github.com/"[m
[1;34m|[m            cal = get_calendar(username)[m
[1;34m|[m        else:[m
[1;34m|[m   [31m-        cal = get_calendar(username,base_url=ghe)[m
[1;34m|[m   [32m+[m[32m        cal = get_calendar(username, base_url=ghe)[m
[1;34m|[m            git_base = ghe[m
[1;34m|[m   [32m+[m
[1;34m|[m        m = multiplier(max_commits(cal))[m
[1;34m|[m    [m
[1;34m|[m   [31m-    print ('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m   [32m+[m[32m    print('Enter name of the repo to be used by gitfiti:')[m
[1;34m|[m        repo = raw_input(">")[m
[1;34m|[m    [m
[1;34m|[m   [31m-    print ('Enter the number of weeks to offset the image (from the left):')[m
[1;34m|[m   [32m+[m[32m    print('Enter the number of weeks to offset the image (from the left):')[m
[1;34m|[m        offset = raw_input(">")[m
[1;34m|[m   [32m+[m
[1;34m|[m        if not offset.strip():[m
[1;34m|[m            offset = 0[m
[1;34m|[m        else:[m
[1;34m|[m            offset = int(offset)[m
[1;34m|[m    [m
[1;34m|[m   [31m-    print ('By default gitfiti.py matches the darkest pixel to the highest\n'[m
[1;34m|[m   [31m-           'number of commits found in your github commit/activity calendar,\n'[m
[1;34m|[m   [31m-           '\n'[m
[1;34m|[m   [31m-           'Currently this is : {0} commits\n'[m
[1;34m|[m   [31m-           '\n'[m
[1;34m|[m   [31m-           'Enter the word "gitfiti" to exceed your max\n'[m
[1;34m|[m   [31m-           '(this option generates WAY more commits)\n'[m
[1;34m|[m   [31m-           'Any other input will cause the default matching behavior'[m
[1;34m|[m   [31m-           ).format(max_commits(cal))[m
[1;34m|[m   [32m+[m[32m    print(([m
[1;34m|[m   [32m+[m[32m        'By default gitfiti.py matches the darkest pixel to the highest\n'[m
[1;34m|[m   [32m+[m[32m        'number of commits found in your github commit/activity calendar,\n'[m
[1;34m|[m   [32m+[m[32m        '\n'[m
[1;34m|[m   [32m+[m[32m        'Currently this is: {0} commits\n'[m
[1;34m|[m   [32m+[m[32m        '\n'[m
[1;34m|[m   [32m+[m[32m        'Enter the word "gitfiti" to exceed your max\n'[m
[1;34m|[m   [32m+[m[32m        '(this option generates WAY more commits)\n'[m
[1;34m|[m   [32m+[m[32m        'Any other input will cause the default matching behavior'[m
[1;34m|[m   [32m+[m[32m    ).format(max_commits(cal)))[m
[1;34m|[m        match = raw_input(">")[m
[1;34m|[m   [32m+[m
[1;34m|[m        if match == "gitfiti": [m
[1;34m|[m            match = m[m
[1;34m|[m        else: [m
[1;34m|[m            match = 1[m
[1;34m|[m    [m
[1;34m|[m   [31m-    print ('enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m   [32m+[m[32m    print('enter file(s) to load images from (blank if not applicable)')[m
[1;34m|[m        img_names = raw_input(">").split(' ')[m
[1;34m|[m   [32m+[m
[1;34m|[m        images = dict(IMAGES, **load_images(img_names))[m
[1;34m|[m    [m
[1;34m|[m   [31m-    print ('enter the image name to gitfiti')[m
[1;34m|[m   [31m-    print ('images: ' + ", ".join(images.keys()))[m
[1;34m|[m   [32m+[m[32m    print('enter the image name to gitfiti')[m
[1;34m|[m   [32m+[m[32m    print('images: ' + ", ".join(images.keys()))[m
[1;34m|[m        image = raw_input(">")[m
[1;34m|[m   [32m+[m
[1;34m|[m        if not image:[m
[1;34m|[m            image = IMAGES['kitty'][m
[1;34m|[m        else:[m
[1;34m|[m   [36m@@ -314,17 +370,19 @@[m [mdef main():[m
[1;34m|[m                image = images[image][m
[1;34m|[m            except: [m
[1;34m|[m                image = IMAGES['kitty'][m
[1;34m|[m   [32m+[m
[1;34m|[m        if not ghe:[m
[1;34m|[m   [31m-        output = fake_it(image, get_start_date(), username, repo, offset,[m
[1;34m|[m   [31m-                m*match)[m
[1;34m|[m   [32m+[m[32m        output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m   [32m+[m[32m                         offset, m * match)[m
[1;34m|[m        else:[m
[1;34m|[m            git_url = raw_input("Enter git url like git@site.github.com: ")[m
[1;34m|[m   [31m-        output = fake_it(image, get_start_date(), username, repo, offset,[m
[1;34m|[m   [31m-                m*match,git_url=git_url)[m
[1;34m|[m   [32m+[m[32m        output = fake_it(image, get_start_date(), username, repo,[m
[1;34m|[m   [32m+[m[32m                         offset, m * match, git_url=git_url)[m
[1;34m|[m    [m
[1;34m|[m        save(output, 'gitfiti.sh')[m
[1;34m|[m   [31m-    print ('gitfiti.sh saved.')[m
[1;34m|[m   [31m-    print ('Create a new(!) repo at: {0}new and run it.'.format(git_base))[m
[1;34m|[m   [32m+[m[32m    print('gitfiti.sh saved.')[m
[1;34m|[m   [32m+[m[32m    print('Create a new(!) repo at: {0}new and run it.'.format(git_base))[m
[1;34m|[m   [32m+[m
[1;34m|[m    [m
[1;34m|[m    if __name__ == '__main__':[m
[1;34m|[m        main()[m
[1;34m|[m 
* <div id="4f43306" class="tab"><input type="checkbox" name="toggle" id="4f43306f4432521d2318d4cb9dbdaa0e9b6c4806" class="toggle"><label for="4f43306f4432521d2318d4cb9dbdaa0e9b6c4806" class="title"><div class="line"><span class="tree"></span><span class="content">4f43306 Update README.md</span></div></label><div class="patch">
[1;35m|[m 
[1;35m|[m [1mdiff --git a/README.md b/README.md[m
[1;35m|[m [1mindex a7553f4..d78c9b9 100644[m
[1;35m|[m [1m--- a/README.md[m
[1;35m|[m [1m+++ b/README.md[m
[1;35m|[m [36m@@ -66,6 +66,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[1;35m|[m  - [github-board](https://github.com/bayandin/github-board) commits gitfiti from easy templates[m
[1;35m|[m  - [ghdecoy](https://github.com/tickelton/ghdecoy) fills the contribution graph with random data (sneaky!)[m
[1;35m|[m  - [Gitfiti Painter](http://codepen.io/cbas/pen/vOXeKV) visual drawing tool for artists to easily create templates[m
[1;35m|[m [32m+[m[32m- [git-draw](https://github.com/ben174/git-draw) a Chrome extension which will allow you to freely draw on your commit map(!)[m
[1;35m|[m  - Seen something else? Submit a pull request or open an issue![m
[1;35m|[m  [m
[1;35m|[m  [m
[1;35m|[m   
*   <div id="7af9378" class="tab"><input type="checkbox" name="toggle" id="7af9378b50b0c64f4ffaa3b9fb74ac63a826c289" class="toggle"><label for="7af9378b50b0c64f4ffaa3b9fb74ac63a826c289" class="title"><div class="line"><span class="tree"></span><span class="content">7af9378 Merge pull request #22 from cbas/patch-1</span></div></label><div class="patch">
[1;36m|[m[31m\[m  
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="08dd621" class="tab"><input type="checkbox" name="toggle" id="08dd6219c2d86024dd38d88635c53f03e6588bcc" class="toggle"><label for="08dd6219c2d86024dd38d88635c53f03e6588bcc" class="title"><div class="line"><span class="tree"></span><span class="content">08dd621 Gitfiti Painter mention</span></div></label><div class="patch">
[1;36m|[m[1;36m/[m  
[1;36m|[m   
[1;36m|[m   [1mdiff --git a/README.md b/README.md[m
[1;36m|[m   [1mindex c6c1485..a7553f4 100644[m
[1;36m|[m   [1m--- a/README.md[m
[1;36m|[m   [1m+++ b/README.md[m
[1;36m|[m   [36m@@ -65,6 +65,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[1;36m|[m    - [Pikesley's](https://github.com/pikesley) Pokrovsky, which offers Github History Vandalism [as a Service!](http://pokrovsky.herokuapp.com/)[m
[1;36m|[m    - [github-board](https://github.com/bayandin/github-board) commits gitfiti from easy templates[m
[1;36m|[m    - [ghdecoy](https://github.com/tickelton/ghdecoy) fills the contribution graph with random data (sneaky!)[m
[1;36m|[m   [32m+[m[32m- [Gitfiti Painter](http://codepen.io/cbas/pen/vOXeKV) visual drawing tool for artists to easily create templates[m
[1;36m|[m    - Seen something else? Submit a pull request or open an issue![m
[1;36m|[m    [m
[1;36m|[m    [m
[1;36m|[m 
* <div id="8c5f11d" class="tab"><input type="checkbox" name="toggle" id="8c5f11dcc321d0596cf4b7beb35404939ed55b6c" class="toggle"><label for="8c5f11dcc321d0596cf4b7beb35404939ed55b6c" class="title"><div class="line"><span class="tree"></span><span class="content">8c5f11d Update README.md</span></div></label><div class="patch">
[31m|[m 
[31m|[m [1mdiff --git a/README.md b/README.md[m
[31m|[m [1mindex 136cd42..c6c1485 100644[m
[31m|[m [1m--- a/README.md[m
[31m|[m [1m+++ b/README.md[m
[31m|[m [36m@@ -63,8 +63,8 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[31m|[m  [m
[31m|[m  ####Notable derivatives or mentions:[m
[31m|[m  - [Pikesley's](https://github.com/pikesley) Pokrovsky, which offers Github History Vandalism [as a Service!](http://pokrovsky.herokuapp.com/)[m
[31m|[m [31m-- [github-board](https://github.com/bayandin/github-board)[m
[31m|[m [31m-- [ghdecoy](https://github.com/tickelton/ghdecoy)[m
[31m|[m [32m+[m[32m- [github-board](https://github.com/bayandin/github-board) commits gitfiti from easy templates[m
[31m|[m [32m+[m[32m- [ghdecoy](https://github.com/tickelton/ghdecoy) fills the contribution graph with random data (sneaky!)[m
[31m|[m  - Seen something else? Submit a pull request or open an issue![m
[31m|[m  [m
[31m|[m  [m
[31m|[m   
*   <div id="b16d04c" class="tab"><input type="checkbox" name="toggle" id="b16d04ce0cf6b4371f24747af592706badaa8826" class="toggle"><label for="b16d04ce0cf6b4371f24747af592706badaa8826" class="title"><div class="line"><span class="tree"></span><span class="content">b16d04c Merge pull request #21 from tickelton/master</span></div></label><div class="patch">
[32m|[m[33m\[m  
[32m|[m [33m|[m 
[32m|[m * <div id="3734ed4" class="tab"><input type="checkbox" name="toggle" id="3734ed434b5d706be48a8f9d4f6acbf2e1669767" class="toggle"><label for="3734ed434b5d706be48a8f9d4f6acbf2e1669767" class="title"><div class="line"><span class="tree"></span><span class="content">3734ed4 added reference to ghdecoy</span></div></label><div class="patch">
[32m|[m[32m/[m  
[32m|[m   
[32m|[m   [1mdiff --git a/README.md b/README.md[m
[32m|[m   [1mindex dee7508..136cd42 100644[m
[32m|[m   [1m--- a/README.md[m
[32m|[m   [1m+++ b/README.md[m
[32m|[m   [36m@@ -64,6 +64,7 @@[m [mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses[m
[32m|[m    ####Notable derivatives or mentions:[m
[32m|[m    - [Pikesley's](https://github.com/pikesley) Pokrovsky, which offers Github History Vandalism [as a Service!](http://pokrovsky.herokuapp.com/)[m
[32m|[m    - [github-board](https://github.com/bayandin/github-board)[m
[32m|[m   [32m+[m[32m- [ghdecoy](https://github.com/tickelton/ghdecoy)[m
[32m|[m    - Seen something else? Submit a pull request or open an issue![m
[32m|[m    [m
[32m|[m    [m
[32m|[m   
*   <div id="0519867" class="tab"><input type="checkbox" name="toggle" id="0519867255705e7ece99df0c722955131d5abe1b" class="toggle"><label for="0519867255705e7ece99df0c722955131d5abe1b" class="title"><div class="line"><span class="tree"></span><span class="content">0519867 Merge pull request #19 from Rosuav/input_comparison_style</span></div></label><div class="patch">
[34m|[m[35m\[m  
[34m|[m [35m|[m 
[34m|[m * <div id="9746944" class="tab"><input type="checkbox" name="toggle" id="9746944e4cb994fee5edfcf696e1486abc8adef1" class="toggle"><label for="9746944e4cb994fee5edfcf696e1486abc8adef1" class="title"><div class="line"><span class="tree"></span><span class="content">9746944 Use "not x" rather than "x == None" for testing the result of raw_input()</span></div></label><div class="patch">
[34m|[m[34m/[m  
[34m|[m   
[34m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[34m|[m   [1mindex 14e4c50..6dba153 100755[m
[34m|[m   [1m--- a/gitfiti.py[m
[34m|[m   [1m+++ b/gitfiti.py[m
[34m|[m   [36m@@ -267,7 +267,7 @@[m [mdef main():[m
[34m|[m        ghe = raw_input("Enter nothing for https://github.com/ to be used: ")[m
[34m|[m        print ('Enter your github username:')[m
[34m|[m        username = raw_input(">")[m
[34m|[m   [31m-    if ghe is None or ghe == "":[m
[34m|[m   [32m+[m[32m    if not ghe:[m
[34m|[m            git_base = "https://github.com/"[m
[34m|[m            cal = get_calendar(username)[m
[34m|[m        else:[m
[34m|[m   [36m@@ -307,14 +307,14 @@[m [mdef main():[m
[34m|[m        print ('enter the image name to gitfiti')[m
[34m|[m        print ('images: ' + ", ".join(images.keys()))[m
[34m|[m        image = raw_input(">")[m
[34m|[m   [31m-    if image == None:[m
[34m|[m   [32m+[m[32m    if not image:[m
[34m|[m            image = IMAGES['kitty'][m
[34m|[m        else:[m
[34m|[m            try: [m
[34m|[m                image = images[image][m
[34m|[m            except: [m
[34m|[m                image = IMAGES['kitty'][m
[34m|[m   [31m-    if ghe is None or ghe == "":[m
[34m|[m   [32m+[m[32m    if not ghe:[m
[34m|[m            output = fake_it(image, get_start_date(), username, repo, offset,[m
[34m|[m                    m*match)[m
[34m|[m        else:[m
[34m|[m 
* <div id="d9514f0" class="tab"><input type="checkbox" name="toggle" id="d9514f0b4eae66a057145f08d0ab48658a7c6d98" class="toggle"><label for="d9514f0b4eae66a057145f08d0ab48658a7c6d98" class="title"><div class="line"><span class="tree"></span><span class="content">d9514f0 changed max_commits() and get_calendar() to fix issue #17</span></div></label><div class="patch">
[35m|[m 
[35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m [1mindex 405b819..14e4c50 100755[m
[35m|[m [1m--- a/gitfiti.py[m
[35m|[m [1m+++ b/gitfiti.py[m
[35m|[m [36m@@ -177,20 +177,18 @@[m [mdef get_calendar(username, base_url='https://github.com/'):[m
[35m|[m      except (urllib2.HTTPError,urllib2.URLError) as e:[m
[35m|[m          print ("There was a problem fetching data from {0}".format(url))[m
[35m|[m          print (e)[m
[35m|[m [31m-        try:[m
[35m|[m [31m-            url = base_url + '/contributions_calendar_data'[m
[35m|[m [31m-            page = urllib2.urlopen(url)[m
[35m|[m [31m-        except (urllib2.HTTPError,urllib2.URLError) as e:[m
[35m|[m [31m-            print ("There was a problem fetching data from {0}".format(url))[m
[35m|[m [31m-            print (e)[m
[35m|[m [31m-            raise SystemExit[m
[35m|[m [31m-    return json.load(page)[m
[35m|[m [32m+[m[32m        raise SystemExit[m
[35m|[m [32m+[m[32m    return page.readlines()[m
[35m|[m  [m
[35m|[m  def max_commits(input):[m
[35m|[m      """finds the highest number of commits in one day"""[m
[35m|[m      output = set()[m
[35m|[m [31m-    for i, j in enumerate(input):[m
[35m|[m [31m-        output.add(input[i][1])[m
[35m|[m [32m+[m[32m    for line in input:[m
[35m|[m [32m+[m[32m        for day in line.split():[m
[35m|[m [32m+[m[32m            if "data-count=" in day:[m
[35m|[m [32m+[m[32m                commit = day.split('=')[1][m
[35m|[m [32m+[m[32m                commit = commit.strip('"')[m
[35m|[m [32m+[m[32m                output.add(int(commit))[m
[35m|[m      output = list(output)[m
[35m|[m      output.sort()[m
[35m|[m      output.reverse()[m
[35m|[m 
* <div id="6c1faad" class="tab"><input type="checkbox" name="toggle" id="6c1faad8a68519fd47f0db3eb914470e938e3228" class="toggle"><label for="6c1faad8a68519fd47f0db3eb914470e938e3228" class="title"><div class="line"><span class="tree"></span><span class="content">6c1faad error in empty string handling</span></div></label><div class="patch">
[35m|[m 
[35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m [1mindex 6e69a98..405b819 100755[m
[35m|[m [1m--- a/gitfiti.py[m
[35m|[m [1m+++ b/gitfiti.py[m
[35m|[m [36m@@ -280,9 +280,9 @@[m [mdef main():[m
[35m|[m      print ('Enter name of the repo to be used by gitfiti:')[m
[35m|[m      repo = raw_input(">")[m
[35m|[m  [m
[35m|[m [31m-    print ('Enter number of weeks to offset the image (from the left):')[m
[35m|[m [32m+[m[32m    print ('Enter the number of weeks to offset the image (from the left):')[m
[35m|[m      offset = raw_input(">")[m
[35m|[m [31m-    if offset == None:[m
[35m|[m [32m+[m[32m    if not offset.strip():[m
[35m|[m          offset = 0[m
[35m|[m      else:[m
[35m|[m          offset = int(offset)[m
[35m|[m 
* <div id="1333435" class="tab"><input type="checkbox" name="toggle" id="1333435f4fef4c8cb35843021a0d6f847a4a55e3" class="toggle"><label for="1333435f4fef4c8cb35843021a0d6f847a4a55e3" class="title"><div class="line"><span class="tree"></span><span class="content">1333435 fix contributor's print statement</span></div></label><div class="patch">
[35m|[m 
[35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m [1mindex 3c21bd3..6e69a98 100755[m
[35m|[m [1m--- a/gitfiti.py[m
[35m|[m [1m+++ b/gitfiti.py[m
[35m|[m [36m@@ -326,8 +326,7 @@[m [mdef main():[m
[35m|[m  [m
[35m|[m      save(output, 'gitfiti.sh')[m
[35m|[m      print ('gitfiti.sh saved.')[m
[35m|[m [31m-    print ('Create a new(!) repo at: {0}new and run it.' , format(git_base))[m
[35m|[m [31m-    pause[m
[35m|[m [32m+[m[32m    print ('Create a new(!) repo at: {0}new and run it.'.format(git_base))[m
[35m|[m  [m
[35m|[m  if __name__ == '__main__':[m
[35m|[m      main()[m
[35m|[m   
*   <div id="8bd8a93" class="tab"><input type="checkbox" name="toggle" id="8bd8a9311e42f894329130062bbe9d3937649643" class="toggle"><label for="8bd8a9311e42f894329130062bbe9d3937649643" class="title"><div class="line"><span class="tree"></span><span class="content">8bd8a93 t push origin masterMerge branch 'stormyjet-patch-1' Adds support for python3</span></div></label><div class="patch">
[36m|[m[1;31m\[m  
[36m|[m [1;31m|[m 
[36m|[m * <div id="9aab65e" class="tab"><input type="checkbox" name="toggle" id="9aab65ebb210a236961730c2b3231dfe1db40c9e" class="toggle"><label for="9aab65ebb210a236961730c2b3231dfe1db40c9e" class="title"><div class="line"><span class="tree"></span><span class="content">9aab65e merging Story's changes</span></div></label><div class="patch">
[36m|[m[36m/[m[1;33m|[m 
[36m|[m [1;33m|[m 
[36m|[m * <div id="87fe8f3" class="tab"><input type="checkbox" name="toggle" id="87fe8f3401062a77ff34e304013c82d74273c91e" class="toggle"><label for="87fe8f3401062a77ff34e304013c82d74273c91e" class="title"><div class="line"><span class="tree"></span><span class="content">87fe8f3 Fix the py file for Python 3+</span></div></label><div class="patch">
[36m|[m [1;33m|[m 
[36m|[m [1;33m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;33m|[m [1mindex b17669f..e78b210 100755[m
[36m|[m [1;33m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;33m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;33m|[m [36m@@ -170,8 +170,8 @@[m [mdef get_calendar(username, base_url='https://github.com/'):[m
[36m|[m [1;33m|[m      try:[m
[36m|[m [1;33m|[m          page = urllib2.urlopen(url)[m
[36m|[m [1;33m|[m      except (urllib2.HTTPError,urllib2.URLError) as e:[m
[36m|[m [1;33m|[m [31m-        print "There was a problem fetching data from {0}".format(url)[m
[36m|[m [1;33m|[m [31m-        print e[m
[36m|[m [1;33m|[m [32m+[m[32m        print ("There was a problem fetching data from {0}" , format(url))[m
[36m|[m [1;33m|[m [32m+[m[32m        print (e)[m
[36m|[m [1;33m|[m          raise SystemExit[m
[36m|[m [1;33m|[m      return json.load(page)[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m [36m@@ -253,10 +253,10 @@[m [mdef save(output, filename):[m
[36m|[m [1;33m|[m      f.close()[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m  def main():[m
[36m|[m [1;33m|[m [31m-    print TITLE[m
[36m|[m [1;33m|[m [31m-    print "Enter github url"[m
[36m|[m [1;33m|[m [32m+[m[32m    print (TITLE)[m
[36m|[m [1;33m|[m [32m+[m[32m    print ("Enter github url")[m
[36m|[m [1;33m|[m      ghe = raw_input("Enter nothing for https://github.com/ to be used: ")[m
[36m|[m [1;33m|[m [31m-    print 'Enter your github username:'[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('Enter your github username:')[m
[36m|[m [1;33m|[m      username = raw_input(">")[m
[36m|[m [1;33m|[m      if ghe is None or ghe == "":[m
[36m|[m [1;33m|[m          git_base = "https://github.com/"[m
[36m|[m [1;33m|[m [36m@@ -266,10 +266,10 @@[m [mdef main():[m
[36m|[m [1;33m|[m          git_base = ghe[m
[36m|[m [1;33m|[m      m = multiplier(max_commits(cal))[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m [31m-    print 'Enter name of the repo to be used by gitfiti:'[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('Enter name of the repo to be used by gitfiti:')[m
[36m|[m [1;33m|[m      repo = raw_input(">")[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m [31m-    print 'Enter number of weeks to offset the image (from the left):'[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('Enter number of weeks to offset the image (from the left):')[m
[36m|[m [1;33m|[m      offset = raw_input(">")[m
[36m|[m [1;33m|[m      if offset == None:[m
[36m|[m [1;33m|[m          offset = 0[m
[36m|[m [1;33m|[m [36m@@ -291,12 +291,12 @@[m [mdef main():[m
[36m|[m [1;33m|[m      else: [m
[36m|[m [1;33m|[m          match = 1[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m [31m-    print 'enter file(s) to load images from (blank if not applicable)'[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('enter file(s) to load images from (blank if not applicable)')[m
[36m|[m [1;33m|[m      img_names = raw_input(">").split(' ')[m
[36m|[m [1;33m|[m      images = dict(IMAGES, **load_images(img_names))[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m [31m-    print 'enter the image name to gitfiti'[m
[36m|[m [1;33m|[m [31m-    print 'images: ' + ", ".join(images.keys())[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('enter the image name to gitfiti')[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('images: ' + ", ".join(images.keys()))[m
[36m|[m [1;33m|[m      image = raw_input(">")[m
[36m|[m [1;33m|[m      if image == None:[m
[36m|[m [1;33m|[m          image = IMAGES['kitty'][m
[36m|[m [1;33m|[m [36m@@ -314,8 +314,9 @@[m [mdef main():[m
[36m|[m [1;33m|[m                  m*match,git_url=git_url)[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m      save(output, 'gitfiti.sh')[m
[36m|[m [1;33m|[m [31m-    print 'gitfiti.sh saved.'[m
[36m|[m [1;33m|[m [31m-    print 'Create a new(!) repo at: {0}new and run it.'.format(git_base)[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('gitfiti.sh saved.')[m
[36m|[m [1;33m|[m [32m+[m[32m    print ('Create a new(!) repo at: {0}new and run it.' , format(git_base))[m
[36m|[m [1;33m|[m [32m+[m[32m    pause[m
[36m|[m [1;33m|[m  [m
[36m|[m [1;33m|[m  if __name__ == '__main__':[m
[36m|[m [1;33m|[m      main()[m
[36m|[m [1;33m|[m 
* [1;33m|[m <div id="454e8c7" class="tab"><input type="checkbox" name="toggle" id="454e8c7ebc020b3a5ee80521b4a859409990dd3a" class="toggle"><label for="454e8c7ebc020b3a5ee80521b4a859409990dd3a" class="title"><div class="line"><span class="tree"></span><span class="content">454e8c7 fixes calendar url issue</span></div></label><div class="patch">
[1;33m|[m [1;33m|[m 
[1;33m|[m [1;33m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;33m|[m [1;33m|[m [1mindex 1583baa..dd548cb 100755[m
[1;33m|[m [1;33m|[m [1m--- a/gitfiti.py[m
[1;33m|[m [1;33m|[m [1m+++ b/gitfiti.py[m
[1;33m|[m [1;33m|[m [36m@@ -170,13 +170,20 @@[m [mdef load_images(img_names):[m
[1;33m|[m [1;33m|[m  [m
[1;33m|[m [1;33m|[m  def get_calendar(username, base_url='https://github.com/'):[m
[1;33m|[m [1;33m|[m      """retrieves the github commit calendar data for a username"""[m
[1;33m|[m [1;33m|[m [31m-    url = base_url + 'users/' + username + '/contributions_calendar_data'[m
[1;33m|[m [1;33m|[m [31m-    try:[m
[1;33m|[m [1;33m|[m [32m+[m[32m    base_url = base_url + 'users/' + username[m
[1;33m|[m [1;33m|[m [32m+[m[32m    try:[m[41m        [m
[1;33m|[m [1;33m|[m [32m+[m[32m        url = base_url + '/contributions'[m
[1;33m|[m [1;33m|[m          page = urllib2.urlopen(url)[m
[1;33m|[m [1;33m|[m      except (urllib2.HTTPError,urllib2.URLError) as e:[m
[1;33m|[m [1;33m|[m [31m-        print "There was a problem fetching data from {0}".format(url)[m
[1;33m|[m [1;33m|[m [31m-        print e[m
[1;33m|[m [1;33m|[m [31m-        raise SystemExit[m
[1;33m|[m [1;33m|[m [32m+[m[32m        print ("There was a problem fetching data from {0}".format(url))[m
[1;33m|[m [1;33m|[m [32m+[m[32m        print (e)[m
[1;33m|[m [1;33m|[m [32m+[m[32m        try:[m
[1;33m|[m [1;33m|[m [32m+[m[32m            url = base_url + '/contributions_calendar_data'[m
[1;33m|[m [1;33m|[m [32m+[m[32m            page = urllib2.urlopen(url)[m
[1;33m|[m [1;33m|[m [32m+[m[32m        except (urllib2.HTTPError,urllib2.URLError) as e:[m
[1;33m|[m [1;33m|[m [32m+[m[32m            print ("There was a problem fetching data from {0}".format(url))[m
[1;33m|[m [1;33m|[m [32m+[m[32m            print (e)[m
[1;33m|[m [1;33m|[m [32m+[m[32m            raise SystemExit[m
[1;33m|[m [1;33m|[m      return json.load(page)[m
[1;33m|[m [1;33m|[m  [m
[1;33m|[m [1;33m|[m  def max_commits(input):[m
[1;33m|[m [1;33m|[m 
* [1;33m|[m <div id="684b12b" class="tab"><input type="checkbox" name="toggle" id="684b12b6062c544ca5d837221d3c081a297134cb" class="toggle"><label for="684b12b6062c544ca5d837221d3c081a297134cb" class="title"><div class="line"><span class="tree"></span><span class="content">684b12b adding license, officially open source now?</span></div></label><div class="patch">
[1;33m|[m[1;33m/[m  
[1;33m|[m   
[1;33m|[m   [1mdiff --git a/LICENSE.txt b/LICENSE.txt[m
[1;33m|[m   [1mnew file mode 100644[m
[1;33m|[m   [1mindex 0000000..9407f6c[m
[1;33m|[m   [1m--- /dev/null[m
[1;33m|[m   [1m+++ b/LICENSE.txt[m
[1;33m|[m   [36m@@ -0,0 +1,21 @@[m
[1;33m|[m   [32m+[m[32mThe MIT License (MIT)[m
[1;33m|[m   [32m+[m
[1;33m|[m   [32m+[m[32mCopyright (c) 2013 Eric Romano (@gelstudios).[m
[1;33m|[m   [32m+[m
[1;33m|[m   [32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[1;33m|[m   [32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[1;33m|[m   [32m+[m[32min the Software without restriction, including without limitation the rights[m
[1;33m|[m   [32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[1;33m|[m   [32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[1;33m|[m   [32m+[m[32mfurnished to do so, subject to the following conditions:[m
[1;33m|[m   [32m+[m
[1;33m|[m   [32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[1;33m|[m   [32m+[m[32mcopies or substantial portions of the Software.[m
[1;33m|[m   [32m+[m
[1;33m|[m   [32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[1;33m|[m   [32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[1;33m|[m   [32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[1;33m|[m   [32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[1;33m|[m   [32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[1;33m|[m   [32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[1;33m|[m   [32m+[m[32mSOFTWARE[m
[1;33m|[m   \ No newline at end of file[m
[1;33m|[m   [1mdiff --git a/README.md b/README.md[m
[1;33m|[m   [1mindex e15e900..dee7508 100644[m
[1;33m|[m   [1m--- a/README.md[m
[1;33m|[m   [1m+++ b/README.md[m
[1;33m|[m   [36m@@ -48,14 +48,25 @@[m [mOnce you have a file with templates, enter its name when prompted and the templa[m
[1;33m|[m    ###Removal:[m
[1;33m|[m    Fortunately if you regret your gitfiti in the morning, removing it is fairly easy: delete the repo you created for your gitfiti (and wait).[m
[1;33m|[m    [m
[1;33m|[m   [32m+[m[32m###License:[m
[1;33m|[m   [32m+[m[32mgitfiti is released under [The MIT license (MIT)](http://opensource.org/licenses/MIT)[m
[1;33m|[m   [32m+[m
[1;33m|[m    ---[m
[1;33m|[m    ####Todo:[m
[1;33m|[m    - ~~Remove 'requests' dependency~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;33m|[m    - Web interface[m
[1;33m|[m    - ~~Load "art" from a file~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[1;33m|[m    - Load commit content from a file[m
[1;33m|[m   [32m+[m[32m- Text/alphabet option[m
[1;33m|[m    - ...[m
[1;33m|[m    - Profit?[m
[1;33m|[m   [32m+[m
[1;33m|[m   [32m+[m[32m####Notable derivatives or mentions:[m
[1;33m|[m   [32m+[m[32m- [Pikesley's](https://github.com/pikesley) Pokrovsky, which offers Github History Vandalism [as a Service!](http://pokrovsky.herokuapp.com/)[m
[1;33m|[m   [32m+[m[32m- [github-board](https://github.com/bayandin/github-board)[m
[1;33m|[m   [32m+[m[32m- Seen something else? Submit a pull request or open an issue![m
[1;33m|[m   [32m+[m
[1;33m|[m   [32m+[m
[1;33m|[m      [m
[1;33m|[m      [m
[1;33m|[m    ![alt text](http://f.cl.ly/items/0J463J0K1N020S1Q3E3l/er-small.png "tiny logo")[m
[1;33m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;33m|[m   [1mindex b17669f..1583baa 100755[m
[1;33m|[m   [1m--- a/gitfiti.py[m
[1;33m|[m   [1m+++ b/gitfiti.py[m
[1;33m|[m   [36m@@ -1,4 +1,8 @@[m
[1;33m|[m    #!/usr/bin/env python[m
[1;33m|[m   [32m+[m[32m#[m
[1;33m|[m   [32m+[m[32m# Copyright (c) 2013 Eric Romano (@gelstudios)[m
[1;33m|[m   [32m+[m[32m# released under The MIT license (MIT) http://opensource.org/licenses/MIT[m
[1;33m|[m   [32m+[m[32m#[m
[1;33m|[m    """[m
[1;33m|[m    gitfiti[m
[1;33m|[m    [m
[1;33m|[m   
*   <div id="dd7473b" class="tab"><input type="checkbox" name="toggle" id="dd7473b0261fe1cb206c806bf861fcd10926018f" class="toggle"><label for="dd7473b0261fe1cb206c806bf861fcd10926018f" class="title"><div class="line"><span class="tree"></span><span class="content">dd7473b Merge pull request #10 from ashphy/master</span></div></label><div class="patch">
[1;34m|[m[1;35m\[m  
[1;34m|[m [1;35m|[m 
[1;34m|[m * <div id="0eb93f7" class="tab"><input type="checkbox" name="toggle" id="0eb93f7afc7f3c06f853aba4abb456f8d90c6d76" class="toggle"><label for="0eb93f7afc7f3c06f853aba4abb456f8d90c6d76" class="title"><div class="line"><span class="tree"></span><span class="content">0eb93f7 fix the bug that kitty always appears when using user templates</span></div></label><div class="patch">
[1;34m|[m[1;34m/[m  
[1;34m|[m   
[1;34m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;34m|[m   [1mindex 5156606..b17669f 100755[m
[1;34m|[m   [1m--- a/gitfiti.py[m
[1;34m|[m   [1m+++ b/gitfiti.py[m
[1;34m|[m   [36m@@ -302,7 +302,7 @@[m [mdef main():[m
[1;34m|[m            image = IMAGES['kitty'][m
[1;34m|[m        else:[m
[1;34m|[m            try: [m
[1;34m|[m   [31m-            image = IMAGES[image][m
[1;34m|[m   [32m+[m[32m            image = images[image][m
[1;34m|[m            except: [m
[1;34m|[m                image = IMAGES['kitty'][m
[1;34m|[m        if ghe is None or ghe == "":[m
[1;34m|[m   
*   <div id="f4f0b5b" class="tab"><input type="checkbox" name="toggle" id="f4f0b5bf2279ad4cd35b27b0578429ad5fef357f" class="toggle"><label for="f4f0b5bf2279ad4cd35b27b0578429ad5fef357f" class="title"><div class="line"><span class="tree"></span><span class="content">f4f0b5b Merge pull request #8 from michaelrice/ghe</span></div></label><div class="patch">
[1;36m|[m[31m\[m  
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="a0dde04" class="tab"><input type="checkbox" name="toggle" id="a0dde04a3b216bbaf9e2e5fc331294b50b4bfb3b" class="toggle"><label for="a0dde04a3b216bbaf9e2e5fc331294b50b4bfb3b" class="title"><div class="line"><span class="tree"></span><span class="content">a0dde04 remove newline from commit date</span></div></label><div class="patch">
[1;36m|[m [31m|[m 
[1;36m|[m [31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;36m|[m [31m|[m [1mindex 6f92d63..5156606 100755[m
[1;36m|[m [31m|[m [1m--- a/gitfiti.py[m
[1;36m|[m [31m|[m [1m+++ b/gitfiti.py[m
[1;36m|[m [31m|[m [36m@@ -220,7 +220,7 @@[m [mdef values_in_date_order(image, multiplier=1):[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def commit(content, commitdate):[m
[1;36m|[m [31m|[m      template = ("""echo {0} >> gitfiti\n"""[m
[1;36m|[m [31m|[m [31m-    """GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2}\n"""[m
[1;36m|[m [31m|[m [32m+[m[32m    """GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2} """[m
[1;36m|[m [31m|[m      """git commit -a -m "gitfiti" > /dev/null\n""")[m
[1;36m|[m [31m|[m      return template.format(content, commitdate.isoformat(), [m
[1;36m|[m [31m|[m              commitdate.isoformat())[m
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="62b2767" class="tab"><input type="checkbox" name="toggle" id="62b276701e9c7c83e1e97c130015082dd9dd39a0" class="toggle"><label for="62b276701e9c7c83e1e97c130015082dd9dd39a0" class="title"><div class="line"><span class="tree"></span><span class="content">62b2767 added try except to urllib2 call for cal data</span></div></label><div class="patch">
[1;36m|[m [31m|[m 
[1;36m|[m [31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;36m|[m [31m|[m [1mindex eacd950..6f92d63 100755[m
[1;36m|[m [31m|[m [1m--- a/gitfiti.py[m
[1;36m|[m [31m|[m [1m+++ b/gitfiti.py[m
[1;36m|[m [31m|[m [36m@@ -167,7 +167,12 @@[m [mdef load_images(img_names):[m
[1;36m|[m [31m|[m  def get_calendar(username, base_url='https://github.com/'):[m
[1;36m|[m [31m|[m      """retrieves the github commit calendar data for a username"""[m
[1;36m|[m [31m|[m      url = base_url + 'users/' + username + '/contributions_calendar_data'[m
[1;36m|[m [31m|[m [31m-    page = urllib2.urlopen(url)[m
[1;36m|[m [31m|[m [32m+[m[32m    try:[m
[1;36m|[m [31m|[m [32m+[m[32m        page = urllib2.urlopen(url)[m
[1;36m|[m [31m|[m [32m+[m[32m    except (urllib2.HTTPError,urllib2.URLError) as e:[m
[1;36m|[m [31m|[m [32m+[m[32m        print "There was a problem fetching data from {0}".format(url)[m
[1;36m|[m [31m|[m [32m+[m[32m        print e[m
[1;36m|[m [31m|[m [32m+[m[32m        raise SystemExit[m
[1;36m|[m [31m|[m      return json.load(page)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def max_commits(input):[m
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="3af9779" class="tab"><input type="checkbox" name="toggle" id="3af9779d311873b7b7791f0b9dfc4a3a91c4cdb4" class="toggle"><label for="3af9779d311873b7b7791f0b9dfc4a3a91c4cdb4" class="title"><div class="line"><span class="tree"></span><span class="content">3af9779 fix issue when not using custom ghe</span></div></label><div class="patch">
[1;36m|[m [31m|[m 
[1;36m|[m [31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;36m|[m [31m|[m [1mindex 4160c4c..eacd950 100755[m
[1;36m|[m [31m|[m [1m--- a/gitfiti.py[m
[1;36m|[m [31m|[m [1m+++ b/gitfiti.py[m
[1;36m|[m [31m|[m [36m@@ -253,7 +253,7 @@[m [mdef main():[m
[1;36m|[m [31m|[m      ghe = raw_input("Enter nothing for https://github.com/ to be used: ")[m
[1;36m|[m [31m|[m      print 'Enter your github username:'[m
[1;36m|[m [31m|[m      username = raw_input(">")[m
[1;36m|[m [31m|[m [31m-    if ghe is None:[m
[1;36m|[m [31m|[m [32m+[m[32m    if ghe is None or ghe == "":[m
[1;36m|[m [31m|[m          git_base = "https://github.com/"[m
[1;36m|[m [31m|[m          cal = get_calendar(username)[m
[1;36m|[m [31m|[m      else:[m
[1;36m|[m [31m|[m [36m@@ -300,7 +300,7 @@[m [mdef main():[m
[1;36m|[m [31m|[m              image = IMAGES[image][m
[1;36m|[m [31m|[m          except: [m
[1;36m|[m [31m|[m              image = IMAGES['kitty'][m
[1;36m|[m [31m|[m [31m-    if ghe is None:[m
[1;36m|[m [31m|[m [32m+[m[32m    if ghe is None or ghe == "":[m
[1;36m|[m [31m|[m          output = fake_it(image, get_start_date(), username, repo, offset,[m
[1;36m|[m [31m|[m                  m*match)[m
[1;36m|[m [31m|[m      else:[m
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="2d4653a" class="tab"><input type="checkbox" name="toggle" id="2d4653aa2122d5cbac6d2f72e9a5387af9ad5c3e" class="toggle"><label for="2d4653aa2122d5cbac6d2f72e9a5387af9ad5c3e" class="title"><div class="line"><span class="tree"></span><span class="content">2d4653a added ghe support</span></div></label><div class="patch">
[1;36m|[m [31m|[m 
[1;36m|[m [31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;36m|[m [31m|[m [1mindex cac805f..4160c4c 100755[m
[1;36m|[m [31m|[m [1m--- a/gitfiti.py[m
[1;36m|[m [31m|[m [1m+++ b/gitfiti.py[m
[1;36m|[m [31m|[m [36m@@ -1,4 +1,10 @@[m
[1;36m|[m [31m|[m  #!/usr/bin/env python[m
[1;36m|[m [31m|[m [32m+[m[32m"""[m
[1;36m|[m [31m|[m [32m+[m[32mgitfiti[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32mnoun : Carefully crafted graffiti in a github commit history calendar[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m"""[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  import datetime[m
[1;36m|[m [31m|[m  import math[m
[1;36m|[m [31m|[m [36m@@ -231,9 +237,7 @@[m [mdef fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;36m|[m [31m|[m      strings = [][m
[1;36m|[m [31m|[m      for value, date in zip(values_in_date_order(image, multiplier),[m
[1;36m|[m [31m|[m              date_gen(start_date, offset)):[m
[1;36m|[m [31m|[m [31m-        print value, date[m
[1;36m|[m [31m|[m          for i in range(value):[m
[1;36m|[m [31m|[m [31m-            print i[m
[1;36m|[m [31m|[m              strings.append(commit(i, date))[m
[1;36m|[m [31m|[m      return template.format(repo, "".join(strings), git_url, username)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [36m@@ -244,11 +248,17 @@[m [mdef save(output, filename):[m
[1;36m|[m [31m|[m      f.close()[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def main():[m
[1;36m|[m [31m|[m [31m-    global IMAGES[m
[1;36m|[m [31m|[m      print TITLE[m
[1;36m|[m [31m|[m [32m+[m[32m    print "Enter github url"[m
[1;36m|[m [31m|[m [32m+[m[32m    ghe = raw_input("Enter nothing for https://github.com/ to be used: ")[m
[1;36m|[m [31m|[m      print 'Enter your github username:'[m
[1;36m|[m [31m|[m      username = raw_input(">")[m
[1;36m|[m [31m|[m [31m-    cal = get_calendar(username)[m
[1;36m|[m [31m|[m [32m+[m[32m    if ghe is None:[m
[1;36m|[m [31m|[m [32m+[m[32m        git_base = "https://github.com/"[m
[1;36m|[m [31m|[m [32m+[m[32m        cal = get_calendar(username)[m
[1;36m|[m [31m|[m [32m+[m[32m    else:[m
[1;36m|[m [31m|[m [32m+[m[32m        cal = get_calendar(username,base_url=ghe)[m
[1;36m|[m [31m|[m [32m+[m[32m        git_base = ghe[m
[1;36m|[m [31m|[m      m = multiplier(max_commits(cal))[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m      print 'Enter name of the repo to be used by gitfiti:'[m
[1;36m|[m [31m|[m [36m@@ -269,7 +279,7 @@[m [mdef main():[m
[1;36m|[m [31m|[m             'Enter the word "gitfiti" to exceed your max\n'[m
[1;36m|[m [31m|[m             '(this option generates WAY more commits)\n'[m
[1;36m|[m [31m|[m             'Any other input will cause the default matching behavior'[m
[1;36m|[m [31m|[m [31m-           ).format(max_commits(cal),)[m
[1;36m|[m [31m|[m [32m+[m[32m           ).format(max_commits(cal))[m
[1;36m|[m [31m|[m      match = raw_input(">")[m
[1;36m|[m [31m|[m      if match == "gitfiti": [m
[1;36m|[m [31m|[m          match = m[m
[1;36m|[m [31m|[m [36m@@ -290,11 +300,17 @@[m [mdef main():[m
[1;36m|[m [31m|[m              image = IMAGES[image][m
[1;36m|[m [31m|[m          except: [m
[1;36m|[m [31m|[m              image = IMAGES['kitty'][m
[1;36m|[m [31m|[m [32m+[m[32m    if ghe is None:[m
[1;36m|[m [31m|[m [32m+[m[32m        output = fake_it(image, get_start_date(), username, repo, offset,[m
[1;36m|[m [31m|[m [32m+[m[32m                m*match)[m
[1;36m|[m [31m|[m [32m+[m[32m    else:[m
[1;36m|[m [31m|[m [32m+[m[32m        git_url = raw_input("Enter git url like git@site.github.com: ")[m
[1;36m|[m [31m|[m [32m+[m[32m        output = fake_it(image, get_start_date(), username, repo, offset,[m
[1;36m|[m [31m|[m [32m+[m[32m                m*match,git_url=git_url)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-    output = fake_it(image, get_start_date(), username, repo, offset, m*match)[m
[1;36m|[m [31m|[m      save(output, 'gitfiti.sh')[m
[1;36m|[m [31m|[m      print 'gitfiti.sh saved.'[m
[1;36m|[m [31m|[m [31m-    print 'Create a new(!) repo at: https://github.com/new and run it.'[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'Create a new(!) repo at: {0}new and run it.'.format(git_base)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  if __name__ == '__main__':[m
[1;36m|[m [31m|[m      main()[m
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="4ef8ba0" class="tab"><input type="checkbox" name="toggle" id="4ef8ba04b09b3e08830e7c38f67d34e06451949c" class="toggle"><label for="4ef8ba04b09b3e08830e7c38f67d34e06451949c" class="title"><div class="line"><span class="tree"></span><span class="content">4ef8ba0 pep8 cleanup</span></div></label><div class="patch">
[1;36m|[m [31m|[m 
[1;36m|[m [31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;36m|[m [31m|[m [1mindex a3bcb67..cac805f 100755[m
[1;36m|[m [31m|[m [1m--- a/gitfiti.py[m
[1;36m|[m [31m|[m [1m+++ b/gitfiti.py[m
[1;36m|[m [31m|[m [36m@@ -1,7 +1,12 @@[m
[1;36m|[m [31m|[m  #!/usr/bin/env python[m
[1;36m|[m [31m|[m [31m-import datetime, math, itertools, urllib2, json[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-title='''[m
[1;36m|[m [31m|[m [32m+[m[32mimport datetime[m
[1;36m|[m [31m|[m [32m+[m[32mimport math[m
[1;36m|[m [31m|[m [32m+[m[32mimport itertools[m
[1;36m|[m [31m|[m [32m+[m[32mimport urllib2[m
[1;36m|[m [31m|[m [32m+[m[32mimport json[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32mTITLE = '''[m
[1;36m|[m [31m|[m            _ __  _____ __  _ [m
[1;36m|[m [31m|[m     ____ _(_) /_/ __(_) /_(_)[m
[1;36m|[m [31m|[m    / __ `/ / __/ /_/ / __/ / [m
[1;36m|[m [31m|[m [36m@@ -10,7 +15,7 @@[m [mtitle='''[m
[1;36m|[m [31m|[m  /____/ [m
[1;36m|[m [31m|[m  '''[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-kitty=[[m
[1;36m|[m [31m|[m [32m+[m[32mKITTY = [[m
[1;36m|[m [31m|[m  [0,0,0,4,0,0,0,0,4,0,0,0],[m
[1;36m|[m [31m|[m  [0,0,4,2,4,4,4,4,2,4,0,0],[m
[1;36m|[m [31m|[m  [0,0,4,2,2,2,2,2,2,4,0,0],[m
[1;36m|[m [31m|[m [36m@@ -19,7 +24,7 @@[m [mkitty=[[m
[1;36m|[m [31m|[m  [2,2,4,2,2,2,2,2,2,4,2,2],[m
[1;36m|[m [31m|[m  [0,0,0,3,4,4,4,4,3,0,0,0]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-oneup=[[m
[1;36m|[m [31m|[m [32m+[m[32mONEUP = [[m
[1;36m|[m [31m|[m  [0,4,4,4,4,4,4,4,0],[m
[1;36m|[m [31m|[m  [4,3,2,2,1,2,2,3,4],[m
[1;36m|[m [31m|[m  [4,2,2,1,1,1,2,2,4],[m
[1;36m|[m [31m|[m [36m@@ -28,7 +33,7 @@[m [moneup=[[m
[1;36m|[m [31m|[m  [0,4,1,1,1,1,1,4,0],[m
[1;36m|[m [31m|[m  [0,0,4,4,4,4,4,0,0]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-oneup2=[[m
[1;36m|[m [31m|[m [32m+[m[32mONEUP2 = [[m
[1;36m|[m [31m|[m  [0,0,4,4,4,4,4,4,4,0,0],[m
[1;36m|[m [31m|[m  [0,4,2,2,1,1,1,2,2,4,0],[m
[1;36m|[m [31m|[m  [4,3,2,2,1,1,1,2,2,3,4],[m
[1;36m|[m [31m|[m [36m@@ -37,7 +42,7 @@[m [moneup2=[[m
[1;36m|[m [31m|[m  [0,0,4,1,1,1,1,1,4,0,0],[m
[1;36m|[m [31m|[m  [0,0,0,4,4,4,4,4,0,0,0]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-hackerschool=[[m
[1;36m|[m [31m|[m [32m+[m[32mHACKERSCHOOL = [[m
[1;36m|[m [31m|[m  [4,4,4,4,4,4],[m
[1;36m|[m [31m|[m  [4,3,3,3,3,4],[m
[1;36m|[m [31m|[m  [4,1,3,3,1,4],[m
[1;36m|[m [31m|[m [36m@@ -46,7 +51,7 @@[m [mhackerschool=[[m
[1;36m|[m [31m|[m  [0,0,4,4,0,0],[m
[1;36m|[m [31m|[m  [4,4,4,4,4,4]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-octocat=[[m
[1;36m|[m [31m|[m [32m+[m[32mOCTOCAT = [[m
[1;36m|[m [31m|[m  [0,0,0,4,0,0,0,4,0],[m
[1;36m|[m [31m|[m  [0,0,4,4,4,4,4,4,4],[m
[1;36m|[m [31m|[m  [0,0,4,1,3,3,3,1,4],[m
[1;36m|[m [31m|[m [36m@@ -55,7 +60,7 @@[m [moctocat=[[m
[1;36m|[m [31m|[m  [0,0,4,4,4,4,4,4,4],[m
[1;36m|[m [31m|[m  [0,0,4,0,4,0,4,0,4]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-octocat2=[[m
[1;36m|[m [31m|[m [32m+[m[32mOCTOCAT2 = [[m
[1;36m|[m [31m|[m  [0,0,4,0,0,4,0],[m
[1;36m|[m [31m|[m  [0,4,4,4,4,4,4],[m
[1;36m|[m [31m|[m  [0,4,1,3,3,1,4],[m
[1;36m|[m [31m|[m [36m@@ -64,7 +69,7 @@[m [moctocat2=[[m
[1;36m|[m [31m|[m  [0,4,4,4,4,4,0],[m
[1;36m|[m [31m|[m  [0,0,0,4,4,4,0]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-hello=[[m
[1;36m|[m [31m|[m [32m+[m[32mHELLO = [[m
[1;36m|[m [31m|[m  [0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,4],[m
[1;36m|[m [31m|[m  [0,2,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,4],[m
[1;36m|[m [31m|[m  [0,3,3,3,0,2,3,3,0,3,0,3,0,1,3,1,0,3],[m
[1;36m|[m [31m|[m [36m@@ -73,7 +78,7 @@[m [mhello=[[m
[1;36m|[m [31m|[m  [0,2,0,2,0,2,0,0,0,2,0,2,0,2,0,2,0,0],[m
[1;36m|[m [31m|[m  [0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,4]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-hireme=[[m
[1;36m|[m [31m|[m [32m+[m[32mHIREME = [[m
[1;36m|[m [31m|[m  [1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[1;36m|[m [31m|[m  [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[m
[1;36m|[m [31m|[m  [3,3,3,0,2,0,3,3,3,0,2,3,3,0,0,3,3,0,3,0,0,2,3,3],[m
[1;36m|[m [31m|[m [36m@@ -82,7 +87,7 @@[m [mhireme=[[m
[1;36m|[m [31m|[m  [2,0,2,0,2,0,2,0,0,0,2,0,0,0,0,2,0,2,0,2,0,2,0,0],[m
[1;36m|[m [31m|[m  [1,0,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1]][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-ascii_to_number = {[m
[1;36m|[m [31m|[m [32m+[m[32mASCII_TO_NUMBER = {[m
[1;36m|[m [31m|[m    '_': 0,[m
[1;36m|[m [31m|[m    '_': 1,[m
[1;36m|[m [31m|[m    '~': 2,[m
[1;36m|[m [31m|[m [36m@@ -91,24 +96,21 @@[m [mascii_to_number = {[m
[1;36m|[m [31m|[m  }[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def str_to_sprite(content):[m
[1;36m|[m [31m|[m [31m-  # Break out lines and filter any excess[m
[1;36m|[m [31m|[m [31m-  lines = content.split('\n')[m
[1;36m|[m [31m|[m [31m-  def is_empty_line(line):[m
[1;36m|[m [31m|[m [31m-    return len(line) != 0[m
[1;36m|[m [31m|[m [31m-  lines = filter(is_empty_line, lines)[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-  # Break up lines into each character[m
[1;36m|[m [31m|[m [31m-  split_lines = map(list, lines)[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-  # Replace each character with its numeric equivalent[m
[1;36m|[m [31m|[m [31m-  for line in split_lines:[m
[1;36m|[m [31m|[m [31m-    for index, char in enumerate(line):[m
[1;36m|[m [31m|[m [31m-      line[index] = ascii_to_number.get(char, 0)[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-  # Return the formatted str[m
[1;36m|[m [31m|[m [31m-  return split_lines[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-oneup_str = str_to_sprite("""[m
[1;36m|[m [31m|[m [32m+[m[32m    # Break out lines and filter any excess[m
[1;36m|[m [31m|[m [32m+[m[32m    lines = content.split('\n')[m
[1;36m|[m [31m|[m [32m+[m[32m    def is_empty_line(line):[m
[1;36m|[m [31m|[m [32m+[m[32m        return len(line) != 0[m
[1;36m|[m [31m|[m [32m+[m[32m    lines = filter(is_empty_line, lines)[m
[1;36m|[m [31m|[m [32m+[m[32m    # Break up lines into each character[m
[1;36m|[m [31m|[m [32m+[m[32m    split_lines = map(list, lines)[m
[1;36m|[m [31m|[m [32m+[m[32m    # Replace each character with its numeric equivalent[m
[1;36m|[m [31m|[m [32m+[m[32m    for line in split_lines:[m
[1;36m|[m [31m|[m [32m+[m[32m        for index, char in enumerate(line):[m
[1;36m|[m [31m|[m [32m+[m[32m            line[index] = ASCII_TO_NUMBER.get(char, 0)[m
[1;36m|[m [31m|[m [32m+[m[32m    # Return the formatted str[m
[1;36m|[m [31m|[m [32m+[m[32m    return split_lines[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32mONEUP_STR = str_to_sprite("""[m
[1;36m|[m [31m|[m   ******* [m
[1;36m|[m [31m|[m  *=~~-~~=*[m
[1;36m|[m [31m|[m  *~~---~~*[m
[1;36m|[m [31m|[m [36m@@ -118,164 +120,181 @@[m [moneup_str = str_to_sprite("""[m
[1;36m|[m [31m|[m    *****  [m
[1;36m|[m [31m|[m  """)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-images={[m
[1;36m|[m [31m|[m [31m-'kitty':kitty,[m
[1;36m|[m [31m|[m [31m-'oneup':oneup,[m
[1;36m|[m [31m|[m [31m-'oneup2':oneup2,[m
[1;36m|[m [31m|[m [31m-'hackerschool':hackerschool,[m
[1;36m|[m [31m|[m [31m-'octocat':octocat,[m
[1;36m|[m [31m|[m [31m-'octocat2':octocat2,[m
[1;36m|[m [31m|[m [31m-'hello':hello,[m
[1;36m|[m [31m|[m [31m-'hireme':hireme,[m
[1;36m|[m [31m|[m [31m-'oneup_str':oneup_str[m
[1;36m|[m [31m|[m [32m+[m[32mIMAGES = {[m
[1;36m|[m [31m|[m [32m+[m[32m'kitty': KITTY,[m
[1;36m|[m [31m|[m [32m+[m[32m'oneup':ONEUP,[m
[1;36m|[m [31m|[m [32m+[m[32m'oneup2':ONEUP2,[m
[1;36m|[m [31m|[m [32m+[m[32m'hackerschool':HACKERSCHOOL,[m
[1;36m|[m [31m|[m [32m+[m[32m'octocat':OCTOCAT,[m
[1;36m|[m [31m|[m [32m+[m[32m'octocat2':OCTOCAT2,[m
[1;36m|[m [31m|[m [32m+[m[32m'hello':HELLO,[m
[1;36m|[m [31m|[m [32m+[m[32m'hireme':HIREME,[m
[1;36m|[m [31m|[m [32m+[m[32m'oneup_str':ONEUP_STR[m
[1;36m|[m [31m|[m  }[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m [31m-def load_images(imgNames):[m
[1;36m|[m [31m|[m [31m-	"""loads user images from given file(s)"""[m
[1;36m|[m [31m|[m [31m-	if imgNames[0]=='':[m
[1;36m|[m [31m|[m [31m-		return dict()[m
[1;36m|[m [31m|[m [31m-	for imageName in imgNames:[m
[1;36m|[m [31m|[m [31m-		img = open(imageName)[m
[1;36m|[m [31m|[m [31m-		loadedImgs = {}[m
[1;36m|[m [31m|[m [31m-		imgList = ''[m
[1;36m|[m [31m|[m [31m-		imgLine = ' '[m
[1;36m|[m [31m|[m [31m-		name = img.readline().replace('\n', '')[m
[1;36m|[m [31m|[m [31m-		name = name[1:][m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-		while True:[m
[1;36m|[m [31m|[m [31m-			imgLine = img.readline()[m
[1;36m|[m [31m|[m [31m-			if imgLine == '':[m
[1;36m|[m [31m|[m [31m-				break[m
[1;36m|[m [31m|[m [31m-			imgLine.replace('\n', '')[m
[1;36m|[m [31m|[m [31m-			if(imgLine[0] == ':'):[m
[1;36m|[m [31m|[m [31m-				loadedImgs[name] = json.loads(imgList)[m
[1;36m|[m [31m|[m [31m-				name = imgLine[1:][m
[1;36m|[m [31m|[m [31m-				imgList = ''[m
[1;36m|[m [31m|[m [31m-			else:[m
[1;36m|[m [31m|[m [31m-				imgList += imgLine[m
[1;36m|[m [31m|[m [31m-	loadedImgs[name] = json.loads(imgList)[m
[1;36m|[m [31m|[m [31m-	return loadedImgs[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-def get_calendar(username):[m
[1;36m|[m [31m|[m [31m-	"""retrieves the github commit calendar data for a username"""[m
[1;36m|[m [31m|[m [31m-	BASEURL='https://github.com/'[m
[1;36m|[m [31m|[m [31m-	url = BASEURL + 'users/' + username + '/contributions_calendar_data'[m
[1;36m|[m [31m|[m [31m-	page = urllib2.urlopen(url)[m
[1;36m|[m [31m|[m [31m-	return json.load(page)[m
[1;36m|[m [31m|[m [32m+[m[32mdef load_images(img_names):[m
[1;36m|[m [31m|[m [32m+[m[32m    """loads user images from given file(s)"""[m
[1;36m|[m [31m|[m [32m+[m[32m    if img_names[0] == '':[m
[1;36m|[m [31m|[m [32m+[m[32m        return dict()[m
[1;36m|[m [31m|[m [32m+[m[32m    for image_name in img_names:[m
[1;36m|[m [31m|[m [32m+[m[32m        img = open(image_name)[m
[1;36m|[m [31m|[m [32m+[m[32m        loaded_imgs = {}[m
[1;36m|[m [31m|[m [32m+[m[32m        img_list = ''[m
[1;36m|[m [31m|[m [32m+[m[32m        img_line = ' '[m
[1;36m|[m [31m|[m [32m+[m[32m        name = img.readline().replace('\n', '')[m
[1;36m|[m [31m|[m [32m+[m[32m        name = name[1:][m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m        while True:[m
[1;36m|[m [31m|[m [32m+[m[32m            img_line = img.readline()[m
[1;36m|[m [31m|[m [32m+[m[32m            if img_line == '':[m
[1;36m|[m [31m|[m [32m+[m[32m                break[m
[1;36m|[m [31m|[m [32m+[m[32m            img_line.replace('\n', '')[m
[1;36m|[m [31m|[m [32m+[m[32m            if(img_line[0] == ':'):[m
[1;36m|[m [31m|[m [32m+[m[32m                loaded_imgs[name] = json.loads(img_list)[m
[1;36m|[m [31m|[m [32m+[m[32m                name = img_line[1:][m
[1;36m|[m [31m|[m [32m+[m[32m                img_list = ''[m
[1;36m|[m [31m|[m [32m+[m[32m            else:[m
[1;36m|[m [31m|[m [32m+[m[32m                img_list += img_line[m
[1;36m|[m [31m|[m [32m+[m[32m        loaded_imgs[name] = json.loads(img_list)[m
[1;36m|[m [31m|[m [32m+[m[32m        return loaded_imgs[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32mdef get_calendar(username, base_url='https://github.com/'):[m
[1;36m|[m [31m|[m [32m+[m[32m    """retrieves the github commit calendar data for a username"""[m
[1;36m|[m [31m|[m [32m+[m[32m    url = base_url + 'users/' + username + '/contributions_calendar_data'[m
[1;36m|[m [31m|[m [32m+[m[32m    page = urllib2.urlopen(url)[m
[1;36m|[m [31m|[m [32m+[m[32m    return json.load(page)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def max_commits(input):[m
[1;36m|[m [31m|[m [31m-	"""finds the highest number of commits in one day"""[m
[1;36m|[m [31m|[m [31m-	output = set()[m
[1;36m|[m [31m|[m [31m-	for i, j in enumerate(input):[m
[1;36m|[m [31m|[m [31m-		output.add(input[i][1])[m
[1;36m|[m [31m|[m [31m-	output = list(output)[m
[1;36m|[m [31m|[m [31m-	output.sort()[m
[1;36m|[m [31m|[m [31m-	output.reverse()[m
[1;36m|[m [31m|[m [31m-	return output[0][m
[1;36m|[m [31m|[m [32m+[m[32m    """finds the highest number of commits in one day"""[m
[1;36m|[m [31m|[m [32m+[m[32m    output = set()[m
[1;36m|[m [31m|[m [32m+[m[32m    for i, j in enumerate(input):[m
[1;36m|[m [31m|[m [32m+[m[32m        output.add(input[i][1])[m
[1;36m|[m [31m|[m [32m+[m[32m    output = list(output)[m
[1;36m|[m [31m|[m [32m+[m[32m    output.sort()[m
[1;36m|[m [31m|[m [32m+[m[32m    output.reverse()[m
[1;36m|[m [31m|[m [32m+[m[32m    return output[0][m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def multiplier(max_commits):[m
[1;36m|[m [31m|[m [31m-	"""calculates a multiplier to scale github colors to commit history"""[m
[1;36m|[m [31m|[m [31m-	m = max_commits/4.0[m
[1;36m|[m [31m|[m [31m-	if m == 0: return 1[m
[1;36m|[m [31m|[m [31m-	m = math.ceil(m)[m
[1;36m|[m [31m|[m [31m-	m = int(m)[m
[1;36m|[m [31m|[m [31m-	return m[m
[1;36m|[m [31m|[m [32m+[m[32m    """calculates a multiplier to scale github colors to commit history"""[m
[1;36m|[m [31m|[m [32m+[m[32m    m = max_commits/4.0[m
[1;36m|[m [31m|[m [32m+[m[32m    if m == 0: return 1[m
[1;36m|[m [31m|[m [32m+[m[32m    m = math.ceil(m)[m
[1;36m|[m [31m|[m [32m+[m[32m    m = int(m)[m
[1;36m|[m [31m|[m [32m+[m[32m    return m[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def get_start_date():[m
[1;36m|[m [31m|[m [31m-	'''returns a datetime object for the first sunday after one year ago today at 12:00 noon'''[m
[1;36m|[m [31m|[m [31m-	d = datetime.datetime.today()[m
[1;36m|[m [31m|[m [31m-	date = datetime.datetime(d.year-1, d.month, d.day, 12)[m
[1;36m|[m [31m|[m [31m-	weekday = datetime.datetime.weekday(date)[m
[1;36m|[m [31m|[m [31m-	while weekday < 6:[m
[1;36m|[m [31m|[m [31m-		date = date + datetime.timedelta(1)[m
[1;36m|[m [31m|[m [31m-		weekday = datetime.datetime.weekday(date)[m
[1;36m|[m [31m|[m [31m-	return date[m
[1;36m|[m [31m|[m [32m+[m[32m    """returns a datetime object for the first sunday after one year ago today[m
[1;36m|[m [31m|[m [32m+[m[32m    at 12:00 noon"""[m
[1;36m|[m [31m|[m [32m+[m[32m    d = datetime.datetime.today()[m
[1;36m|[m [31m|[m [32m+[m[32m    date = datetime.datetime(d.year-1, d.month, d.day, 12)[m
[1;36m|[m [31m|[m [32m+[m[32m    weekday = datetime.datetime.weekday(date)[m
[1;36m|[m [31m|[m [32m+[m[32m    while weekday < 6:[m
[1;36m|[m [31m|[m [32m+[m[32m        date = date + datetime.timedelta(1)[m
[1;36m|[m [31m|[m [32m+[m[32m        weekday = datetime.datetime.weekday(date)[m
[1;36m|[m [31m|[m [32m+[m[32m    return date[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def date_gen(start_date, offset=0):[m
[1;36m|[m [31m|[m [31m-	'''generator that returns the next date, requires a datetime object as input. The offset is in weeks'''[m
[1;36m|[m [31m|[m [31m-	start = offset * 7[m
[1;36m|[m [31m|[m [31m-	for i in itertools.count(start):[m
[1;36m|[m [31m|[m [31m-		yield start_date + datetime.timedelta(i)[m
[1;36m|[m [31m|[m [32m+[m[32m    """generator that returns the next date, requires a datetime object as[m
[1;36m|[m [31m|[m [32m+[m[32m    input. The offset is in weeks"""[m
[1;36m|[m [31m|[m [32m+[m[32m    start = offset * 7[m
[1;36m|[m [31m|[m [32m+[m[32m    for i in itertools.count(start):[m
[1;36m|[m [31m|[m [32m+[m[32m        yield start_date + datetime.timedelta(i)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def values_in_date_order(image, multiplier=1):[m
[1;36m|[m [31m|[m [31m-	height = 7[m
[1;36m|[m [31m|[m [31m-	width = len(image[0])[m
[1;36m|[m [31m|[m [31m-	for w in range(width):[m
[1;36m|[m [31m|[m [31m-		for h in range(height):[m
[1;36m|[m [31m|[m [31m-			yield image[h][w]*multiplier[m
[1;36m|[m [31m|[m [32m+[m[32m    height = 7[m
[1;36m|[m [31m|[m [32m+[m[32m    width = len(image[0])[m
[1;36m|[m [31m|[m [32m+[m[32m    for w in range(width):[m
[1;36m|[m [31m|[m [32m+[m[32m        for h in range(height):[m
[1;36m|[m [31m|[m [32m+[m[32m            yield image[h][w]*multiplier[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def commit(content, commitdate):[m
[1;36m|[m [31m|[m [31m-	template = '''echo %s >> gitfiti\nGIT_AUTHOR_DATE=%s GIT_COMMITTER_DATE=%s git commit -a -m "gitfiti"\n''' [m
[1;36m|[m [31m|[m [31m-	return template	% (content, commitdate.isoformat(), commitdate.isoformat())[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-def fake_it(image, start_date, username, repo, offset=0, multiplier=1):[m
[1;36m|[m [31m|[m [31m-	template = ('#!/bin/bash\n'[m
[1;36m|[m [31m|[m [31m-				'REPO=%s\n'[m
[1;36m|[m [31m|[m [31m-				'git init $REPO\n'[m
[1;36m|[m [31m|[m [31m-				'cd $REPO\n'[m
[1;36m|[m [31m|[m [31m-				'touch README.md\n'[m
[1;36m|[m [31m|[m [31m-				'git add README.md\n'[m
[1;36m|[m [31m|[m [31m-				'touch gitfiti\n'[m
[1;36m|[m [31m|[m [31m-				'git add gitfiti\n'[m
[1;36m|[m [31m|[m [31m-				'%s\n'[m
[1;36m|[m [31m|[m [31m-				'git remote add origin git@github.com:%s/$REPO.git\n'[m
[1;36m|[m [31m|[m [31m-				'git pull\n'[m
[1;36m|[m [31m|[m [31m-				'git push -u origin master\n')[m
[1;36m|[m [31m|[m [31m-	strings = [][m
[1;36m|[m [31m|[m [31m-	for value, date in zip(values_in_date_order(image, multiplier), date_gen(start_date, offset)):[m
[1;36m|[m [31m|[m [31m-		for i in range(value):[m
[1;36m|[m [31m|[m [31m-			strings.append(commit(i, date))[m
[1;36m|[m [31m|[m [31m-	return template % (repo, "".join(strings), username)[m
[1;36m|[m [31m|[m [32m+[m[32m    template = ("""echo {0} >> gitfiti\n"""[m
[1;36m|[m [31m|[m [32m+[m[32m    """GIT_AUTHOR_DATE={1} GIT_COMMITTER_DATE={2}\n"""[m
[1;36m|[m [31m|[m [32m+[m[32m    """git commit -a -m "gitfiti" > /dev/null\n""")[m
[1;36m|[m [31m|[m [32m+[m[32m    return template.format(content, commitdate.isoformat(),[m[41m [m
[1;36m|[m [31m|[m [32m+[m[32m            commitdate.isoformat())[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32mdef fake_it(image, start_date, username, repo, offset=0, multiplier=1,[m
[1;36m|[m [31m|[m [32m+[m[32m        git_url='git@github.com'):[m
[1;36m|[m [31m|[m [32m+[m[32m    template = ('#!/bin/bash\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'REPO={0}\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'git init $REPO\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'cd $REPO\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'touch README.md\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'git add README.md\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'touch gitfiti\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'git add gitfiti\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        '{1}\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'git remote add origin {2}:{3}/$REPO.git\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'git pull\n'[m
[1;36m|[m [31m|[m [32m+[m[32m        'git push -u origin master\n')[m
[1;36m|[m [31m|[m [32m+[m[32m    strings = [][m
[1;36m|[m [31m|[m [32m+[m[32m    for value, date in zip(values_in_date_order(image, multiplier),[m
[1;36m|[m [31m|[m [32m+[m[32m            date_gen(start_date, offset)):[m
[1;36m|[m [31m|[m [32m+[m[32m        print value, date[m
[1;36m|[m [31m|[m [32m+[m[32m        for i in range(value):[m
[1;36m|[m [31m|[m [32m+[m[32m            print i[m
[1;36m|[m [31m|[m [32m+[m[32m            strings.append(commit(i, date))[m
[1;36m|[m [31m|[m [32m+[m[32m    return template.format(repo, "".join(strings), git_url, username)[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def save(output, filename):[m
[1;36m|[m [31m|[m [31m-	"""Saves the list to a given filename"""[m
[1;36m|[m [31m|[m [31m-	f = open(filename, "w")[m
[1;36m|[m [31m|[m [31m-	f.write(output)[m
[1;36m|[m [31m|[m [31m-	f.close()[m
[1;36m|[m [31m|[m [32m+[m[32m    """Saves the list to a given filename"""[m
[1;36m|[m [31m|[m [32m+[m[32m    f = open(filename, "w")[m
[1;36m|[m [31m|[m [32m+[m[32m    f.write(output)[m
[1;36m|[m [31m|[m [32m+[m[32m    f.close()[m
[1;36m|[m [31m|[m  [m
[1;36m|[m [31m|[m  def main():[m
[1;36m|[m [31m|[m [31m-	global images[m
[1;36m|[m [31m|[m [31m-	print title[m
[1;36m|[m [31m|[m [31m-	print 'Enter your github username:'[m
[1;36m|[m [31m|[m [31m-	username = raw_input(">")[m
[1;36m|[m [31m|[m [31m-	cal = get_calendar(username)[m
[1;36m|[m [31m|[m [31m-	m = multiplier(max_commits(cal))[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-	print 'Enter name of the repo to be used by gitfiti:'[m
[1;36m|[m [31m|[m [31m-	repo = raw_input(">")[m
[1;36m|[m [31m|[m [31m-	[m
[1;36m|[m [31m|[m [31m-	print 'Enter number of weeks to offset the image (from the left):'[m
[1;36m|[m [31m|[m [31m-	offset = raw_input(">")[m
[1;36m|[m [31m|[m [31m-	if offset == None: offset = 0[m
[1;36m|[m [31m|[m [31m-	else: offset = int(offset)[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-	print ('By default gitfiti.py matches the darkest pixel to the highest\n'[m
[1;36m|[m [31m|[m [31m-			'number of commits found in your github commit/activity calendar,\n'[m
[1;36m|[m [31m|[m [31m-			'\n'[m
[1;36m|[m [31m|[m [31m-			'Currently this is : %s commits\n'[m
[1;36m|[m [31m|[m [31m-			'\n'[m
[1;36m|[m [31m|[m [31m-			'Enter the word "gitfiti" to exceed your max\n'[m
[1;36m|[m [31m|[m [31m-			'(this option generates WAY more commits)\n'[m
[1;36m|[m [31m|[m [31m-			'Any other input will cause the default matching behavior') % (max_commits(cal),)[m
[1;36m|[m [31m|[m [31m-	match = raw_input(">")[m
[1;36m|[m [31m|[m [31m-	if match == "gitfiti": match = m[m
[1;36m|[m [31m|[m [31m-	else: match = 1[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-	print 'enter file(s) to load images from (blank if not applicable)'[m
[1;36m|[m [31m|[m [31m-	imgNames = raw_input(">").split(' ')[m
[1;36m|[m [31m|[m [31m-	images = dict(images, **load_images(imgNames))[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-	print 'enter the image name to gitfiti'[m
[1;36m|[m [31m|[m [31m-	print 'images: ' + ", ".join(images.keys())[m
[1;36m|[m [31m|[m [31m-	image = raw_input(">")[m
[1;36m|[m [31m|[m [31m-	if image == None: image = images['kitty'][m
[1;36m|[m [31m|[m [31m-	else:[m
[1;36m|[m [31m|[m [31m-		try: image = images[image][m
[1;36m|[m [31m|[m [31m-		except: image = images['kitty'][m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-	output = fake_it(image, get_start_date(), username, repo, offset, m*match)[m
[1;36m|[m [31m|[m [31m-	save(output, 'gitfiti.sh')[m
[1;36m|[m [31m|[m [31m-	print 'gitfiti.sh saved. Create a new(!) repo at: https://github.com/new and run it.'[m
[1;36m|[m [31m|[m [31m-[m
[1;36m|[m [31m|[m [31m-if __name__=='__main__':[m
[1;36m|[m [31m|[m [31m-	main()[m
[1;36m|[m [31m|[m [32m+[m[32m    global IMAGES[m
[1;36m|[m [31m|[m [32m+[m[32m    print TITLE[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'Enter your github username:'[m
[1;36m|[m [31m|[m [32m+[m[32m    username = raw_input(">")[m
[1;36m|[m [31m|[m [32m+[m[32m    cal = get_calendar(username)[m
[1;36m|[m [31m|[m [32m+[m[32m    m = multiplier(max_commits(cal))[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'Enter name of the repo to be used by gitfiti:'[m
[1;36m|[m [31m|[m [32m+[m[32m    repo = raw_input(">")[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'Enter number of weeks to offset the image (from the left):'[m
[1;36m|[m [31m|[m [32m+[m[32m    offset = raw_input(">")[m
[1;36m|[m [31m|[m [32m+[m[32m    if offset == None:[m
[1;36m|[m [31m|[m [32m+[m[32m        offset = 0[m
[1;36m|[m [31m|[m [32m+[m[32m    else:[m
[1;36m|[m [31m|[m [32m+[m[32m        offset = int(offset)[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m    print ('By default gitfiti.py matches the darkest pixel to the highest\n'[m
[1;36m|[m [31m|[m [32m+[m[32m           'number of commits found in your github commit/activity calendar,\n'[m
[1;36m|[m [31m|[m [32m+[m[32m           '\n'[m
[1;36m|[m [31m|[m [32m+[m[32m           'Currently this is : {0} commits\n'[m
[1;36m|[m [31m|[m [32m+[m[32m           '\n'[m
[1;36m|[m [31m|[m [32m+[m[32m           'Enter the word "gitfiti" to exceed your max\n'[m
[1;36m|[m [31m|[m [32m+[m[32m           '(this option generates WAY more commits)\n'[m
[1;36m|[m [31m|[m [32m+[m[32m           'Any other input will cause the default matching behavior'[m
[1;36m|[m [31m|[m [32m+[m[32m           ).format(max_commits(cal),)[m
[1;36m|[m [31m|[m [32m+[m[32m    match = raw_input(">")[m
[1;36m|[m [31m|[m [32m+[m[32m    if match == "gitfiti":[m[41m [m
[1;36m|[m [31m|[m [32m+[m[32m        match = m[m
[1;36m|[m [31m|[m [32m+[m[32m    else:[m[41m [m
[1;36m|[m [31m|[m [32m+[m[32m        match = 1[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'enter file(s) to load images from (blank if not applicable)'[m
[1;36m|[m [31m|[m [32m+[m[32m    img_names = raw_input(">").split(' ')[m
[1;36m|[m [31m|[m [32m+[m[32m    images = dict(IMAGES, **load_images(img_names))[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'enter the image name to gitfiti'[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'images: ' + ", ".join(images.keys())[m
[1;36m|[m [31m|[m [32m+[m[32m    image = raw_input(">")[m
[1;36m|[m [31m|[m [32m+[m[32m    if image == None:[m
[1;36m|[m [31m|[m [32m+[m[32m        image = IMAGES['kitty'][m
[1;36m|[m [31m|[m [32m+[m[32m    else:[m
[1;36m|[m [31m|[m [32m+[m[32m        try:[m[41m [m
[1;36m|[m [31m|[m [32m+[m[32m            image = IMAGES[image][m
[1;36m|[m [31m|[m [32m+[m[32m        except:[m[41m [m
[1;36m|[m [31m|[m [32m+[m[32m            image = IMAGES['kitty'][m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32m    output = fake_it(image, get_start_date(), username, repo, offset, m*match)[m
[1;36m|[m [31m|[m [32m+[m[32m    save(output, 'gitfiti.sh')[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'gitfiti.sh saved.'[m
[1;36m|[m [31m|[m [32m+[m[32m    print 'Create a new(!) repo at: https://github.com/new and run it.'[m
[1;36m|[m [31m|[m [32m+[m
[1;36m|[m [31m|[m [32m+[m[32mif __name__ == '__main__':[m
[1;36m|[m [31m|[m [32m+[m[32m    main()[m
[1;36m|[m [31m|[m 
[1;36m|[m * <div id="f9d14f6" class="tab"><input type="checkbox" name="toggle" id="f9d14f6b265804a08db9950790936936e1ecd21a" class="toggle"><label for="f9d14f6b265804a08db9950790936936e1ecd21a" class="title"><div class="line"><span class="tree"></span><span class="content">f9d14f6 remove unused imports for os and sys</span></div></label><div class="patch">
[1;36m|[m[1;36m/[m  
[1;36m|[m   
[1;36m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;36m|[m   [1mindex 584ddbd..a3bcb67 100755[m
[1;36m|[m   [1m--- a/gitfiti.py[m
[1;36m|[m   [1m+++ b/gitfiti.py[m
[1;36m|[m   [36m@@ -1,5 +1,5 @@[m
[1;36m|[m    #!/usr/bin/env python[m
[1;36m|[m   [31m-import os, sys, datetime, math, itertools, urllib2, json[m
[1;36m|[m   [32m+[m[32mimport datetime, math, itertools, urllib2, json[m
[1;36m|[m    [m
[1;36m|[m    title='''[m
[1;36m|[m              _ __  _____ __  _ [m
[1;36m|[m   
*   <div id="28de5c7" class="tab"><input type="checkbox" name="toggle" id="28de5c79df56160fec2f19826777c0b11b809619" class="toggle"><label for="28de5c79df56160fec2f19826777c0b11b809619" class="title"><div class="line"><span class="tree"></span><span class="content">28de5c7 Merge pull request #6 from danluu/master</span></div></label><div class="patch">
[32m|[m[33m\[m  
[32m|[m [33m|[m 
[32m|[m * <div id="1466cfa" class="tab"><input type="checkbox" name="toggle" id="1466cfac83ce6f582deb35020acc1c828ecca240" class="toggle"><label for="1466cfac83ce6f582deb35020acc1c828ecca240" class="title"><div class="line"><span class="tree"></span><span class="content">1466cfa Clarify offset</span></div></label><div class="patch">
[32m|[m[32m/[m  
[32m|[m   
[32m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[32m|[m   [1mindex 9bc5630..584ddbd 100755[m
[32m|[m   [1m--- a/gitfiti.py[m
[32m|[m   [1m+++ b/gitfiti.py[m
[32m|[m   [36m@@ -244,7 +244,7 @@[m [mdef main():[m
[32m|[m    	print 'Enter name of the repo to be used by gitfiti:'[m
[32m|[m    	repo = raw_input(">")[m
[32m|[m    	[m
[32m|[m   [31m-	print 'Enter number of weeks to offset the image:'[m
[32m|[m   [32m+[m	[32mprint 'Enter number of weeks to offset the image (from the left):'[m
[32m|[m    	offset = raw_input(">")[m
[32m|[m    	if offset == None: offset = 0[m
[32m|[m    	else: offset = int(offset)[m
[32m|[m   [36m@@ -278,4 +278,4 @@[m [mdef main():[m
[32m|[m    	print 'gitfiti.sh saved. Create a new(!) repo at: https://github.com/new and run it.'[m
[32m|[m    [m
[32m|[m    if __name__=='__main__':[m
[32m|[m   [31m-	main()[m
[32m|[m   \ No newline at end of file[m
[32m|[m   [32m+[m	[32mmain()[m
[32m|[m 
* <div id="cc8961f" class="tab"><input type="checkbox" name="toggle" id="cc8961f892b65365ecd7d1d414c9f1ad491e916d" class="toggle"><label for="cc8961f892b65365ecd7d1d414c9f1ad491e916d" class="title"><div class="line"><span class="tree"></span><span class="content">cc8961f added exceed option</span></div></label><div class="patch">
[33m|[m 
[33m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[33m|[m [1mindex ab5708e..9bc5630 100755[m
[33m|[m [1m--- a/gitfiti.py[m
[33m|[m [1m+++ b/gitfiti.py[m
[33m|[m [36m@@ -2,6 +2,12 @@[m
[33m|[m  import os, sys, datetime, math, itertools, urllib2, json[m
[33m|[m  [m
[33m|[m  title='''[m
[33m|[m [32m+[m[32m          _ __  _____ __  _[m[41m [m
[33m|[m [32m+[m[32m   ____ _(_) /_/ __(_) /_(_)[m
[33m|[m [32m+[m[32m  / __ `/ / __/ /_/ / __/ /[m[41m [m
[33m|[m [32m+[m[32m / /_/ / / /_/ __/ / /_/ /[m[41m  [m
[33m|[m [32m+[m[32m \__, /_/\__/_/ /_/\__/_/[m[41m   [m
[33m|[m [32m+[m[32m/____/[m[41m [m
[33m|[m  '''[m
[33m|[m  [m
[33m|[m  kitty=[[m
[33m|[m [36m@@ -229,27 +235,32 @@[m [mdef save(output, filename):[m
[33m|[m  [m
[33m|[m  def main():[m
[33m|[m  	global images[m
[33m|[m [31m-	print '''[m
[33m|[m [31m-          _ __  _____ __  _ [m
[33m|[m [31m-   ____ _(_) /_/ __(_) /_(_)[m
[33m|[m [31m-  / __ `/ / __/ /_/ / __/ / [m
[33m|[m [31m- / /_/ / / /_/ __/ / /_/ /  [m
[33m|[m [31m- \__, /_/\__/_/ /_/\__/_/   [m
[33m|[m [31m-/____/ [m
[33m|[m [31m-'''[m
[33m|[m [31m-	print 'enter your github username:'[m
[33m|[m [32m+[m	[32mprint title[m
[33m|[m [32m+[m	[32mprint 'Enter your github username:'[m
[33m|[m  	username = raw_input(">")[m
[33m|[m  	cal = get_calendar(username)[m
[33m|[m  	m = multiplier(max_commits(cal))[m
[33m|[m  [m
[33m|[m [31m-	print 'enter name of the repo to be used by gitfiti:'[m
[33m|[m [32m+[m	[32mprint 'Enter name of the repo to be used by gitfiti:'[m
[33m|[m  	repo = raw_input(">")[m
[33m|[m  	[m
[33m|[m [31m-	print 'enter weeks to offset the image:'[m
[33m|[m [32m+[m	[32mprint 'Enter number of weeks to offset the image:'[m
[33m|[m  	offset = raw_input(">")[m
[33m|[m  	if offset == None: offset = 0[m
[33m|[m  	else: offset = int(offset)[m
[33m|[m  [m
[33m|[m [32m+[m	[32mprint ('By default gitfiti.py matches the darkest pixel to the highest\n'[m
[33m|[m [32m+[m			[32m'number of commits found in your github commit/activity calendar,\n'[m
[33m|[m [32m+[m			[32m'\n'[m
[33m|[m [32m+[m			[32m'Currently this is : %s commits\n'[m
[33m|[m [32m+[m			[32m'\n'[m
[33m|[m [32m+[m			[32m'Enter the word "gitfiti" to exceed your max\n'[m
[33m|[m [32m+[m			[32m'(this option generates WAY more commits)\n'[m
[33m|[m [32m+[m			[32m'Any other input will cause the default matching behavior') % (max_commits(cal),)[m
[33m|[m [32m+[m	[32mmatch = raw_input(">")[m
[33m|[m [32m+[m	[32mif match == "gitfiti": match = m[m
[33m|[m [32m+[m	[32melse: match = 1[m
[33m|[m [32m+[m
[33m|[m  	print 'enter file(s) to load images from (blank if not applicable)'[m
[33m|[m  	imgNames = raw_input(">").split(' ')[m
[33m|[m  	images = dict(images, **load_images(imgNames))[m
[33m|[m [36m@@ -262,7 +273,7 @@[m [mdef main():[m
[33m|[m  		try: image = images[image][m
[33m|[m  		except: image = images['kitty'][m
[33m|[m  [m
[33m|[m [31m-	output = fake_it(image, get_start_date(), username, repo, offset, m)[m
[33m|[m [32m+[m	[32moutput = fake_it(image, get_start_date(), username, repo, offset, m*match)[m
[33m|[m  	save(output, 'gitfiti.sh')[m
[33m|[m  	print 'gitfiti.sh saved. Create a new(!) repo at: https://github.com/new and run it.'[m
[33m|[m  [m
[33m|[m   
*   <div id="0656a23" class="tab"><input type="checkbox" name="toggle" id="0656a231d0555433cf8edcab2662218901b4b83e" class="toggle"><label for="0656a231d0555433cf8edcab2662218901b4b83e" class="title"><div class="line"><span class="tree"></span><span class="content">0656a23 Merge pull request #5 from twolfson/dev/add.str.to.sprite.support</span></div></label><div class="patch">
[34m|[m[35m\[m  
[34m|[m [35m|[m 
[34m|[m * <div id="360c10e" class="tab"><input type="checkbox" name="toggle" id="360c10e28dd77d5484f3220163baccbd0161218b" class="toggle"><label for="360c10e28dd77d5484f3220163baccbd0161218b" class="title"><div class="line"><span class="tree"></span><span class="content">360c10e Moved to better character set of string based sprites</span></div></label><div class="patch">
[34m|[m [35m|[m 
[34m|[m [35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[34m|[m [35m|[m [1mindex 22b703e..ab5708e 100755[m
[34m|[m [35m|[m [1m--- a/gitfiti.py[m
[34m|[m [35m|[m [1m+++ b/gitfiti.py[m
[34m|[m [35m|[m [36m@@ -79,9 +79,9 @@[m [mhireme=[[m
[34m|[m [35m|[m  ascii_to_number = {[m
[34m|[m [35m|[m    '_': 0,[m
[34m|[m [35m|[m    '_': 1,[m
[34m|[m [35m|[m [31m-  '.': 2,[m
[34m|[m [35m|[m [31m-  ':': 3,[m
[34m|[m [35m|[m [31m-  '-': 4[m
[34m|[m [35m|[m [32m+[m[32m  '~': 2,[m
[34m|[m [35m|[m [32m+[m[32m  '=': 3,[m
[34m|[m [35m|[m [32m+[m[32m  '*': 4[m
[34m|[m [35m|[m  }[m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m  def str_to_sprite(content):[m
[34m|[m [35m|[m [36m@@ -103,13 +103,13 @@[m [mdef str_to_sprite(content):[m
[34m|[m [35m|[m    return split_lines[m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m  oneup_str = str_to_sprite("""[m
[34m|[m [35m|[m [31m- ------- [m
[34m|[m [35m|[m [31m--:.._..:-[m
[34m|[m [35m|[m [31m--..___..-[m
[34m|[m [35m|[m [31m--:-----:-[m
[34m|[m [35m|[m [31m---_-_-_--[m
[34m|[m [35m|[m [31m- -_____- [m
[34m|[m [35m|[m [31m-  -----  [m
[34m|[m [35m|[m [32m+[m[32m *******[m[41m [m
[34m|[m [35m|[m [32m+[m[32m*=~~-~~=*[m
[34m|[m [35m|[m [32m+[m[32m*~~---~~*[m
[34m|[m [35m|[m [32m+[m[32m*=*****=*[m
[34m|[m [35m|[m [32m+[m[32m**-*-*-**[m
[34m|[m [35m|[m [32m+[m[32m *-----*[m[41m [m
[34m|[m [35m|[m [32m+[m[32m  *****[m[41m  [m
[34m|[m [35m|[m  """)[m
[34m|[m [35m|[m  [m
[34m|[m [35m|[m  images={[m
[34m|[m [35m|[m 
[34m|[m * <div id="ff3b786" class="tab"><input type="checkbox" name="toggle" id="ff3b786c5b9195a002e6a44b3b96f652fa9a0a26" class="toggle"><label for="ff3b786c5b9195a002e6a44b3b96f652fa9a0a26" class="title"><div class="line"><span class="tree"></span><span class="content">ff3b786 Removed temporary file</span></div></label><div class="patch">
[34m|[m [35m|[m 
[34m|[m [35m|[m [1mdiff --git a/tmp.py b/tmp.py[m
[34m|[m [35m|[m [1mdeleted file mode 100644[m
[34m|[m [35m|[m [1mindex 1197535..0000000[m
[34m|[m [35m|[m [1m--- a/tmp.py[m
[34m|[m [35m|[m [1m+++ /dev/null[m
[34m|[m [35m|[m [36m@@ -1,37 +0,0 @@[m
[34m|[m [35m|[m [31m-ascii_to_number = {[m
[34m|[m [35m|[m [31m-  '_': 0,[m
[34m|[m [35m|[m [31m-  '_': 1,[m
[34m|[m [35m|[m [31m-  '.': 2,[m
[34m|[m [35m|[m [31m-  ':': 3,[m
[34m|[m [35m|[m [31m-  '-': 4[m
[34m|[m [35m|[m [31m-}[m
[34m|[m [35m|[m [31m-[m
[34m|[m [35m|[m [31m-def str_to_sprite(content):[m
[34m|[m [35m|[m [31m-  # Break out lines and filter any excess[m
[34m|[m [35m|[m [31m-  lines = content.split('\n')[m
[34m|[m [35m|[m [31m-  def is_empty_line(line):[m
[34m|[m [35m|[m [31m-    return len(line) != 0[m
[34m|[m [35m|[m [31m-  lines = filter(is_empty_line, lines)[m
[34m|[m [35m|[m [31m-[m
[34m|[m [35m|[m [31m-  # Break up lines into each character[m
[34m|[m [35m|[m [31m-  split_lines = map(list, lines)[m
[34m|[m [35m|[m [31m-[m
[34m|[m [35m|[m [31m-  # Replace each character with its numeric equivalent[m
[34m|[m [35m|[m [31m-  for line in split_lines:[m
[34m|[m [35m|[m [31m-    for index, char in enumerate(line):[m
[34m|[m [35m|[m [31m-      line[index] = ascii_to_number.get(char, 0)[m
[34m|[m [35m|[m [31m-[m
[34m|[m [35m|[m [31m-  # Return the formatted str[m
[34m|[m [35m|[m [31m-  return split_lines[m
[34m|[m [35m|[m [31m-[m
[34m|[m [35m|[m [31m-oneup_str = str_to_sprite("""[m
[34m|[m [35m|[m [31m- ------- [m
[34m|[m [35m|[m [31m--:.._..:-[m
[34m|[m [35m|[m [31m--..___..-[m
[34m|[m [35m|[m [31m--:-----:-[m
[34m|[m [35m|[m [31m---_-_-_--[m
[34m|[m [35m|[m [31m- -_____- [m
[34m|[m [35m|[m [31m-  -----  [m
[34m|[m [35m|[m [31m-""")[m
[34m|[m [35m|[m [31m-[m
[34m|[m [35m|[m [31m-print oneup_str[m
[34m|[m [35m|[m \ No newline at end of file[m
[34m|[m [35m|[m 
[34m|[m * <div id="1cbfb79" class="tab"><input type="checkbox" name="toggle" id="1cbfb79509b1fd27c07f14bbc91b04c64166c7ce" class="toggle"><label for="1cbfb79509b1fd27c07f14bbc91b04c64166c7ce" class="title"><div class="line"><span class="tree"></span><span class="content">1cbfb79 Added multi-line ASCII to sprite support</span></div></label><div class="patch">
[34m|[m[34m/[m  
[34m|[m   
[34m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[34m|[m   [1mindex 8ea7c84..22b703e 100755[m
[34m|[m   [1m--- a/gitfiti.py[m
[34m|[m   [1m+++ b/gitfiti.py[m
[34m|[m   [36m@@ -76,6 +76,42 @@[m [mhireme=[[m
[34m|[m    [2,0,2,0,2,0,2,0,0,0,2,0,0,0,0,2,0,2,0,2,0,2,0,0],[m
[34m|[m    [1,0,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1]][m
[34m|[m    [m
[34m|[m   [32m+[m[32mascii_to_number = {[m
[34m|[m   [32m+[m[32m  '_': 0,[m
[34m|[m   [32m+[m[32m  '_': 1,[m
[34m|[m   [32m+[m[32m  '.': 2,[m
[34m|[m   [32m+[m[32m  ':': 3,[m
[34m|[m   [32m+[m[32m  '-': 4[m
[34m|[m   [32m+[m[32m}[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32mdef str_to_sprite(content):[m
[34m|[m   [32m+[m[32m  # Break out lines and filter any excess[m
[34m|[m   [32m+[m[32m  lines = content.split('\n')[m
[34m|[m   [32m+[m[32m  def is_empty_line(line):[m
[34m|[m   [32m+[m[32m    return len(line) != 0[m
[34m|[m   [32m+[m[32m  lines = filter(is_empty_line, lines)[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32m  # Break up lines into each character[m
[34m|[m   [32m+[m[32m  split_lines = map(list, lines)[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32m  # Replace each character with its numeric equivalent[m
[34m|[m   [32m+[m[32m  for line in split_lines:[m
[34m|[m   [32m+[m[32m    for index, char in enumerate(line):[m
[34m|[m   [32m+[m[32m      line[index] = ascii_to_number.get(char, 0)[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32m  # Return the formatted str[m
[34m|[m   [32m+[m[32m  return split_lines[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32moneup_str = str_to_sprite("""[m
[34m|[m   [32m+[m[32m -------[m[41m [m
[34m|[m   [32m+[m[32m-:.._..:-[m
[34m|[m   [32m+[m[32m-..___..-[m
[34m|[m   [32m+[m[32m-:-----:-[m
[34m|[m   [32m+[m[32m--_-_-_--[m
[34m|[m   [32m+[m[32m -_____-[m[41m [m
[34m|[m   [32m+[m[32m  -----[m[41m  [m
[34m|[m   [32m+[m[32m""")[m
[34m|[m   [32m+[m
[34m|[m    images={[m
[34m|[m    'kitty':kitty,[m
[34m|[m    'oneup':oneup,[m
[34m|[m   [36m@@ -84,7 +120,8 @@[m [mimages={[m
[34m|[m    'octocat':octocat,[m
[34m|[m    'octocat2':octocat2,[m
[34m|[m    'hello':hello,[m
[34m|[m   [31m-'hireme':hireme[m
[34m|[m   [32m+[m[32m'hireme':hireme,[m
[34m|[m   [32m+[m[32m'oneup_str':oneup_str[m
[34m|[m    }[m
[34m|[m    [m
[34m|[m    def load_images(imgNames):[m
[34m|[m   [1mdiff --git a/tmp.py b/tmp.py[m
[34m|[m   [1mnew file mode 100644[m
[34m|[m   [1mindex 0000000..1197535[m
[34m|[m   [1m--- /dev/null[m
[34m|[m   [1m+++ b/tmp.py[m
[34m|[m   [36m@@ -0,0 +1,37 @@[m
[34m|[m   [32m+[m[32mascii_to_number = {[m
[34m|[m   [32m+[m[32m  '_': 0,[m
[34m|[m   [32m+[m[32m  '_': 1,[m
[34m|[m   [32m+[m[32m  '.': 2,[m
[34m|[m   [32m+[m[32m  ':': 3,[m
[34m|[m   [32m+[m[32m  '-': 4[m
[34m|[m   [32m+[m[32m}[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32mdef str_to_sprite(content):[m
[34m|[m   [32m+[m[32m  # Break out lines and filter any excess[m
[34m|[m   [32m+[m[32m  lines = content.split('\n')[m
[34m|[m   [32m+[m[32m  def is_empty_line(line):[m
[34m|[m   [32m+[m[32m    return len(line) != 0[m
[34m|[m   [32m+[m[32m  lines = filter(is_empty_line, lines)[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32m  # Break up lines into each character[m
[34m|[m   [32m+[m[32m  split_lines = map(list, lines)[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32m  # Replace each character with its numeric equivalent[m
[34m|[m   [32m+[m[32m  for line in split_lines:[m
[34m|[m   [32m+[m[32m    for index, char in enumerate(line):[m
[34m|[m   [32m+[m[32m      line[index] = ascii_to_number.get(char, 0)[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32m  # Return the formatted str[m
[34m|[m   [32m+[m[32m  return split_lines[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32moneup_str = str_to_sprite("""[m
[34m|[m   [32m+[m[32m -------[m[41m [m
[34m|[m   [32m+[m[32m-:.._..:-[m
[34m|[m   [32m+[m[32m-..___..-[m
[34m|[m   [32m+[m[32m-:-----:-[m
[34m|[m   [32m+[m[32m--_-_-_--[m
[34m|[m   [32m+[m[32m -_____-[m[41m [m
[34m|[m   [32m+[m[32m  -----[m[41m  [m
[34m|[m   [32m+[m[32m""")[m
[34m|[m   [32m+[m
[34m|[m   [32m+[m[32mprint oneup_str[m
[34m|[m   \ No newline at end of file[m
[34m|[m 
* <div id="bded88f" class="tab"><input type="checkbox" name="toggle" id="bded88fcaf362a681f593be0e3344bbd517cf038" class="toggle"><label for="bded88fcaf362a681f593be0e3344bbd517cf038" class="title"><div class="line"><span class="tree"></span><span class="content">bded88f cleaning up</span></div></label><div class="patch">
[35m|[m 
[35m|[m [1mdiff --git a/eric/Cakefile b/eric/Cakefile[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex bf81e57..0000000[m
[35m|[m [1m--- a/eric/Cakefile[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,9 +0,0 @@[m
[35m|[m [31m-spawn = (require 'child_process').spawn[m
[35m|[m [31m-[m
[35m|[m [31m-to_stdio = (emitter) ->[m
[35m|[m [31m-    emitter.stdout.on 'data', (data) -> process.stdout.write data[m
[35m|[m [31m-    emitter.stderr.on 'data', (data) -> process.stderr.write data[m
[35m|[m [31m-    emitter[m
[35m|[m [31m-[m
[35m|[m [31m-task 'build', 'Build game file', (options) ->[m
[35m|[m [31m-    to_stdio spawn 'coffee', ['--compile', 'eric.coffee'][m
[35m|[m [1mdiff --git a/eric/eric.coffee b/eric/eric.coffee[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex 2a58096..0000000[m
[35m|[m [1m--- a/eric/eric.coffee[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,43 +0,0 @@[m
[35m|[m [31m-dx = 20[m
[35m|[m [31m-[nx, ny] = [30, 20][m
[35m|[m [31m-canvas = document.getElementById 'canvas'[m
[35m|[m [31m-[m
[35m|[m [31m-canvas.width = nx*dx[m
[35m|[m [31m-canvas.height = ny*dx[m
[35m|[m [31m-[m
[35m|[m [31m-state = [][m
[35m|[m [31m-for i in [1..ny] by 1[m
[35m|[m [31m-  line = [][m
[35m|[m [31m-  line.push 0 for j in [1..nx] by 1[m
[35m|[m [31m-  state.push line[m
[35m|[m [31m-[m
[35m|[m [31m-ctx = canvas.getContext '2d'[m
[35m|[m [31m-[m
[35m|[m [31m-color = [[m
[35m|[m [31m-  'rgb(255, 255, 255)',[m
[35m|[m [31m-  'rgb(204, 255, 255)',[m
[35m|[m [31m-  'rgb(153, 255, 255)',[m
[35m|[m [31m-  'rgb(102, 255, 255)',[m
[35m|[m [31m-  'rgb(51, 255, 255)',[m
[35m|[m [31m-  'rgb(0, 255, 255)',[m
[35m|[m [31m-][m
[35m|[m [31m-[m
[35m|[m [31m-redraw = () =>[m
[35m|[m [31m-  for i in [0..ny-1] by 1[m
[35m|[m [31m-    for j in [0..nx-1] by 1[m
[35m|[m [31m-      ctx.fillStyle = color[state[i][j]][m
[35m|[m [31m-      ctx.fillRect j*dx, i*dx, dx, dx[m
[35m|[m [31m-[m
[35m|[m [31m-canvas.onmousemove = (e) =>[m
[35m|[m [31m-  if (e.pageX || e.pageY)[m
[35m|[m [31m-    [x, y] = [e.pageX, e.pageY][m
[35m|[m [31m-  else[m
[35m|[m [31m-    x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft[m
[35m|[m [31m-    y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop[m
[35m|[m [31m-  x -= canvas.offsetLeft[m
[35m|[m [31m-  y -= canvas.offsetTop[m
[35m|[m [31m-  [i, j] = [Math.floor(y/dx), Math.floor(x/dx)][m
[35m|[m [31m-  state[i][j] += 1[m
[35m|[m [31m-  state[i][j] %= 6[m
[35m|[m [31m-  redraw()[m
[35m|[m [31m-[m
[35m|[m [1mdiff --git a/eric/eric.js b/eric/eric.js[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex 4fee815..0000000[m
[35m|[m [1m--- a/eric/eric.js[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,66 +0,0 @@[m
[35m|[m [31m-// Generated by CoffeeScript 1.6.2[m
[35m|[m [31m-(function() {[m
[35m|[m [31m-  var canvas, color, ctx, dx, i, j, line, nx, ny, redraw, state, _i, _j, _ref,[m
[35m|[m [31m-    _this = this;[m
[35m|[m [31m-[m
[35m|[m [31m-  dx = 20;[m
[35m|[m [31m-[m
[35m|[m [31m-  _ref = [52, 7], nx = _ref[0], ny = _ref[1];[m
[35m|[m [31m-[m
[35m|[m [31m-  canvas = document.getElementById('canvas');[m
[35m|[m [31m-[m
[35m|[m [31m-  canvas.width = nx * dx;[m
[35m|[m [31m-[m
[35m|[m [31m-  canvas.height = ny * dx;[m
[35m|[m [31m-[m
[35m|[m [31m-  state = [];[m
[35m|[m [31m-[m
[35m|[m [31m-  for (i = _i = 1; _i <= ny; i = _i += 1) {[m
[35m|[m [31m-    line = [];[m
[35m|[m [31m-    for (j = _j = 1; _j <= nx; j = _j += 1) {[m
[35m|[m [31m-      line.push(0);[m
[35m|[m [31m-    }[m
[35m|[m [31m-    state.push(line);[m
[35m|[m [31m-  }[m
[35m|[m [31m-[m
[35m|[m [31m-  ctx = canvas.getContext('2d');[m
[35m|[m [31m-[m
[35m|[m [31m-  color = ['rgb(255, 255, 255)', 'rgb(204, 255, 255)', 'rgb(153, 255, 255)', 'rgb(102, 255, 255)', 'rgb(51, 255, 255)', 'rgb(0, 255, 255)'];[m
[35m|[m [31m-[m
[35m|[m [31m-  redraw = function() {[m
[35m|[m [31m-    var _k, _ref1, _results;[m
[35m|[m [31m-[m
[35m|[m [31m-    _results = [];[m
[35m|[m [31m-    for (i = _k = 0, _ref1 = ny - 1; _k <= _ref1; i = _k += 1) {[m
[35m|[m [31m-      _results.push((function() {[m
[35m|[m [31m-        var _l, _ref2, _results1;[m
[35m|[m [31m-[m
[35m|[m [31m-        _results1 = [];[m
[35m|[m [31m-        for (j = _l = 0, _ref2 = nx - 1; _l <= _ref2; j = _l += 1) {[m
[35m|[m [31m-          ctx.fillStyle = color[state[i][j]];[m
[35m|[m [31m-          _results1.push(ctx.fillRect(j * dx, i * dx, dx, dx));[m
[35m|[m [31m-        }[m
[35m|[m [31m-        return _results1;[m
[35m|[m [31m-      })());[m
[35m|[m [31m-    }[m
[35m|[m [31m-    return _results;[m
[35m|[m [31m-  };[m
[35m|[m [31m-[m
[35m|[m [31m-  canvas.onmousemove = function(e) {[m
[35m|[m [31m-    var x, y, _ref1, _ref2;[m
[35m|[m [31m-[m
[35m|[m [31m-    if (e.pageX || e.pageY) {[m
[35m|[m [31m-      _ref1 = [e.pageX, e.pageY], x = _ref1[0], y = _ref1[1];[m
[35m|[m [31m-    } else {[m
[35m|[m [31m-      x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;[m
[35m|[m [31m-      y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;[m
[35m|[m [31m-    }[m
[35m|[m [31m-    x -= canvas.offsetLeft;[m
[35m|[m [31m-    y -= canvas.offsetTop;[m
[35m|[m [31m-    _ref2 = [Math.floor(y / dx), Math.floor(x / dx)], i = _ref2[0], j = _ref2[1];[m
[35m|[m [31m-    state[i][j] += 1;[m
[35m|[m [31m-    state[i][j] %= 6;[m
[35m|[m [31m-    return redraw();[m
[35m|[m [31m-  };[m
[35m|[m [31m-[m
[35m|[m [31m-}).call(this);[m
[35m|[m [1mdiff --git a/eric/index.html b/eric/index.html[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex 0e58fab..0000000[m
[35m|[m [1m--- a/eric/index.html[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,14 +0,0 @@[m
[35m|[m [31m-<html>[m
[35m|[m [31m-    <head>[m
[35m|[m [31m-        <style type="text/css">[m
[35m|[m [31m-        body{[m
[35m|[m [31m-        margin: 0;[m
[35m|[m [31m-        padding: 0[m
[35m|[m [31m-        }[m
[35m|[m [31m-        </style>[m
[35m|[m [31m-    </head>[m
[35m|[m [31m-    <body>[m
[35m|[m [31m-        <canvas id="canvas">Your browser does no support canvas</canvas>[m
[35m|[m [31m-        <script src="eric.js"> </script>[m
[35m|[m [31m-    </body>[m
[35m|[m [31m-</html>[m
[35m|[m [1mdiff --git a/gitfiti.html b/gitfiti.html[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex 97c7f72..0000000[m
[35m|[m [1m--- a/gitfiti.html[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,109 +0,0 @@[m
[35m|[m [31m-<!DOCTYPE html>[m
[35m|[m [31m-<meta charset="utf-8">[m
[35m|[m [31m-<style>[m
[35m|[m [31m-[m
[35m|[m [31m-body {[m
[35m|[m [31m-  font: 10px sans-serif;[m
[35m|[m [31m-  shape-rendering: crispEdges;[m
[35m|[m [31m-}[m
[35m|[m [31m-[m
[35m|[m [31m-.day {[m
[35m|[m [31m-  fill: #fff;[m
[35m|[m [31m-  stroke: #ccc;[m
[35m|[m [31m-}[m
[35m|[m [31m-[m
[35m|[m [31m-.month {[m
[35m|[m [31m-  fill: none;[m
[35m|[m [31m-  stroke: #000;[m
[35m|[m [31m-  stroke-width: 2px;[m
[35m|[m [31m-}[m
[35m|[m [31m-[m
[35m|[m [31m-.RdYlGn .q0-11{fill:rgb(165,0,38)}[m
[35m|[m [31m-.RdYlGn .q1-11{fill:rgb(215,48,39)}[m
[35m|[m [31m-.RdYlGn .q2-11{fill:rgb(244,109,67)}[m
[35m|[m [31m-.RdYlGn .q3-11{fill:rgb(253,174,97)}[m
[35m|[m [31m-.RdYlGn .q4-11{fill:rgb(254,224,139)}[m
[35m|[m [31m-.RdYlGn .q5-11{fill:rgb(255,255,191)}[m
[35m|[m [31m-.RdYlGn .q6-11{fill:rgb(217,239,139)}[m
[35m|[m [31m-.RdYlGn .q7-11{fill:rgb(166,217,106)}[m
[35m|[m [31m-.RdYlGn .q8-11{fill:rgb(102,189,99)}[m
[35m|[m [31m-.RdYlGn .q9-11{fill:rgb(26,152,80)}[m
[35m|[m [31m-.RdYlGn .q10-11{fill:rgb(0,104,55)}[m
[35m|[m [31m-[m
[35m|[m [31m-</style>[m
[35m|[m [31m-<body>[m
[35m|[m [31m-<script src="http://d3js.org/d3.v3.min.js"></script>[m
[35m|[m [31m-<script>[m
[35m|[m [31m-[m
[35m|[m [31m-var width = 960,[m
[35m|[m [31m-    height = 136,[m
[35m|[m [31m-    cellSize = 17; // cell size[m
[35m|[m [31m-[m
[35m|[m [31m-var day = d3.time.format("%w"),[m
[35m|[m [31m-    week = d3.time.format("%U"),[m
[35m|[m [31m-    percent = d3.format(".1%"),[m
[35m|[m [31m-    format = d3.time.format("%Y-%m-%d");[m
[35m|[m [31m-[m
[35m|[m [31m-var color = d3.scale.quantize()[m
[35m|[m [31m-    .domain([-.05, .05])[m
[35m|[m [31m-    .range(d3.range(11).map(function(d) { return "q" + d + "-11"; }));[m
[35m|[m [31m-[m
[35m|[m [31m-var svg = d3.select("body").selectAll("svg")[m
[35m|[m [31m-    .data(d3.range(1990, 2011))[m
[35m|[m [31m-  .enter().append("svg")[m
[35m|[m [31m-    .attr("width", width)[m
[35m|[m [31m-    .attr("height", height)[m
[35m|[m [31m-    .attr("class", "RdYlGn")[m
[35m|[m [31m-  .append("g")[m
[35m|[m [31m-    .attr("transform", "translate(" + ((width - cellSize * 53) / 2) + "," + (height - cellSize * 7 - 1) + ")");[m
[35m|[m [31m-[m
[35m|[m [31m-svg.append("text")[m
[35m|[m [31m-    .attr("transform", "translate(-6," + cellSize * 3.5 + ")rotate(-90)")[m
[35m|[m [31m-    .style("text-anchor", "middle")[m
[35m|[m [31m-    .text(function(d) { return d; });[m
[35m|[m [31m-[m
[35m|[m [31m-var rect = svg.selectAll(".day")[m
[35m|[m [31m-    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })[m
[35m|[m [31m-  .enter().append("rect")[m
[35m|[m [31m-    .attr("class", "day")[m
[35m|[m [31m-    .attr("width", cellSize)[m
[35m|[m [31m-    .attr("height", cellSize)[m
[35m|[m [31m-    .attr("x", function(d) { return week(d) * cellSize; })[m
[35m|[m [31m-    .attr("y", function(d) { return day(d) * cellSize; })[m
[35m|[m [31m-    .datum(format);[m
[35m|[m [31m-[m
[35m|[m [31m-rect.append("title")[m
[35m|[m [31m-    .text(function(d) { return d; });[m
[35m|[m [31m-[m
[35m|[m [31m-svg.selectAll(".month")[m
[35m|[m [31m-    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })[m
[35m|[m [31m-  .enter().append("path")[m
[35m|[m [31m-    .attr("class", "month")[m
[35m|[m [31m-    .attr("d", monthPath);[m
[35m|[m [31m-[m
[35m|[m [31m-d3.csv("dji.csv", function(error, csv) {[m
[35m|[m [31m-  var data = d3.nest()[m
[35m|[m [31m-    .key(function(d) { return d.Date; })[m
[35m|[m [31m-    .rollup(function(d) { return (d[0].Close - d[0].Open) / d[0].Open; })[m
[35m|[m [31m-    .map(csv);[m
[35m|[m [31m-[m
[35m|[m [31m-  rect.filter(function(d) { return d in data; })[m
[35m|[m [31m-      .attr("class", function(d) { return "day " + color(data[d]); })[m
[35m|[m [31m-    .select("title")[m
[35m|[m [31m-      .text(function(d) { return d + ": " + percent(data[d]); });[m
[35m|[m [31m-});[m
[35m|[m [31m-[m
[35m|[m [31m-function monthPath(t0) {[m
[35m|[m [31m-  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),[m
[35m|[m [31m-      d0 = +day(t0), w0 = +week(t0),[m
[35m|[m [31m-      d1 = +day(t1), w1 = +week(t1);[m
[35m|[m [31m-  return "M" + (w0 + 1) * cellSize + "," + d0 * cellSize[m
[35m|[m [31m-      + "H" + w0 * cellSize + "V" + 7 * cellSize[m
[35m|[m [31m-      + "H" + w1 * cellSize + "V" + (d1 + 1) * cellSize[m
[35m|[m [31m-      + "H" + (w1 + 1) * cellSize + "V" + 0[m
[35m|[m [31m-      + "H" + (w0 + 1) * cellSize + "Z";[m
[35m|[m [31m-}[m
[35m|[m [31m-[m
[35m|[m [31m-d3.select(self.frameElement).style("height", "2910px");[m
[35m|[m [31m-[m
[35m|[m [31m-</script>[m
[35m|[m [1mdiff --git a/gitfiti.js b/gitfiti.js[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex f8599c3..0000000[m
[35m|[m [1m--- a/gitfiti.js[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,43 +0,0 @@[m
[35m|[m [31m-var color = [[m
[35m|[m [31m-  'rgb(255, 255, 255)',[m
[35m|[m [31m-  'rgb(200, 255, 255)',[m
[35m|[m [31m-  'rgb(150, 255, 255)',[m
[35m|[m [31m-  'rgb(100, 255, 255)',[m
[35m|[m [31m-  'rgb(50, 255, 255)',[m
[35m|[m [31m-  'rgb(0, 255, 255)',[m
[35m|[m [31m-][m
[35m|[m [31m-[m
[35m|[m [31m-var paint=0[m
[35m|[m [31m-document.body.addEventListener('mousedown', function(){paint=1;console.log('painting');}, false );[m
[35m|[m [31m-document.body.addEventListener('mouseup',function(){paint=0;console.log('released')}, false);[m
[35m|[m [31m-[m
[35m|[m [31m-function box(){[m
[35m|[m [31m-	var box = document.createElement("div");[m
[35m|[m [31m-	box.value=0;[m
[35m|[m [31m-	box.style.width='25px';[m
[35m|[m [31m-	box.style.height='25px';[m
[35m|[m [31m-	box.style.border='1px solid gray';[m
[35m|[m [31m-	box.style.backgroundColor=color[0];[m
[35m|[m [31m-	box.paint=0[m
[35m|[m [31m-	//box.onclick = function() { cycle(this);};[m
[35m|[m [31m-	box.addEventListener('mousemove', function(){cycle(this);}, false );[m
[35m|[m [31m-	document.body.appendChild(box);[m
[35m|[m [31m-	return box[m
[35m|[m [31m-};[m
[35m|[m [31m-[m
[35m|[m [31m-function boxes(){[m
[35m|[m [31m-	var column = [];[m
[35m|[m [31m-	for (i=0;i<7;i++){[m
[35m|[m [31m-		column[i]=box();[m
[35m|[m [31m-	}[m
[35m|[m [31m-}[m
[35m|[m [31m-[m
[35m|[m [31m-function cycle(object){[m
[35m|[m [31m-	if (paint==1){[m
[35m|[m [31m-	object.value+=0.5;[m
[35m|[m [31m-	object.value%6;[m
[35m|[m [31m-	object.style.backgroundColor=color[object.value];[m
[35m|[m [31m-	}[m
[35m|[m [31m-}[m
[35m|[m [31m-[m
[35m|[m [31m-boxes();[m
[35m|[m \ No newline at end of file[m
[35m|[m [1mdiff --git a/gitfiti_web.py b/gitfiti_web.py[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex 00ce420..0000000[m
[35m|[m [1m--- a/gitfiti_web.py[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,15 +0,0 @@[m
[35m|[m [31m-#!/bin/env python[m
[35m|[m [31m-#gitfiti_web[m
[35m|[m [31m-from bottle import request, route, run, post, template[m
[35m|[m [31m-[m
[35m|[m [31m-@route("/")[m
[35m|[m [31m-def index():[m
[35m|[m [31m-	return template('index')[m
[35m|[m [31m-[m
[35m|[m [31m-@route()[m
[35m|[m [31m-[m
[35m|[m [31m-def main():[m
[35m|[m [31m-	run(host='localhost', port=8080, debug=True, reloader=True)[m
[35m|[m [31m-[m
[35m|[m [31m-if __name__ == '__main__':[m
[35m|[m [31m-	main()[m
[35m|[m \ No newline at end of file[m
[35m|[m [1mdiff --git a/text.html b/text.html[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex 1f2ac98..0000000[m
[35m|[m [1m--- a/text.html[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,5 +0,0 @@[m
[35m|[m [31m-<!DOCTYPE html>[m
[35m|[m [31m-<head>[m
[35m|[m [31m-</head>[m
[35m|[m [31m-<body><script src='gitfiti.js'></script>[m
[35m|[m [31m-</body>[m
[35m|[m [1mdiff --git a/views/index.tpl b/views/index.tpl[m
[35m|[m [1mdeleted file mode 100644[m
[35m|[m [1mindex b312833..0000000[m
[35m|[m [1m--- a/views/index.tpl[m
[35m|[m [1m+++ /dev/null[m
[35m|[m [36m@@ -1,7 +0,0 @@[m
[35m|[m [31m-login page[m
[35m|[m [31m-<html>[m
[35m|[m [31m-<head>[m
[35m|[m [31m-<form>[m
[35m|[m [31m-	<input>[m
[35m|[m [31m-</form>[m
[35m|[m [31m-[m
[35m|[m 
* <div id="58289a2" class="tab"><input type="checkbox" name="toggle" id="58289a28b6e63828abbf591a394f3ce50c3b98d6" class="toggle"><label for="58289a28b6e63828abbf591a394f3ce50c3b98d6" class="title"><div class="line"><span class="tree"></span><span class="content">58289a2 fixed load_images to allow blank input</span></div></label><div class="patch">
[35m|[m 
[35m|[m [1mdiff --git a/README.md b/README.md[m
[35m|[m [1mindex e91b352..e15e900 100644[m
[35m|[m [1m--- a/README.md[m
[35m|[m [1m+++ b/README.md[m
[35m|[m [36m@@ -50,9 +50,9 @@[m [mFortunately if you regret your gitfiti in the morning, removing it is fairly eas[m
[35m|[m  [m
[35m|[m  ---[m
[35m|[m  ####Todo:[m
[35m|[m [31m-- ~~Remove 'requests' dependency~~[m
[35m|[m [32m+[m[32m- ~~Remove 'requests' dependency~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[35m|[m  - Web interface[m
[35m|[m [31m-- ~~Load "art" from a file~~[m
[35m|[m [32m+[m[32m- ~~Load "art" from a file~~ [_thanks empathetic-alligator_](https://github.com/empathetic-alligator)[m
[35m|[m  - Load commit content from a file[m
[35m|[m  - ...[m
[35m|[m  - Profit?[m
[35m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[35m|[m [1mindex 8e5e69d..8ea7c84 100755[m
[35m|[m [1m--- a/gitfiti.py[m
[35m|[m [1m+++ b/gitfiti.py[m
[35m|[m [36m@@ -89,6 +89,8 @@[m [mimages={[m
[35m|[m  [m
[35m|[m  def load_images(imgNames):[m
[35m|[m  	"""loads user images from given file(s)"""[m
[35m|[m [32m+[m	[32mif imgNames[0]=='':[m
[35m|[m [32m+[m		[32mreturn dict()[m
[35m|[m  	for imageName in imgNames:[m
[35m|[m  		img = open(imageName)[m
[35m|[m  		loadedImgs = {}[m
[35m|[m   
*   <div id="6c4020a" class="tab"><input type="checkbox" name="toggle" id="6c4020abd6af267b27b007546a474227275c82dc" class="toggle"><label for="6c4020abd6af267b27b007546a474227275c82dc" class="title"><div class="line"><span class="tree"></span><span class="content">6c4020a Merge pull request #4 from empathetic-alligator/master</span></div></label><div class="patch">
[36m|[m[1;31m\[m  
[36m|[m [1;31m|[m 
[36m|[m * <div id="4903cda" class="tab"><input type="checkbox" name="toggle" id="4903cda740133b5c3c19b85ad34acf29f0647f5e" class="toggle"><label for="4903cda740133b5c3c19b85ad34acf29f0647f5e" class="title"><div class="line"><span class="tree"></span><span class="content">4903cda Fixed code block formatting.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/README.md b/README.md[m
[36m|[m [1;31m|[m [1mindex 4df96be..e91b352 100644[m
[36m|[m [1;31m|[m [1m--- a/README.md[m
[36m|[m [1;31m|[m [1m+++ b/README.md[m
[36m|[m [1;31m|[m [36m@@ -30,7 +30,7 @@[m [mThe file format for personal templates is the following:[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  For example:[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [31m-'''[m
[36m|[m [1;31m|[m [32m+[m[32m```[m
[36m|[m [1;31m|[m  :center-blank[m
[36m|[m [1;31m|[m  [[1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m [36m@@ -39,7 +39,7 @@[m [mFor example:[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1]][m
[36m|[m [1;31m|[m [31m-'''[m
[36m|[m [1;31m|[m [32m+[m[32m```[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  This would output a 7 x 7 light green square with a single blank center square.[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m 
[36m|[m * <div id="94b5321" class="tab"><input type="checkbox" name="toggle" id="94b53214685fe9f4fec0fb41a3dfeb7e495d99b2" class="toggle"><label for="94b53214685fe9f4fec0fb41a3dfeb7e495d99b2" class="title"><div class="line"><span class="tree"></span><span class="content">94b5321 Put example template in code block.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/README.md b/README.md[m
[36m|[m [1;31m|[m [1mindex e8e17db..4df96be 100644[m
[36m|[m [1;31m|[m [1m--- a/README.md[m
[36m|[m [1;31m|[m [1m+++ b/README.md[m
[36m|[m [1;31m|[m [36m@@ -30,6 +30,7 @@[m [mThe file format for personal templates is the following:[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  For example:[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [32m+[m[32m'''[m
[36m|[m [1;31m|[m  :center-blank[m
[36m|[m [1;31m|[m  [[1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m [36m@@ -38,6 +39,7 @@[m [mFor example:[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m  [1,1,1,1,1,1,1]][m
[36m|[m [1;31m|[m [32m+[m[32m'''[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  This would output a 7 x 7 light green square with a single blank center square.[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m 
[36m|[m * <div id="599358d" class="tab"><input type="checkbox" name="toggle" id="599358d30c2a7dd8a82dea5db52e3bd37a4fc597" class="toggle"><label for="599358d30c2a7dd8a82dea5db52e3bd37a4fc597" class="title"><div class="line"><span class="tree"></span><span class="content">599358d Changed README.md to described added functionality. Also edited gitfiti.py to accept template files with newlines between templates.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/README.md b/README.md[m
[36m|[m [1;31m|[m [1mindex 5bfc494..e8e17db 100644[m
[36m|[m [1;31m|[m [1m--- a/README.md[m
[36m|[m [1;31m|[m [1m+++ b/README.md[m
[36m|[m [1;31m|[m [36m@@ -20,6 +20,29 @@[m [mIncluded "art" from left to right: kitty, oneup, oneup2, hackerschool, octocat,[m
[36m|[m [1;31m|[m  3. Run the generated `gitfiti.sh` from your home directory (or any non-git tracked dir) and watch it go to work.[m
[36m|[m [1;31m|[m  4. Wait... Seriously, you'll probably need to wait a day or two for the gitfiti to show in your commit graph.[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [32m+[m[32m### User Templates[m
[36m|[m [1;31m|[m [32m+[m[32mThe file format for personal templates is the following:[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32m1. Each template starts off with a ":" and then a name (eg. ":foo")[m
[36m|[m [1;31m|[m [32m+[m[32m2. Each line after that is part of a json-recognizable array.[m
[36m|[m [1;31m|[m [32m+[m[32m3. The array contain values 0-4, 0 being blank and 4 being dark green.[m
[36m|[m [1;31m|[m [32m+[m[32m4. To add multiple templates, just add another name tag as described in 1.[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32mFor example:[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32m:center-blank[m
[36m|[m [1;31m|[m [32m+[m[32m[[1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m [32m+[m[32m[1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m [32m+[m[32m[1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m [32m+[m[32m[1,1,1,0,1,1,1],[m
[36m|[m [1;31m|[m [32m+[m[32m[1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m [32m+[m[32m[1,1,1,1,1,1,1],[m
[36m|[m [1;31m|[m [32m+[m[32m[1,1,1,1,1,1,1]][m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32mThis would output a 7 x 7 light green square with a single blank center square.[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m [32m+[m[32mOnce you have a file with templates, enter its name when prompted and the templates will be added to the list of options.[m
[36m|[m [1;31m|[m [32m+[m
[36m|[m [1;31m|[m  ###Removal:[m
[36m|[m [1;31m|[m  Fortunately if you regret your gitfiti in the morning, removing it is fairly easy: delete the repo you created for your gitfiti (and wait).[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m [36m@@ -27,7 +50,7 @@[m [mFortunately if you regret your gitfiti in the morning, removing it is fairly eas[m
[36m|[m [1;31m|[m  ####Todo:[m
[36m|[m [1;31m|[m  - ~~Remove 'requests' dependency~~[m
[36m|[m [1;31m|[m  - Web interface[m
[36m|[m [1;31m|[m [31m-- Load "art" from a file[m
[36m|[m [1;31m|[m [32m+[m[32m- ~~Load "art" from a file~~[m
[36m|[m [1;31m|[m  - Load commit content from a file[m
[36m|[m [1;31m|[m  - ...[m
[36m|[m [1;31m|[m  - Profit?[m
[36m|[m [1;31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;31m|[m [1mindex 5a7bf50..8e5e69d 100755[m
[36m|[m [1;31m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;31m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;31m|[m [36m@@ -98,9 +98,10 @@[m [mdef load_images(imgNames):[m
[36m|[m [1;31m|[m  		name = name[1:][m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  		while True:[m
[36m|[m [1;31m|[m [31m-			imgLine = img.readline().replace('\n', '')[m
[36m|[m [1;31m|[m [32m+[m			[32mimgLine = img.readline()[m
[36m|[m [1;31m|[m  			if imgLine == '':[m
[36m|[m [1;31m|[m  				break[m
[36m|[m [1;31m|[m [32m+[m			[32mimgLine.replace('\n', '')[m
[36m|[m [1;31m|[m  			if(imgLine[0] == ':'):[m
[36m|[m [1;31m|[m  				loadedImgs[name] = json.loads(imgList)[m
[36m|[m [1;31m|[m  				name = imgLine[1:][m
[36m|[m [1;31m|[m 
[36m|[m * <div id="8e3cb8e" class="tab"><input type="checkbox" name="toggle" id="8e3cb8e37fe6573cf7f47ae9f854e70573c253c0" class="toggle"><label for="8e3cb8e37fe6573cf7f47ae9f854e70573c253c0" class="title"><div class="line"><span class="tree"></span><span class="content">8e3cb8e Removed an unused variable.</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;31m|[m [1mindex 3e47167..5a7bf50 100755[m
[36m|[m [1;31m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;31m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;31m|[m [36m@@ -92,7 +92,6 @@[m [mdef load_images(imgNames):[m
[36m|[m [1;31m|[m  	for imageName in imgNames:[m
[36m|[m [1;31m|[m  		img = open(imageName)[m
[36m|[m [1;31m|[m  		loadedImgs = {}[m
[36m|[m [1;31m|[m [31m-		first = True[m
[36m|[m [1;31m|[m  		imgList = ''[m
[36m|[m [1;31m|[m  		imgLine = ' '[m
[36m|[m [1;31m|[m  		name = img.readline().replace('\n', '')[m
[36m|[m [1;31m|[m 
[36m|[m * <div id="140cef9" class="tab"><input type="checkbox" name="toggle" id="140cef972a76007e6cbba85fbbb2d2012bdac352" class="toggle"><label for="140cef972a76007e6cbba85fbbb2d2012bdac352" class="title"><div class="line"><span class="tree"></span><span class="content">140cef9 Removed a debug line I forgot about</span></div></label><div class="patch">
[36m|[m [1;31m|[m 
[36m|[m [1;31m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m [1;31m|[m [1mindex ee1f6cd..3e47167 100755[m
[36m|[m [1;31m|[m [1m--- a/gitfiti.py[m
[36m|[m [1;31m|[m [1m+++ b/gitfiti.py[m
[36m|[m [1;31m|[m [36m@@ -109,7 +109,6 @@[m [mdef load_images(imgNames):[m
[36m|[m [1;31m|[m  			else:[m
[36m|[m [1;31m|[m  				imgList += imgLine[m
[36m|[m [1;31m|[m  	loadedImgs[name] = json.loads(imgList)[m
[36m|[m [1;31m|[m [31m-	print(loadedImgs)[m
[36m|[m [1;31m|[m  	return loadedImgs[m
[36m|[m [1;31m|[m  [m
[36m|[m [1;31m|[m  def get_calendar(username):[m
[36m|[m [1;31m|[m 
[36m|[m * <div id="12d29ee" class="tab"><input type="checkbox" name="toggle" id="12d29ee56176c62f767027d3f25386911c45bd9a" class="toggle"><label for="12d29ee56176c62f767027d3f25386911c45bd9a" class="title"><div class="line"><span class="tree"></span><span class="content">12d29ee Implemented support for user images.</span></div></label><div class="patch">
[36m|[m[36m/[m  
[36m|[m   
[36m|[m   [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[36m|[m   [1mindex 61cc45e..ee1f6cd 100755[m
[36m|[m   [1m--- a/gitfiti.py[m
[36m|[m   [1m+++ b/gitfiti.py[m
[36m|[m   [36m@@ -87,6 +87,31 @@[m [mimages={[m
[36m|[m    'hireme':hireme[m
[36m|[m    }[m
[36m|[m    [m
[36m|[m   [32m+[m[32mdef load_images(imgNames):[m
[36m|[m   [32m+[m	[32m"""loads user images from given file(s)"""[m
[36m|[m   [32m+[m	[32mfor imageName in imgNames:[m
[36m|[m   [32m+[m		[32mimg = open(imageName)[m
[36m|[m   [32m+[m		[32mloadedImgs = {}[m
[36m|[m   [32m+[m		[32mfirst = True[m
[36m|[m   [32m+[m		[32mimgList = ''[m
[36m|[m   [32m+[m		[32mimgLine = ' '[m
[36m|[m   [32m+[m		[32mname = img.readline().replace('\n', '')[m
[36m|[m   [32m+[m		[32mname = name[1:][m
[36m|[m   [32m+[m
[36m|[m   [32m+[m		[32mwhile True:[m
[36m|[m   [32m+[m			[32mimgLine = img.readline().replace('\n', '')[m
[36m|[m   [32m+[m			[32mif imgLine == '':[m
[36m|[m   [32m+[m				[32mbreak[m
[36m|[m   [32m+[m			[32mif(imgLine[0] == ':'):[m
[36m|[m   [32m+[m				[32mloadedImgs[name] = json.loads(imgList)[m
[36m|[m   [32m+[m				[32mname = imgLine[1:][m
[36m|[m   [32m+[m				[32mimgList = ''[m
[36m|[m   [32m+[m			[32melse:[m
[36m|[m   [32m+[m				[32mimgList += imgLine[m
[36m|[m   [32m+[m	[32mloadedImgs[name] = json.loads(imgList)[m
[36m|[m   [32m+[m	[32mprint(loadedImgs)[m
[36m|[m   [32m+[m	[32mreturn loadedImgs[m
[36m|[m   [32m+[m
[36m|[m    def get_calendar(username):[m
[36m|[m    	"""retrieves the github commit calendar data for a username"""[m
[36m|[m    	BASEURL='https://github.com/'[m
[36m|[m   [36m@@ -165,6 +190,7 @@[m [mdef save(output, filename):[m
[36m|[m    	f.close()[m
[36m|[m    [m
[36m|[m    def main():[m
[36m|[m   [32m+[m	[32mglobal images[m
[36m|[m    	print '''[m
[36m|[m              _ __  _____ __  _ [m
[36m|[m       ____ _(_) /_/ __(_) /_(_)[m
[36m|[m   [36m@@ -186,6 +212,10 @@[m [mdef main():[m
[36m|[m    	if offset == None: offset = 0[m
[36m|[m    	else: offset = int(offset)[m
[36m|[m    [m
[36m|[m   [32m+[m	[32mprint 'enter file(s) to load images from (blank if not applicable)'[m
[36m|[m   [32m+[m	[32mimgNames = raw_input(">").split(' ')[m
[36m|[m   [32m+[m	[32mimages = dict(images, **load_images(imgNames))[m
[36m|[m   [32m+[m
[36m|[m    	print 'enter the image name to gitfiti'[m
[36m|[m    	print 'images: ' + ", ".join(images.keys())[m
[36m|[m    	image = raw_input(">")[m
[36m|[m 
* <div id="3ad59a2" class="tab"><input type="checkbox" name="toggle" id="3ad59a2a19ef2af2619a21aadd5e55da66c4770e" class="toggle"><label for="3ad59a2a19ef2af2619a21aadd5e55da66c4770e" class="title"><div class="line"><span class="tree"></span><span class="content">3ad59a2 Update README.md</span></div></label><div class="patch">
[1;31m|[m 
[1;31m|[m [1mdiff --git a/README.md b/README.md[m
[1;31m|[m [1mindex 17411b9..5bfc494 100644[m
[1;31m|[m [1m--- a/README.md[m
[1;31m|[m [1m+++ b/README.md[m
[1;31m|[m [36m@@ -1,9 +1,18 @@[m
[1;31m|[m [31m-gitfiti _noun_ : carefully crafted graffiti in a github commit history calendar.[m
[1;31m|[m [31m-<img src='https://raw.github.com/gelstudios/gitfiti/master/pixels-large.png' alt='gitfiti art'/>[m
[1;31m|[m [32m+[m[32mgitfiti _noun_ : Carefully crafted graffiti in a github commit history calendar.[m[41m  [m
[1;31m|[m  [m
[1;31m|[m [31m-`gitfiti.py` is a tool I wrote to decorate your github account's commit history calendar by (blatantly) abusing git.[m
[1;31m|[m [32m+[m[32mAn example of gitfiti in the wild:[m[41m  [m
[1;31m|[m [32m+[m[32m![alt text](https://raw.github.com/gelstudios/gitfiti/master/gitfiti-screenshot.png "screenshot")[m
[1;31m|[m  [m
[1;31m|[m [31m-I highly recommend that you create a _new_ github repo when using gitfiti.[m
[1;31m|[m [32m+[m[32m`gitfiti.py` is a tool I wrote to decorate your github account's commit history calendar by (blatantly) abusing git's ability to accept commits _in the past_.[m
[1;31m|[m [32m+[m
[1;31m|[m [32m+[m[32mHow?  `gitfiti.py` generates a bash script: `gitfiti.sh` that makes commits with the GIT_AUTHOR_DATE and GIT_COMMITTER_DATE environment variables set for each targeted pixel.[m
[1;31m|[m [32m+[m
[1;31m|[m [32m+[m[32mSince this is likely to clobber repo's history, I highly recommend that you create a _new_ github repo when using gitfiti. Also, the generated bash script assumes you are using public-key authentication with git.[m
[1;31m|[m [32m+[m[41m  [m
[1;31m|[m [32m+[m[41m  [m
[1;31m|[m [32m+[m[32m###Pixel Art:[m
[1;31m|[m [32m+[m[32m![alt text](https://raw.github.com/gelstudios/gitfiti/master/pixels-large.png "pixel art")[m[41m  [m
[1;31m|[m [32m+[m[32mIncluded "art" from left to right: kitty, oneup, oneup2, hackerschool, octocat, octocat2[m
[1;31m|[m  [m
[1;31m|[m  ###Usage:[m
[1;31m|[m  1. Create a new github repo to store your handiwork.[m
[1;31m|[m [36m@@ -16,11 +25,12 @@[m [mFortunately if you regret your gitfiti in the morning, removing it is fairly eas[m
[1;31m|[m  [m
[1;31m|[m  ---[m
[1;31m|[m  ####Todo:[m
[1;31m|[m [31m-- Remove 'requests' dependency[m
[1;31m|[m [32m+[m[32m- ~~Remove 'requests' dependency~~[m
[1;31m|[m  - Web interface[m
[1;31m|[m  - Load "art" from a file[m
[1;31m|[m  - Load commit content from a file[m
[1;31m|[m  - ...[m
[1;31m|[m  - Profit?[m
[1;31m|[m [31m-[m
[1;31m|[m [32m+[m[41m  [m
[1;31m|[m [32m+[m[41m  [m
[1;31m|[m  ![alt text](http://f.cl.ly/items/0J463J0K1N020S1Q3E3l/er-small.png "tiny logo")[m
[1;31m|[m   
*   <div id="7e054c1" class="tab"><input type="checkbox" name="toggle" id="7e054c1f6c40a055921014ff5a3a5cdf13d98c0b" class="toggle"><label for="7e054c1f6c40a055921014ff5a3a5cdf13d98c0b" class="title"><div class="line"><span class="tree"></span><span class="content">7e054c1 Merge pull request #3 from empathetic-alligator/master</span></div></label><div class="patch">
[1;32m|[m [1;33m\[m  
[1;32m|[m [1;33m|[m 
[1;32m|[m * <div id="d639d75" class="tab"><input type="checkbox" name="toggle" id="d639d759bf2651d7d6727a3f0e142302d8df8016" class="toggle"><label for="d639d759bf2651d7d6727a3f0e142302d8df8016" class="title"><div class="line"><span class="tree"></span><span class="content">d639d75 Used json.load instead of loads (no need to read out file).</span></div></label><div class="patch">
[1;32m|[m [1;33m|[m 
[1;32m|[m [1;33m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;32m|[m [1;33m|[m [1mindex 2ac4a89..61cc45e 100755[m
[1;32m|[m [1;33m|[m [1m--- a/gitfiti.py[m
[1;32m|[m [1;33m|[m [1m+++ b/gitfiti.py[m
[1;32m|[m [1;33m|[m [36m@@ -91,8 +91,8 @@[m [mdef get_calendar(username):[m
[1;32m|[m [1;33m|[m  	"""retrieves the github commit calendar data for a username"""[m
[1;32m|[m [1;33m|[m  	BASEURL='https://github.com/'[m
[1;32m|[m [1;33m|[m  	url = BASEURL + 'users/' + username + '/contributions_calendar_data'[m
[1;32m|[m [1;33m|[m [31m-	page = urllib2.urlopen(url).read()[m
[1;32m|[m [1;33m|[m [31m-	return json.loads(page)[m
[1;32m|[m [1;33m|[m [32m+[m	[32mpage = urllib2.urlopen(url)[m
[1;32m|[m [1;33m|[m [32m+[m	[32mreturn json.load(page)[m
[1;32m|[m [1;33m|[m  [m
[1;32m|[m [1;33m|[m  def max_commits(input):[m
[1;32m|[m [1;33m|[m  	"""finds the highest number of commits in one day"""[m
[1;32m|[m [1;33m|[m 
[1;32m|[m * <div id="b4c88ba" class="tab"><input type="checkbox" name="toggle" id="b4c88ba22974c08abb50d269ba81f83f0bcdad06" class="toggle"><label for="b4c88ba22974c08abb50d269ba81f83f0bcdad06" class="title"><div class="line"><span class="tree"></span><span class="content">b4c88ba Removed dependancy on requsts (urllib2 and json instead).</span></div></label><div class="patch">
[1;32m|[m [1;33m|[m 
[1;32m|[m [1;33m|[m [1mdiff --git a/gitfiti.py b/gitfiti.py[m
[1;32m|[m [1;33m|[m [1mindex 6e4b017..2ac4a89 100755[m
[1;32m|[m [1;33m|[m [1m--- a/gitfiti.py[m
[1;32m|[m [1;33m|[m [1m+++ b/gitfiti.py[m
[1;32m|[m [1;33m|[m [36m@@ -1,10 +1,5 @@[m
[1;32m|[m [1;33m|[m  #!/usr/bin/env python[m
[1;32m|[m [1;33m|[m [31m-import os, sys, datetime, math, itertools[m
[1;32m|[m [1;33m|[m [31m-try:[m
[1;32m|[m [1;33m|[m [31m-	import requests[m
[1;32m|[m [1;33m|[m [31m-except:[m
[1;32m|[m [1;33m|[m [31m-	print 'the requests module is required'[m
[1;32m|[m [1;33m|[m [31m-	exit(1)[m
[1;32m|[m [1;33m|[m [32m+[m[32mimport os, sys, datetime, math, itertools, urllib2, json[m
[1;32m|[m [1;33m|[m  [m
[1;32m|[m [1;33m|[m  title='''[m
[1;32m|[m [1;33m|[m  '''[m
[1;32m|[m [1;33m|[m [36m@@ -96,8 +91,8 @@[m [mdef get_calendar(username):[m
[1;32m|[m [1;33m|[m  	"""retrieves the github commit calendar data for a username"""[m
[1;32m|[m [1;33m|[m  	BASEURL='https://github.com/'[m
[1;32m|[m [1;33m|[m  	url = BASEURL + 'users/' + username + '/contributions_calendar_data'[m
[1;32m|[m [1;33m|[m [31m-	req = requests.get(url)[m
[1;32m|[m [1;33m|[m [31m-	return req.json()[m
[1;32m|[m [1;33m|[m [32m+[m	[32mpage = urllib2.urlopen(url).read()[m
[1;32m|[m [1;33m|[m [32m+[m	[32mreturn json.loads(page)[m
[1;32m|[m [1;33m|[m  [m
[1;32m|[m [1;33m|[m  def max_commits(input):[m
[1;32m|[m [1;33m|[m  	"""finds the highest number of commits in one day"""[m
[1;32m|[m [1;33m|[m 
* [1;33m|[m <div id="f6cbc1a" class="tab"><input type="checkbox" name="toggle" id="f6cbc1aced2ace9887d3aa863e4aa0e67afdd0d3" class="toggle"><label for="f6cbc1aced2ace9887d3aa863e4aa0e67afdd0d3" class="title"><div class="line"><span class="tree"></span><span class="content">f6cbc1a new screenshot</span></div></label><div class="patch">
[1;33m|[m[1;33m/[m  
[1;33m|[m   
[1;33m|[m   [1mdiff --git a/gitfiti-screenshot.png b/gitfiti-screenshot.png[m
[1;33m|[m   [1mnew file mode 100644[m
[1;33m|[m   [1mindex 0000000..a0cc510[m
